{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "CoinsReleasedToOwner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Received",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "addy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "buyTheDip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "percentDrop",
          "type": "uint32"
        }
      ],
      "name": "createCollectible",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "destroyAndRefund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "imageURI",
          "type": "string"
        }
      ],
      "name": "formatTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addy",
          "type": "address"
        }
      ],
      "name": "getAllNFTsByOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "highestDip",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "performUpkeepTest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "profitReceiver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "redip",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "_dipLevel",
          "type": "uint8"
        }
      ],
      "name": "setDipLevel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_energy",
          "type": "uint256"
        }
      ],
      "name": "setEnergy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_tokenURI",
          "type": "string"
        }
      ],
      "name": "setTokenURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "svg",
          "type": "string"
        }
      ],
      "name": "svgToImageURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenIdToDipLevel",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenIdToDipPercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenIdToDipValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenIdToEnergy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenIdToIsWaitingToBuy",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenIdToStableCoin",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalStableCoin",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/access/Ownable.sol",
    "1": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/introspection/ERC165.sol",
    "10": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Context.sol",
    "11": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/EnumerableMap.sol",
    "12": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/EnumerableSet.sol",
    "13": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Strings.sol",
    "16": "C:/Users/David/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
    "17": "C:/Users/David/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/interfaces/KeeperCompatibleInterface.sol",
    "2": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/introspection/IERC165.sol",
    "20": "contracts/BuyTheDipNFT.sol",
    "21": "contracts/helpers/Base64.sol",
    "23": "interfaces/IERC20.sol",
    "26": "interfaces/IUniswapV2Router01.sol",
    "27": "interfaces/IUniswapV2Router02.sol",
    "3": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/math/SafeMath.sol",
    "4": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC721/ERC721.sol",
    "5": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC721/IERC721.sol",
    "6": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC721/IERC721Enumerable.sol",
    "7": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC721/IERC721Metadata.sol",
    "8": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC721/IERC721Receiver.sol",
    "9": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/utils/Address.sol"
  },
  "ast": {
    "absolutePath": "contracts/BuyTheDipNFT.sol",
    "exportedSymbols": {
      "BuyTheDipNFT": [
        2760
      ],
      "DipStaking": [
        1020
      ],
      "ERC721TokenReceiver": [
        349
      ],
      "IyUSDC": [
        333
      ],
      "UniswapHelpers": [
        262
      ]
    },
    "id": 2761,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:20"
      },
      {
        "absolutePath": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 2761,
        "sourceUnit": 3814,
        "src": "62:57:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/David/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/VRFConsumerBase.sol",
        "file": "@chainlink/contracts/src/v0.6/VRFConsumerBase.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 2761,
        "sourceUnit": 3939,
        "src": "120:59:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/David/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 2761,
        "sourceUnit": 3985,
        "src": "180:76:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/console.sol",
        "file": "contracts/helpers/console.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 2761,
        "sourceUnit": 12369,
        "src": "257:39:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/David/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/interfaces/KeeperCompatibleInterface.sol",
        "file": "@chainlink/contracts/src/v0.6/interfaces/KeeperCompatibleInterface.sol",
        "id": 6,
        "nodeType": "ImportDirective",
        "scope": 2761,
        "sourceUnit": 4004,
        "src": "297:80:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/David/.brownie/packages/OpenZeppelin/openzeppelin-contracts@3.4.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 7,
        "nodeType": "ImportDirective",
        "scope": 2761,
        "sourceUnit": 2871,
        "src": "378:52:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/helpers/Base64.sol",
        "file": "contracts/helpers/Base64.sol",
        "id": 8,
        "nodeType": "ImportDirective",
        "scope": 2761,
        "sourceUnit": 4305,
        "src": "478:38:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IUniswapV2Router02.sol",
        "file": "interfaces/IUniswapV2Router02.sol",
        "id": 9,
        "nodeType": "ImportDirective",
        "scope": 2761,
        "sourceUnit": 12836,
        "src": "517:43:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IUniswapV2Pair.sol",
        "file": "interfaces/IUniswapV2Pair.sol",
        "id": 10,
        "nodeType": "ImportDirective",
        "scope": 2761,
        "sourceUnit": 12748,
        "src": "561:39:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IUniswapV2Factory.sol",
        "file": "interfaces/IUniswapV2Factory.sol",
        "id": 11,
        "nodeType": "ImportDirective",
        "scope": 2761,
        "sourceUnit": 12506,
        "src": "601:42:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IERC20.sol",
        "file": "interfaces/IERC20.sol",
        "id": 12,
        "nodeType": "ImportDirective",
        "scope": 2761,
        "sourceUnit": 12443,
        "src": "644:31:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": null,
        "fullyImplemented": true,
        "id": 262,
        "linearizedBaseContracts": [
          262
        ],
        "name": "UniswapHelpers",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 117,
              "nodeType": "Block",
              "src": "1244:1679:20",
              "statements": [
                {
                  "assignments": [
                    33
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33,
                      "mutability": "mutable",
                      "name": "path",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 117,
                      "src": "1255:21:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 31,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1255:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 32,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "1255:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 39,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 37,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1293:1:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 36,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1279:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 34,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1283:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 35,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "1283:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1279:16:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1255:40:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 40,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "1305:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 42,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 41,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1310:1:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1305:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 43,
                      "name": "tokenContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "1315:20:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1305:30:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "1305:30:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 46,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "1416:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 48,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 47,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1421:1:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1416:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 49,
                          "name": "_router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "1426:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Router02_$12835",
                            "typeString": "contract IUniswapV2Router02"
                          }
                        },
                        "id": 50,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "WETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15193,
                        "src": "1426:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                          "typeString": "function () pure external returns (address)"
                        }
                      },
                      "id": 51,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1426:14:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1416:24:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 53,
                  "nodeType": "ExpressionStatement",
                  "src": "1416:24:20"
                },
                {
                  "assignments": [
                    55
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55,
                      "mutability": "mutable",
                      "name": "minTokensToReceive",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 117,
                      "src": "2316:26:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 54,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2316:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 56,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2316:26:20"
                },
                {
                  "id": 78,
                  "nodeType": "Block",
                  "src": "2386:166:20",
                  "statements": [
                    {
                      "assignments": [
                        58
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 58,
                          "mutability": "mutable",
                          "name": "receivable",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 78,
                          "src": "2400:18:20",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 57,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2400:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 66,
                      "initialValue": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 61,
                              "name": "tokenAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14,
                              "src": "2443:11:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 62,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33,
                              "src": "2456:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 59,
                              "name": "_router",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20,
                              "src": "2421:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV2Router02_$12835",
                                "typeString": "contract IUniswapV2Router02"
                              }
                            },
                            "id": 60,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getAmountsOut",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15477,
                            "src": "2421:21:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
                            }
                          },
                          "id": 63,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2421:40:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 65,
                        "indexExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 64,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2462:1:20",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2421:43:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "2400:64:20"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 67,
                          "name": "minTokensToReceive",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "2478:18:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 73,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 68,
                              "name": "receivable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "2499:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 71,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "3130303030",
                                    "id": 69,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2513:5:20",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10000_by_1",
                                      "typeString": "int_const 10000"
                                    },
                                    "value": "10000"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "id": 70,
                                    "name": "_swapSlippage",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 22,
                                    "src": "2521:13:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2513:21:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 72,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2512:23:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2499:36:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "3130303030",
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2536:5:20",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000_by_1",
                              "typeString": "int_const 10000"
                            },
                            "value": "10000"
                          },
                          "src": "2499:42:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2478:63:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 77,
                      "nodeType": "ExpressionStatement",
                      "src": "2478:63:20"
                    }
                  ]
                },
                {
                  "assignments": [
                    83
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83,
                      "mutability": "mutable",
                      "name": "amounts",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 117,
                      "src": "2562:24:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 81,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2562:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 82,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2562:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 93,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 86,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "2632:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 87,
                        "name": "minTokensToReceive",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "2657:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 88,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "2738:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 89,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "2756:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 90,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "2772:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2772:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 84,
                        "name": "_router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "2589:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Router02_$12835",
                          "typeString": "contract IUniswapV2Router02"
                        }
                      },
                      "id": 85,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swapExactTokensForETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15418,
                      "src": "2589:29:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2589:208:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2562:235:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 99,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 95,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 83,
                              "src": "2816:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 97,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 96,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2824:1:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2816:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 98,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2830:1:20",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2816:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2835:1:20",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 101,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 83,
                              "src": "2840:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 103,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 102,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2848:1:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2840:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2835:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2816:34:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "737761704578616374455448206661696c65642e",
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2852:22:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_488ce11dfd847e0565a315eaae24af89f839d89fa0c8cb1a2376ece860210f1f",
                          "typeString": "literal_string \"swapExactETH failed.\""
                        },
                        "value": "swapExactETH failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_488ce11dfd847e0565a315eaae24af89f839d89fa0c8cb1a2376ece860210f1f",
                          "typeString": "literal_string \"swapExactETH failed.\""
                        }
                      ],
                      "id": 94,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2808:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2808:67:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "2808:67:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 109,
                          "name": "amounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83,
                          "src": "2893:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 111,
                        "indexExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2901:1:20",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2893:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 112,
                          "name": "amounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83,
                          "src": "2905:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 114,
                        "indexExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2913:1:20",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2905:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 115,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2892:24:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 28,
                  "id": 116,
                  "nodeType": "Return",
                  "src": "2885:31:20"
                }
              ]
            },
            "documentation": null,
            "id": 118,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_swapExactTokensForETH",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14,
                  "mutability": "mutable",
                  "name": "tokenAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 118,
                  "src": "1094:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1094:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16,
                  "mutability": "mutable",
                  "name": "tokenContractAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 118,
                  "src": "1115:28:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1115:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 118,
                  "src": "1145:10:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1145:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20,
                  "mutability": "mutable",
                  "name": "_router",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 118,
                  "src": "1157:26:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IUniswapV2Router02_$12835",
                    "typeString": "contract IUniswapV2Router02"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 19,
                    "name": "IUniswapV2Router02",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 12835,
                    "src": "1157:18:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV2Router02_$12835",
                      "typeString": "contract IUniswapV2Router02"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22,
                  "mutability": "mutable",
                  "name": "_swapSlippage",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 118,
                  "src": "1185:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1185:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1093:114:20"
            },
            "returnParameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 118,
                  "src": "1227:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1227:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 118,
                  "src": "1236:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1236:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1226:18:20"
            },
            "scope": 262,
            "src": "1062:1861:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 151,
              "nodeType": "Block",
              "src": "3072:316:20",
              "statements": [
                {
                  "assignments": [
                    132,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 132,
                      "mutability": "mutable",
                      "name": "amountToken",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 151,
                      "src": "3083:16:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 131,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3083:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 148,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 139,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3170:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UniswapHelpers_$262",
                              "typeString": "library UniswapHelpers"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_UniswapHelpers_$262",
                              "typeString": "library UniswapHelpers"
                            }
                          ],
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3162:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 137,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3162:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3162:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 141,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "3189:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3214:1:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3256:1:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "id": 144,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122,
                        "src": "3298:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 145,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3327:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3327:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 133,
                          "name": "_router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 124,
                          "src": "3106:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Router02_$12835",
                            "typeString": "contract IUniswapV2Router02"
                          }
                        },
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addLiquidityETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15239,
                        "src": "3106:23:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
                        }
                      },
                      "id": 136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "argumentTypes": null,
                          "id": 135,
                          "name": "coinAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 126,
                          "src": "3137:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "3106:42:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$value",
                        "typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3106:246:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3082:270:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 149,
                    "name": "amountToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 132,
                    "src": "3370:11:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 130,
                  "id": 150,
                  "nodeType": "Return",
                  "src": "3363:18:20"
                }
              ]
            },
            "documentation": null,
            "id": 152,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addLiquidity",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 120,
                  "mutability": "mutable",
                  "name": "tokenAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 152,
                  "src": "2952:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2952:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 122,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 152,
                  "src": "2973:23:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2973:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 124,
                  "mutability": "mutable",
                  "name": "_router",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 152,
                  "src": "2998:26:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IUniswapV2Router02_$12835",
                    "typeString": "contract IUniswapV2Router02"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 123,
                    "name": "IUniswapV2Router02",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 12835,
                    "src": "2998:18:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV2Router02_$12835",
                      "typeString": "contract IUniswapV2Router02"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 126,
                  "mutability": "mutable",
                  "name": "coinAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 152,
                  "src": "3026:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3026:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2951:94:20"
            },
            "returnParameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 152,
                  "src": "3063:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3063:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3062:9:20"
            },
            "scope": 262,
            "src": "2929:459:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 260,
              "nodeType": "Block",
              "src": "3569:1979:20",
              "statements": [
                {
                  "assignments": [
                    173
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 173,
                      "mutability": "mutable",
                      "name": "path",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 260,
                      "src": "3579:21:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 171,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3579:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 172,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3579:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 179,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3617:1:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3603:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 174,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3607:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 175,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "3607:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3603:16:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3579:40:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 180,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 173,
                        "src": "3629:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 182,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3634:1:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3629:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 183,
                          "name": "_router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 160,
                          "src": "3639:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Router02_$12835",
                            "typeString": "contract IUniswapV2Router02"
                          }
                        },
                        "id": 184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "WETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15193,
                        "src": "3639:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                          "typeString": "function () pure external returns (address)"
                        }
                      },
                      "id": 185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3639:14:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3629:24:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 187,
                  "nodeType": "ExpressionStatement",
                  "src": "3629:24:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 188,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 173,
                        "src": "3663:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 190,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3668:1:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3663:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 191,
                      "name": "tokenContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "3673:20:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3663:30:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 193,
                  "nodeType": "ExpressionStatement",
                  "src": "3663:30:20"
                },
                {
                  "assignments": [
                    195
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 195,
                      "mutability": "mutable",
                      "name": "minTokensToReceive",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 260,
                      "src": "4604:26:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 194,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4604:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 196,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4604:26:20"
                },
                {
                  "id": 218,
                  "nodeType": "Block",
                  "src": "4674:338:20",
                  "statements": [
                    {
                      "assignments": [
                        198
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 198,
                          "mutability": "mutable",
                          "name": "receivable",
                          "nodeType": "VariableDeclaration",
                          "overrides": null,
                          "scope": 218,
                          "src": "4862:18:20",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 197,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "4862:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 206,
                      "initialValue": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 201,
                              "name": "ethAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 154,
                              "src": "4905:9:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 202,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 173,
                              "src": "4916:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 199,
                              "name": "_router",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 160,
                              "src": "4883:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV2Router02_$12835",
                                "typeString": "contract IUniswapV2Router02"
                              }
                            },
                            "id": 200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getAmountsOut",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15477,
                            "src": "4883:21:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
                            }
                          },
                          "id": 203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4883:38:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 205,
                        "indexExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4922:1:20",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4883:41:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "4862:62:20"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 207,
                          "name": "minTokensToReceive",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 195,
                          "src": "4938:18:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 208,
                              "name": "receivable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 198,
                              "src": "4959:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 211,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "3130303030",
                                    "id": 209,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4973:5:20",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10000_by_1",
                                      "typeString": "int_const 10000"
                                    },
                                    "value": "10000"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "id": 210,
                                    "name": "_swapSlippage",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 162,
                                    "src": "4981:13:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4973:21:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 212,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "4972:23:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4959:36:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "3130303030",
                            "id": 214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4996:5:20",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000_by_1",
                              "typeString": "int_const 10000"
                            },
                            "value": "10000"
                          },
                          "src": "4959:42:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4938:63:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 217,
                      "nodeType": "ExpressionStatement",
                      "src": "4938:63:20"
                    }
                  ]
                },
                {
                  "assignments": [
                    223
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 223,
                      "mutability": "mutable",
                      "name": "amounts",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 260,
                      "src": "5113:24:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 221,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5113:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 222,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "5113:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 236,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 228,
                        "name": "minTokensToReceive",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 195,
                        "src": "5294:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 229,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 173,
                        "src": "5326:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 230,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 158,
                        "src": "5344:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 231,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5360:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5360:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "333630",
                          "id": 233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5378:3:20",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_360_by_1",
                            "typeString": "int_const 360"
                          },
                          "value": "360"
                        },
                        "src": "5360:21:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 224,
                          "name": "_router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 160,
                          "src": "5140:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Router02_$12835",
                            "typeString": "contract IUniswapV2Router02"
                          }
                        },
                        "id": 225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "swapExactETHForTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15384,
                        "src": "5140:29:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory)"
                        }
                      },
                      "id": 227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "argumentTypes": null,
                          "id": 226,
                          "name": "ethAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 154,
                          "src": "5177:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "5140:47:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$value",
                        "typeString": "function (uint256,address[] memory,address,uint256) payable external returns (uint256[] memory)"
                      }
                    },
                    "id": 235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5140:282:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5113:309:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 238,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 223,
                              "src": "5441:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 240,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5449:1:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5441:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5455:1:20",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5441:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5460:1:20",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 244,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 223,
                              "src": "5465:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 246,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 245,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5473:1:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5465:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5460:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5441:34:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "737761704578616374455448206661696c65642e",
                        "id": 249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5477:22:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_488ce11dfd847e0565a315eaae24af89f839d89fa0c8cb1a2376ece860210f1f",
                          "typeString": "literal_string \"swapExactETH failed.\""
                        },
                        "value": "swapExactETH failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_488ce11dfd847e0565a315eaae24af89f839d89fa0c8cb1a2376ece860210f1f",
                          "typeString": "literal_string \"swapExactETH failed.\""
                        }
                      ],
                      "id": 237,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5433:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5433:67:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 251,
                  "nodeType": "ExpressionStatement",
                  "src": "5433:67:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 252,
                          "name": "amounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 223,
                          "src": "5518:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 254,
                        "indexExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5526:1:20",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5518:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 255,
                          "name": "amounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 223,
                          "src": "5530:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 257,
                        "indexExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5538:1:20",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5530:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 258,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5517:24:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 168,
                  "id": 259,
                  "nodeType": "Return",
                  "src": "5510:31:20"
                }
              ]
            },
            "documentation": null,
            "id": 261,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_swapEthForTokens",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 154,
                  "mutability": "mutable",
                  "name": "ethAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 261,
                  "src": "3421:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3421:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 156,
                  "mutability": "mutable",
                  "name": "tokenContractAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 261,
                  "src": "3440:28:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3440:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 158,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 261,
                  "src": "3470:10:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3470:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 160,
                  "mutability": "mutable",
                  "name": "_router",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 261,
                  "src": "3482:26:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IUniswapV2Router02_$12835",
                    "typeString": "contract IUniswapV2Router02"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 159,
                    "name": "IUniswapV2Router02",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 12835,
                    "src": "3482:18:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV2Router02_$12835",
                      "typeString": "contract IUniswapV2Router02"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 162,
                  "mutability": "mutable",
                  "name": "_swapSlippage",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 261,
                  "src": "3510:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3510:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3420:112:20"
            },
            "returnParameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 261,
                  "src": "3551:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3551:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 167,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 261,
                  "src": "3560:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3560:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3550:18:20"
            },
            "scope": 262,
            "src": "3394:2154:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2761,
        "src": "1032:4518:20"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 333,
        "linearizedBaseContracts": [
          333
        ],
        "name": "IyUSDC",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "functionSelector": "2e1a7d4d",
            "id": 267,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 264,
                  "mutability": "mutable",
                  "name": "_shares",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 267,
                  "src": "5678:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 263,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5678:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5677:17:20"
            },
            "returnParameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5703:0:20"
            },
            "scope": 333,
            "src": "5660:44:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "b6b55f25",
            "id": 272,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 269,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 272,
                  "src": "5726:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 268,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5726:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5725:17:20"
            },
            "returnParameters": {
              "id": 271,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5751:0:20"
            },
            "scope": 333,
            "src": "5709:43:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "b69ef8a8",
            "id": 277,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 273,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5774:2:20"
            },
            "returnParameters": {
              "id": 276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 275,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 277,
                  "src": "5800:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 274,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5800:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5799:9:20"
            },
            "scope": 333,
            "src": "5758:51:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "39c0a7e1",
            "id": 282,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceDydx",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 278,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5834:2:20"
            },
            "returnParameters": {
              "id": 281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 280,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 282,
                  "src": "5860:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 279,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5860:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5859:9:20"
            },
            "scope": 333,
            "src": "5814:55:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "61c1ec55",
            "id": 287,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceCompound",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5898:2:20"
            },
            "returnParameters": {
              "id": 286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 285,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 287,
                  "src": "5924:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 284,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5924:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5923:9:20"
            },
            "scope": 333,
            "src": "5874:59:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "a7287971",
            "id": 292,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceCompoundInToken",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5969:2:20"
            },
            "returnParameters": {
              "id": 291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 290,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 292,
                  "src": "5995:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 289,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5995:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5994:9:20"
            },
            "scope": 333,
            "src": "5938:66:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "f5a41dea",
            "id": 297,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceFulcrumInToken",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 293,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6039:2:20"
            },
            "returnParameters": {
              "id": 296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 295,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 297,
                  "src": "6065:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 294,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6065:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6064:9:20"
            },
            "scope": 333,
            "src": "6009:65:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "0eb2a267",
            "id": 302,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceFulcrum",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 298,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6102:2:20"
            },
            "returnParameters": {
              "id": 301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 300,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 302,
                  "src": "6128:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6128:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6127:9:20"
            },
            "scope": 333,
            "src": "6079:58:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "cf8ca426",
            "id": 307,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceAave",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6162:2:20"
            },
            "returnParameters": {
              "id": 306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 305,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 307,
                  "src": "6188:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 304,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6188:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6187:9:20"
            },
            "scope": 333,
            "src": "6142:55:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "a160176d",
            "id": 312,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "recommend",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 308,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6220:2:20"
            },
            "returnParameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 310,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 312,
                  "src": "6246:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 309,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6246:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6245:9:20"
            },
            "scope": 333,
            "src": "6202:53:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "7d7c2a1c",
            "id": 315,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "rebalance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6278:2:20"
            },
            "returnParameters": {
              "id": 314,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6289:0:20"
            },
            "scope": 333,
            "src": "6260:30:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "7137ef99",
            "id": 320,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "calcPoolValueInToken",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 316,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6324:2:20"
            },
            "returnParameters": {
              "id": 319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 318,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 320,
                  "src": "6350:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 317,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6350:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6349:9:20"
            },
            "scope": 333,
            "src": "6295:64:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "77c7b8fc",
            "id": 325,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPricePerFullShare",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6393:2:20"
            },
            "returnParameters": {
              "id": 324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 323,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 325,
                  "src": "6419:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 322,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6419:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6418:9:20"
            },
            "scope": 333,
            "src": "6364:64:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "functionSelector": "70a08231",
            "id": 332,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 327,
                  "mutability": "mutable",
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 332,
                  "src": "6452:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 326,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6452:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6451:18:20"
            },
            "returnParameters": {
              "id": 331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 330,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 332,
                  "src": "6492:4:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 329,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6492:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6491:6:20"
            },
            "scope": 333,
            "src": "6433:65:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2761,
        "src": "5637:864:20"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 334,
          "nodeType": "StructuredDocumentation",
          "src": "6503:72:20",
          "text": "@dev Note: the ERC-165 identifier for this interface is 0x150b7a02."
        },
        "fullyImplemented": false,
        "id": 349,
        "linearizedBaseContracts": [
          349
        ],
        "name": "ERC721TokenReceiver",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": {
              "id": 335,
              "nodeType": "StructuredDocumentation",
              "src": "6611:760:20",
              "text": "@notice Handle the receipt of an NFT\n @dev The ERC721 smart contract calls this function on the recipient\n  after a `transfer`. This function MAY throw to revert and reject the\n  transfer. Return of other than the magic value MUST result in the\n  transaction being reverted.\n  Note: the contract address is always the message sender.\n @param _operator The address which called `safeTransferFrom` function\n @param _from The address which previously owned the token\n @param _tokenId The NFT identifier which is being transferred\n @param _data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`\n  unless throwing"
            },
            "functionSelector": "150b7a02",
            "id": 348,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 337,
                  "mutability": "mutable",
                  "name": "_operator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 348,
                  "src": "7402:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 336,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7402:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 339,
                  "mutability": "mutable",
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 348,
                  "src": "7421:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 338,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7421:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 341,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 348,
                  "src": "7436:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 340,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7436:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 343,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 348,
                  "src": "7454:18:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 342,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7454:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7401:72:20"
            },
            "returnParameters": {
              "id": 347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 346,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 348,
                  "src": "7491:6:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 345,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "7491:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7490:8:20"
            },
            "scope": 349,
            "src": "7376:123:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2761,
        "src": "6575:926:20"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 350,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2870,
              "src": "7526:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2870",
                "typeString": "contract Ownable"
              }
            },
            "id": 351,
            "nodeType": "InheritanceSpecifier",
            "src": "7526:7:20"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 352,
              "name": "ERC721TokenReceiver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 349,
              "src": "7535:19:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721TokenReceiver_$349",
                "typeString": "contract ERC721TokenReceiver"
              }
            },
            "id": 353,
            "nodeType": "InheritanceSpecifier",
            "src": "7535:19:20"
          }
        ],
        "contractDependencies": [
          349,
          2870,
          12858
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1020,
        "linearizedBaseContracts": [
          1020,
          349,
          2870,
          12858
        ],
        "name": "DipStaking",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "45740477",
            "id": 355,
            "mutability": "mutable",
            "name": "BTD",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1020,
            "src": "7562:23:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BuyTheDipNFT_$2760",
              "typeString": "contract BuyTheDipNFT"
            },
            "typeName": {
              "contractScope": null,
              "id": 354,
              "name": "BuyTheDipNFT",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2760,
              "src": "7562:12:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BuyTheDipNFT_$2760",
                "typeString": "contract BuyTheDipNFT"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a8515824",
            "id": 359,
            "mutability": "mutable",
            "name": "previousOwner",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1020,
            "src": "7591:46:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 358,
              "keyType": {
                "id": 356,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7599:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "7591:25:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 357,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "7608:7:20",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4712af92",
            "id": 363,
            "mutability": "mutable",
            "name": "stakeStartTimestamp",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1020,
            "src": "7643:52:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 362,
              "keyType": {
                "id": 360,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7651:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "7643:25:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 361,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7660:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e12a87cc",
            "id": 367,
            "mutability": "mutable",
            "name": "moneys",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1020,
            "src": "7783:39:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 366,
              "keyType": {
                "id": 364,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7791:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "7783:25:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 365,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7800:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e2616827",
            "id": 369,
            "mutability": "mutable",
            "name": "moneysReceived",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1020,
            "src": "7910:29:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 368,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "7910:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "032b94d1",
            "id": 372,
            "mutability": "mutable",
            "name": "activeNFTArray",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1020,
            "src": "7945:31:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 370,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "7945:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 371,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "7945:9:20",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "eeb34d53",
            "id": 375,
            "mutability": "mutable",
            "name": "reservedFundsForStakers",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1020,
            "src": "7982:40:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 373,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "7982:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 374,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "8021:1:20",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "87498b5f",
            "id": 378,
            "mutability": "mutable",
            "name": "reservedFundsForOwners",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1020,
            "src": "8028:39:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 376,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "8028:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 377,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "8066:1:20",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 387,
            "mutability": "mutable",
            "name": "MINSTAKINGTIME",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1020,
            "src": "8074:35:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 379,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "8074:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_604800_by_1",
                "typeString": "int_const 604800"
              },
              "id": 386,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "commonType": {
                  "typeIdentifier": "t_rational_86400_by_1",
                  "typeString": "int_const 86400"
                },
                "id": 384,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "argumentTypes": null,
                  "commonType": {
                    "typeIdentifier": "t_rational_3600_by_1",
                    "typeString": "int_const 3600"
                  },
                  "id": 382,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "leftExpression": {
                    "argumentTypes": null,
                    "hexValue": "3630",
                    "id": 380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8099:2:20",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_60_by_1",
                      "typeString": "int_const 60"
                    },
                    "value": "60"
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "*",
                  "rightExpression": {
                    "argumentTypes": null,
                    "hexValue": "3630",
                    "id": 381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8102:2:20",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_60_by_1",
                      "typeString": "int_const 60"
                    },
                    "value": "60"
                  },
                  "src": "8099:5:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_3600_by_1",
                    "typeString": "int_const 3600"
                  }
                },
                "nodeType": "BinaryOperation",
                "operator": "*",
                "rightExpression": {
                  "argumentTypes": null,
                  "hexValue": "3234",
                  "id": 383,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "8105:2:20",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_24_by_1",
                    "typeString": "int_const 24"
                  },
                  "value": "24"
                },
                "src": "8099:8:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_86400_by_1",
                  "typeString": "int_const 86400"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "hexValue": "37",
                "id": 385,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "8108:1:20",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_7_by_1",
                  "typeString": "int_const 7"
                },
                "value": "7"
              },
              "src": "8099:10:20",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_604800_by_1",
                "typeString": "int_const 604800"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 401,
              "nodeType": "Block",
              "src": "8175:102:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 392,
                      "name": "BTD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 355,
                      "src": "8221:3:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BuyTheDipNFT_$2760",
                        "typeString": "contract BuyTheDipNFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 396,
                              "name": "_BuyTheDipNFTAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 389,
                              "src": "8248:20:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 395,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8240:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 394,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8240:8:20",
                              "stateMutability": "payable",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8240:29:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 393,
                        "name": "BuyTheDipNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2760,
                        "src": "8227:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BuyTheDipNFT_$2760_$",
                          "typeString": "type(contract BuyTheDipNFT)"
                        }
                      },
                      "id": 398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8227:43:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BuyTheDipNFT_$2760",
                        "typeString": "contract BuyTheDipNFT"
                      }
                    },
                    "src": "8221:49:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BuyTheDipNFT_$2760",
                      "typeString": "contract BuyTheDipNFT"
                    }
                  },
                  "id": 400,
                  "nodeType": "ExpressionStatement",
                  "src": "8221:49:20"
                }
              ]
            },
            "documentation": null,
            "id": 402,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 389,
                  "mutability": "mutable",
                  "name": "_BuyTheDipNFTAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 402,
                  "src": "8138:28:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 388,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8138:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8137:30:20"
            },
            "returnParameters": {
              "id": 391,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8175:0:20"
            },
            "scope": 1020,
            "src": "8126:151:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 453,
              "nodeType": "Block",
              "src": "8549:279:20",
              "statements": [
                {
                  "assignments": [
                    415
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 415,
                      "mutability": "mutable",
                      "name": "_deposit",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 453,
                      "src": "8559:16:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 414,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8559:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 423,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 420,
                            "name": "_userDeposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 405,
                            "src": "8594:12:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8586:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint128_$",
                            "typeString": "type(uint128)"
                          },
                          "typeName": {
                            "id": 418,
                            "name": "uint128",
                            "nodeType": "ElementaryTypeName",
                            "src": "8586:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8586:21:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "8578:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 416,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8578:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8578:30:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8559:49:20"
                },
                {
                  "assignments": [
                    425
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 425,
                      "mutability": "mutable",
                      "name": "_blockDepositAmount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 453,
                      "src": "8618:27:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 424,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8618:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 435,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 432,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 430,
                              "name": "_userDeposit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 405,
                              "src": "8663:12:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">>",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "313238",
                              "id": 431,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8679:3:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_128_by_1",
                                "typeString": "int_const 128"
                              },
                              "value": "128"
                            },
                            "src": "8663:19:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8656:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint64_$",
                            "typeString": "type(uint64)"
                          },
                          "typeName": {
                            "id": 428,
                            "name": "uint64",
                            "nodeType": "ElementaryTypeName",
                            "src": "8656:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8656:27:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "8648:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 426,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8648:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8648:36:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8618:66:20"
                },
                {
                  "assignments": [
                    437
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 437,
                      "mutability": "mutable",
                      "name": "_blockDeposited",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 453,
                      "src": "8694:23:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 436,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8694:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 447,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 442,
                              "name": "_userDeposit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 405,
                              "src": "8735:12:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">>",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "313932",
                              "id": 443,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8751:3:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_192_by_1",
                                "typeString": "int_const 192"
                              },
                              "value": "192"
                            },
                            "src": "8735:19:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8728:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint64_$",
                            "typeString": "type(uint64)"
                          },
                          "typeName": {
                            "id": 440,
                            "name": "uint64",
                            "nodeType": "ElementaryTypeName",
                            "src": "8728:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8728:27:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "8720:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 438,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8720:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8720:36:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8694:62:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 448,
                        "name": "_deposit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 415,
                        "src": "8774:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 449,
                        "name": "_blockDepositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 425,
                        "src": "8784:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 450,
                        "name": "_blockDeposited",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 437,
                        "src": "8805:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 451,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "8773:48:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 413,
                  "id": 452,
                  "nodeType": "Return",
                  "src": "8766:55:20"
                }
              ]
            },
            "documentation": {
              "id": 403,
              "nodeType": "StructuredDocumentation",
              "src": "8283:170:20",
              "text": "@dev Unpacks 3 uints into 1 uint to (256) -> (128, 64, 64)\n@param _userDeposit -- 256 bit encoding of deposit, blockDepositAmount, and blockDeposited"
            },
            "id": 454,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unpackData",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 405,
                  "mutability": "mutable",
                  "name": "_userDeposit",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 454,
                  "src": "8478:20:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 404,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8478:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8477:22:20"
            },
            "returnParameters": {
              "id": 413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 408,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 454,
                  "src": "8523:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 407,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8523:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 410,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 454,
                  "src": "8532:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 409,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8532:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 412,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 454,
                  "src": "8541:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 411,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8541:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8522:27:20"
            },
            "scope": 1020,
            "src": "8458:370:20",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 484,
              "nodeType": "Block",
              "src": "9223:141:20",
              "statements": [
                {
                  "assignments": [
                    467
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 467,
                      "mutability": "mutable",
                      "name": "ret",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 484,
                      "src": "9233:11:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 466,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9233:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 469,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 468,
                    "name": "_deposit",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 457,
                    "src": "9247:8:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9233:22:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 470,
                      "name": "ret",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 467,
                      "src": "9265:3:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "|=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 473,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 471,
                        "name": "_blockDepositAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 459,
                        "src": "9272:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<<",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "313238",
                        "id": 472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9295:3:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_128_by_1",
                          "typeString": "int_const 128"
                        },
                        "value": "128"
                      },
                      "src": "9272:26:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9265:33:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 475,
                  "nodeType": "ExpressionStatement",
                  "src": "9265:33:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 476,
                      "name": "ret",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 467,
                      "src": "9308:3:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "|=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 479,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 477,
                        "name": "_blockDeposited",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 461,
                        "src": "9315:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<<",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "313932",
                        "id": 478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9334:3:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_192_by_1",
                          "typeString": "int_const 192"
                        },
                        "value": "192"
                      },
                      "src": "9315:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9308:29:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 481,
                  "nodeType": "ExpressionStatement",
                  "src": "9308:29:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 482,
                    "name": "ret",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 467,
                    "src": "9354:3:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 465,
                  "id": 483,
                  "nodeType": "Return",
                  "src": "9347:10:20"
                }
              ]
            },
            "documentation": {
              "id": 455,
              "nodeType": "StructuredDocumentation",
              "src": "8834:263:20",
              "text": "@dev Packs 3 uints into 1 uint to save space (128, 64, 64) -> 256\n@param _deposit -- total deposit, uint128\n@param _blockDepositAmount -- amount deposited in this block, uint64\n@param _blockDeposited -- block.timestamp, uint64"
            },
            "id": 485,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "packData",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 457,
                  "mutability": "mutable",
                  "name": "_deposit",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 485,
                  "src": "9120:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 456,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9120:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 459,
                  "mutability": "mutable",
                  "name": "_blockDepositAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 485,
                  "src": "9138:27:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 458,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9138:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 461,
                  "mutability": "mutable",
                  "name": "_blockDeposited",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 485,
                  "src": "9167:23:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 460,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9167:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9119:72:20"
            },
            "returnParameters": {
              "id": 465,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 464,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 485,
                  "src": "9215:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 463,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9215:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9214:9:20"
            },
            "scope": 1020,
            "src": "9102:262:20",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 488,
              "nodeType": "Block",
              "src": "9397:145:20",
              "statements": []
            },
            "documentation": null,
            "id": 489,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9378:2:20"
            },
            "returnParameters": {
              "id": 487,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9397:0:20"
            },
            "scope": 1020,
            "src": "9371:171:20",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 555,
              "nodeType": "Block",
              "src": "9681:530:20",
              "statements": [
                {
                  "assignments": [
                    496
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 496,
                      "mutability": "mutable",
                      "name": "_total",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 555,
                      "src": "9733:14:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 495,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9733:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 498,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9750:1:20",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9733:18:20"
                },
                {
                  "body": {
                    "id": 546,
                    "nodeType": "Block",
                    "src": "9811:354:20",
                    "statements": [
                      {
                        "assignments": [
                          511
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 511,
                            "mutability": "mutable",
                            "name": "_id",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 546,
                            "src": "9867:11:20",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 510,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9867:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 515,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 512,
                            "name": "activeNFTArray",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 372,
                            "src": "9881:14:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 514,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 513,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 500,
                            "src": "9896:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9881:17:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9867:31:20"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 523,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 518,
                                  "name": "_id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 511,
                                  "src": "9935:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 516,
                                  "name": "BTD",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 355,
                                  "src": "9915:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BuyTheDipNFT_$2760",
                                    "typeString": "contract BuyTheDipNFT"
                                  }
                                },
                                "id": 517,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenIdToEnergy",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1052,
                                "src": "9915:19:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256) view external returns (uint256)"
                                }
                              },
                              "id": 519,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9915:24:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 520,
                                "name": "stakeStartTimestamp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 363,
                                "src": "9942:19:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 522,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 521,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 511,
                                "src": "9962:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9942:24:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9915:51:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 524,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "9969:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 525,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "9969:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9915:69:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 544,
                          "nodeType": "Block",
                          "src": "10088:67:20",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 542,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 537,
                                  "name": "_total",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 496,
                                  "src": "10106:6:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 540,
                                      "name": "_id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 511,
                                      "src": "10136:3:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 538,
                                      "name": "BTD",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 355,
                                      "src": "10116:3:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_BuyTheDipNFT_$2760",
                                        "typeString": "contract BuyTheDipNFT"
                                      }
                                    },
                                    "id": 539,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "tokenIdToEnergy",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1052,
                                    "src": "10116:19:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (uint256) view external returns (uint256)"
                                    }
                                  },
                                  "id": 541,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10116:24:20",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10106:34:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 543,
                              "nodeType": "ExpressionStatement",
                              "src": "10106:34:20"
                            }
                          ]
                        },
                        "id": 545,
                        "nodeType": "IfStatement",
                        "src": "9912:243:20",
                        "trueBody": {
                          "id": 536,
                          "nodeType": "Block",
                          "src": "9985:85:20",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 534,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 527,
                                  "name": "_total",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 496,
                                  "src": "10003:6:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 533,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 528,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "10013:5:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 529,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "10013:15:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 530,
                                      "name": "stakeStartTimestamp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 363,
                                      "src": "10031:19:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                        "typeString": "mapping(uint256 => uint256)"
                                      }
                                    },
                                    "id": 532,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 531,
                                      "name": "_id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 511,
                                      "src": "10051:3:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10031:24:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "10013:42:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10003:52:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 535,
                              "nodeType": "ExpressionStatement",
                              "src": "10003:52:20"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 503,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 500,
                      "src": "9780:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 504,
                        "name": "activeNFTArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 372,
                        "src": "9784:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "9784:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9780:25:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 547,
                  "initializationExpression": {
                    "assignments": [
                      500
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 500,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 547,
                        "src": "9765:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 499,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9765:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 502,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9777:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9765:13:20"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "9807:3:20",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 507,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 500,
                        "src": "9807:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 509,
                    "nodeType": "ExpressionStatement",
                    "src": "9807:3:20"
                  },
                  "nodeType": "ForStatement",
                  "src": "9761:404:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 548,
                        "name": "_total",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 496,
                        "src": "10181:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10191:1:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "10181:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "id": 552,
                      "name": "_total",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 496,
                      "src": "10198:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "10181:23:20",
                    "trueExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10195:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 494,
                  "id": 554,
                  "nodeType": "Return",
                  "src": "10174:30:20"
                }
              ]
            },
            "documentation": {
              "id": 490,
              "nodeType": "StructuredDocumentation",
              "src": "9548:66:20",
              "text": "@dev Adds up all active energy contributed by stakers"
            },
            "functionSelector": "dbf6ebc3",
            "id": 556,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalStakingEnergy",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 491,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9649:2:20"
            },
            "returnParameters": {
              "id": 494,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 493,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 556,
                  "src": "9672:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 492,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9672:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9671:9:20"
            },
            "scope": 1020,
            "src": "9619:592:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 663,
              "nodeType": "Block",
              "src": "10371:800:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 563,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "10389:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "10389:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 565,
                            "name": "previousOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 359,
                            "src": "10403:13:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 567,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 566,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 559,
                            "src": "10417:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10403:18:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10389:32:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f74206f776e65722e",
                        "id": 569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10423:12:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf2878a0327c5efcb59586051281508822c0d430e7858d25ba3f27d805f4146d",
                          "typeString": "literal_string \"Not owner.\""
                        },
                        "value": "Not owner."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf2878a0327c5efcb59586051281508822c0d430e7858d25ba3f27d805f4146d",
                          "typeString": "literal_string \"Not owner.\""
                        }
                      ],
                      "id": 562,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10381:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10381:55:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 571,
                  "nodeType": "ExpressionStatement",
                  "src": "10381:55:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 573,
                              "name": "stakeStartTimestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 363,
                              "src": "10454:19:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 575,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 574,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 559,
                              "src": "10474:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10454:24:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 576,
                            "name": "MINSTAKINGTIME",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 387,
                            "src": "10481:14:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10454:41:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 578,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "10498:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "10498:15:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10454:59:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d696e696d756d207374616b696e6720706572696f64206e6f74206d65742e",
                        "id": 581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10515:33:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4e3aaf4e1aa79d184719c5ddbef853448d0a22b1d06c78fd9579deffce466152",
                          "typeString": "literal_string \"Minimum staking period not met.\""
                        },
                        "value": "Minimum staking period not met."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4e3aaf4e1aa79d184719c5ddbef853448d0a22b1d06c78fd9579deffce466152",
                          "typeString": "literal_string \"Minimum staking period not met.\""
                        }
                      ],
                      "id": 572,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10446:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10446:103:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 583,
                  "nodeType": "ExpressionStatement",
                  "src": "10446:103:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 585,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 559,
                        "src": "10576:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 584,
                      "name": "withdrawRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 722,
                      "src": "10560:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10560:20:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 587,
                  "nodeType": "ExpressionStatement",
                  "src": "10560:20:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 591,
                          "name": "previousOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 359,
                          "src": "10602:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                            "typeString": "mapping(uint256 => address)"
                          }
                        },
                        "id": 593,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 592,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 559,
                          "src": "10616:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10602:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 594,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 559,
                        "src": "10622:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 588,
                        "name": "BTD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 355,
                        "src": "10590:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyTheDipNFT_$2760",
                          "typeString": "contract BuyTheDipNFT"
                        }
                      },
                      "id": 590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3209,
                      "src": "10590:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10590:36:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 596,
                  "nodeType": "ExpressionStatement",
                  "src": "10590:36:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 602,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10687:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DipStaking_$1020",
                              "typeString": "contract DipStaking"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DipStaking_$1020",
                              "typeString": "contract DipStaking"
                            }
                          ],
                          "id": 601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10679:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 600,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10679:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10679:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 604,
                          "name": "previousOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 359,
                          "src": "10694:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                            "typeString": "mapping(uint256 => address)"
                          }
                        },
                        "id": 606,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 605,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 559,
                          "src": "10708:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10694:18:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 607,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 559,
                        "src": "10714:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10719:2:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 597,
                        "name": "BTD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 355,
                        "src": "10658:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BuyTheDipNFT_$2760",
                          "typeString": "contract BuyTheDipNFT"
                        }
                      },
                      "id": 599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3358,
                      "src": "10658:20:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory) external"
                      }
                    },
                    "id": 609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10658:64:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 610,
                  "nodeType": "ExpressionStatement",
                  "src": "10658:64:20"
                },
                {
                  "body": {
                    "id": 646,
                    "nodeType": "Block",
                    "src": "10811:205:20",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 622,
                              "name": "activeNFTArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 372,
                              "src": "10828:14:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 624,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 623,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 612,
                              "src": "10843:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10828:17:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 625,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 559,
                            "src": "10847:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10828:22:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 645,
                        "nodeType": "IfStatement",
                        "src": "10825:181:20",
                        "trueBody": {
                          "id": 644,
                          "nodeType": "Block",
                          "src": "10851:155:20",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 636,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 627,
                                    "name": "activeNFTArray",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 372,
                                    "src": "10869:14:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 629,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 628,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 612,
                                    "src": "10884:1:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "10869:17:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 630,
                                    "name": "activeNFTArray",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 372,
                                    "src": "10889:14:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 635,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 634,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 631,
                                        "name": "activeNFTArray",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 372,
                                        "src": "10904:14:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                          "typeString": "uint256[] storage ref"
                                        }
                                      },
                                      "id": 632,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "10904:21:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "31",
                                      "id": 633,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "10928:1:20",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "10904:25:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10889:41:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10869:61:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 637,
                              "nodeType": "ExpressionStatement",
                              "src": "10869:61:20"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 638,
                                    "name": "activeNFTArray",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 372,
                                    "src": "10948:14:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 640,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "pop",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "10948:18:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
                                    "typeString": "function ()"
                                  }
                                },
                                "id": 641,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10948:20:20",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 642,
                              "nodeType": "ExpressionStatement",
                              "src": "10948:20:20"
                            },
                            {
                              "id": 643,
                              "nodeType": "Break",
                              "src": "10986:5:20"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 615,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 612,
                      "src": "10780:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 616,
                        "name": "activeNFTArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 372,
                        "src": "10783:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "10783:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10780:24:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 647,
                  "initializationExpression": {
                    "assignments": [
                      612
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 612,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 647,
                        "src": "10767:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 611,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10767:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 614,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10777:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10767:11:20"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 620,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "10806:3:20",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 619,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 612,
                        "src": "10806:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 621,
                    "nodeType": "ExpressionStatement",
                    "src": "10806:3:20"
                  },
                  "nodeType": "ForStatement",
                  "src": "10762:254:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "11070:25:20",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 648,
                        "name": "previousOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 359,
                        "src": "11077:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 650,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 649,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 559,
                        "src": "11091:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11077:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 652,
                  "nodeType": "ExpressionStatement",
                  "src": "11070:25:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "11105:31:20",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 653,
                        "name": "stakeStartTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 363,
                        "src": "11112:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 655,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 654,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 559,
                        "src": "11132:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11112:24:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 657,
                  "nodeType": "ExpressionStatement",
                  "src": "11105:31:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "11146:18:20",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 658,
                        "name": "moneys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 367,
                        "src": "11153:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 660,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 659,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 559,
                        "src": "11160:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11153:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 662,
                  "nodeType": "ExpressionStatement",
                  "src": "11146:18:20"
                }
              ]
            },
            "documentation": {
              "id": 557,
              "nodeType": "StructuredDocumentation",
              "src": "10217:110:20",
              "text": "@dev Remove NFT from staking pool\n@param _id -- id of NFT. Must be previous owner to call"
            },
            "functionSelector": "2e17de78",
            "id": 664,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unstake",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 559,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 664,
                  "src": "10349:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 558,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10349:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10348:13:20"
            },
            "returnParameters": {
              "id": 561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10371:0:20"
            },
            "scope": 1020,
            "src": "10332:839:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 721,
              "nodeType": "Block",
              "src": "11365:377:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 671,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "11383:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "11383:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 673,
                            "name": "previousOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 359,
                            "src": "11397:13:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 675,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 674,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 667,
                            "src": "11411:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11397:18:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11383:32:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f74206f776e65722e",
                        "id": 677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11417:12:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf2878a0327c5efcb59586051281508822c0d430e7858d25ba3f27d805f4146d",
                          "typeString": "literal_string \"Not owner.\""
                        },
                        "value": "Not owner."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf2878a0327c5efcb59586051281508822c0d430e7858d25ba3f27d805f4146d",
                          "typeString": "literal_string \"Not owner.\""
                        }
                      ],
                      "id": 670,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11375:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11375:55:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 679,
                  "nodeType": "ExpressionStatement",
                  "src": "11375:55:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 681,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 667,
                        "src": "11460:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 680,
                      "name": "flushTokenRewardsOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 866,
                      "src": "11440:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11440:24:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 683,
                  "nodeType": "ExpressionStatement",
                  "src": "11440:24:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 684,
                      "name": "reservedFundsForStakers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 375,
                      "src": "11474:23:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 685,
                        "name": "moneys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 367,
                        "src": "11501:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 687,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 686,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 667,
                        "src": "11508:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "11501:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11474:38:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 689,
                  "nodeType": "ExpressionStatement",
                  "src": "11474:38:20"
                },
                {
                  "assignments": [
                    691
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 691,
                      "mutability": "mutable",
                      "name": "_reward",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 721,
                      "src": "11522:15:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 690,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11522:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 695,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 692,
                      "name": "moneys",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 367,
                      "src": "11540:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 694,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 693,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 667,
                      "src": "11547:3:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11540:11:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11522:29:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 696,
                        "name": "moneys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 367,
                        "src": "11561:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 698,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 697,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 667,
                        "src": "11568:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11561:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 699,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11575:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11561:15:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 701,
                  "nodeType": "ExpressionStatement",
                  "src": "11561:15:20"
                },
                {
                  "assignments": [
                    703,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 703,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 721,
                      "src": "11587:12:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 702,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "11587:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 715,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "52656c656173696e67207265776172647320746f204e4654206f776e65722e",
                        "id": 713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11655:33:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_739141b4aa6b5ab70b3ba1e87d144a1aca0c08392a3ed7534e42f771069105b7",
                          "typeString": "literal_string \"Releasing rewards to NFT owner.\""
                        },
                        "value": "Releasing rewards to NFT owner."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_739141b4aa6b5ab70b3ba1e87d144a1aca0c08392a3ed7534e42f771069105b7",
                          "typeString": "literal_string \"Releasing rewards to NFT owner.\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_739141b4aa6b5ab70b3ba1e87d144a1aca0c08392a3ed7534e42f771069105b7",
                            "typeString": "literal_string \"Releasing rewards to NFT owner.\""
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 706,
                                "name": "previousOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 359,
                                "src": "11613:13:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                  "typeString": "mapping(uint256 => address)"
                                }
                              },
                              "id": 708,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 707,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 667,
                                "src": "11627:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11613:18:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 705,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11605:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 704,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11605:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11605:27:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "11605:32:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 712,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "argumentTypes": null,
                          "id": 711,
                          "name": "_reward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 691,
                          "src": "11646:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "11605:49:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11605:84:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11586:103:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 717,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 703,
                        "src": "11707:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5472616e73666572206661696c65642e",
                        "id": 718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11716:18:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69",
                          "typeString": "literal_string \"Transfer failed.\""
                        },
                        "value": "Transfer failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69",
                          "typeString": "literal_string \"Transfer failed.\""
                        }
                      ],
                      "id": 716,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11699:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11699:36:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 720,
                  "nodeType": "ExpressionStatement",
                  "src": "11699:36:20"
                }
              ]
            },
            "documentation": {
              "id": 665,
              "nodeType": "StructuredDocumentation",
              "src": "11177:138:20",
              "text": "@dev Withdraw native coin, which has been earned as a reward.\n@param _id -- id of NFT. Must be previous owner to call"
            },
            "functionSelector": "9342c8f4",
            "id": 722,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawRewards",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 667,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 722,
                  "src": "11345:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 666,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11345:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11344:13:20"
            },
            "returnParameters": {
              "id": 669,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11365:0:20"
            },
            "scope": 1020,
            "src": "11320:422:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 758,
              "nodeType": "Block",
              "src": "11888:282:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 727,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "11906:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "11906:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 729,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2805,
                            "src": "11920:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11920:7:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11906:21:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f74206f776e65722e",
                        "id": 732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11929:12:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf2878a0327c5efcb59586051281508822c0d430e7858d25ba3f27d805f4146d",
                          "typeString": "literal_string \"Not owner.\""
                        },
                        "value": "Not owner."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf2878a0327c5efcb59586051281508822c0d430e7858d25ba3f27d805f4146d",
                          "typeString": "literal_string \"Not owner.\""
                        }
                      ],
                      "id": 726,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11898:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11898:44:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 734,
                  "nodeType": "ExpressionStatement",
                  "src": "11898:44:20"
                },
                {
                  "assignments": [
                    736
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 736,
                      "mutability": "mutable",
                      "name": "_reward",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 758,
                      "src": "11952:15:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 735,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11952:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 738,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 737,
                    "name": "reservedFundsForOwners",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 378,
                    "src": "11970:22:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11952:40:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 739,
                      "name": "reservedFundsForOwners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 378,
                      "src": "12002:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12027:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "12002:26:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 742,
                  "nodeType": "ExpressionStatement",
                  "src": "12002:26:20"
                },
                {
                  "assignments": [
                    744,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 744,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 758,
                      "src": "12039:12:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 743,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "12039:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 752,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "52656c656173696e67207265776172647320746f206f776e65722e",
                        "id": 750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12087:29:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d1ba57fd8232d881468ff645278107b233e300b8e412296a5c9e5190f4af5e6a",
                          "typeString": "literal_string \"Releasing rewards to owner.\""
                        },
                        "value": "Releasing rewards to owner."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d1ba57fd8232d881468ff645278107b233e300b8e412296a5c9e5190f4af5e6a",
                          "typeString": "literal_string \"Releasing rewards to owner.\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_d1ba57fd8232d881468ff645278107b233e300b8e412296a5c9e5190f4af5e6a",
                            "typeString": "literal_string \"Releasing rewards to owner.\""
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 745,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2805,
                            "src": "12057:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12057:7:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "12057:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 749,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "argumentTypes": null,
                          "id": 748,
                          "name": "_reward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 736,
                          "src": "12078:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "12057:29:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12057:60:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12038:79:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 754,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 744,
                        "src": "12135:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5472616e73666572206661696c65642e",
                        "id": 755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12144:18:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69",
                          "typeString": "literal_string \"Transfer failed.\""
                        },
                        "value": "Transfer failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69",
                          "typeString": "literal_string \"Transfer failed.\""
                        }
                      ],
                      "id": 753,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12127:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12127:36:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 757,
                  "nodeType": "ExpressionStatement",
                  "src": "12127:36:20"
                }
              ]
            },
            "documentation": {
              "id": 723,
              "nodeType": "StructuredDocumentation",
              "src": "11748:90:20",
              "text": "@dev Withdraw native coined, earned as reward, and set asid for owners/wallet"
            },
            "functionSelector": "9843bdd3",
            "id": 759,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawRewardsForOwners",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 724,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11876:2:20"
            },
            "returnParameters": {
              "id": 725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11888:0:20"
            },
            "scope": 1020,
            "src": "11843:327:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 776,
              "nodeType": "Block",
              "src": "12405:98:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 767,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "12431:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DipStaking_$1020",
                                    "typeString": "contract DipStaking"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DipStaking_$1020",
                                    "typeString": "contract DipStaking"
                                  }
                                ],
                                "id": 766,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12423:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 765,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12423:7:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 768,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12423:13:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "12423:21:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 770,
                            "name": "reservedFundsForStakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 375,
                            "src": "12447:23:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12423:47:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 772,
                          "name": "reservedFundsForOwners",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 378,
                          "src": "12473:22:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12423:72:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 774,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "12422:74:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 764,
                  "id": 775,
                  "nodeType": "Return",
                  "src": "12415:81:20"
                }
              ]
            },
            "documentation": {
              "id": 760,
              "nodeType": "StructuredDocumentation",
              "src": "12176:160:20",
              "text": "@dev Returns amount of staking funds available, total minus reserved for specific stakers who have been removed from active staking and from owners"
            },
            "functionSelector": "51fc43e7",
            "id": 777,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAvailableStakingFunds",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 761,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12374:2:20"
            },
            "returnParameters": {
              "id": 764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 763,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 777,
                  "src": "12397:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 762,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12397:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12396:9:20"
            },
            "scope": 1020,
            "src": "12341:162:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 865,
              "nodeType": "Block",
              "src": "12754:896:20",
              "statements": [
                {
                  "assignments": [
                    784
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 784,
                      "mutability": "mutable",
                      "name": "_rewards",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 865,
                      "src": "12764:16:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 783,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12764:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 794,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 790,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 785,
                          "name": "getAvailableStakingFunds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 777,
                          "src": "12783:24:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12783:26:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 788,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 780,
                            "src": "12835:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 787,
                          "name": "getActiveEnergyOfToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 910,
                          "src": "12812:22:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) view returns (uint256)"
                          }
                        },
                        "id": 789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12812:27:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "12783:56:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 791,
                        "name": "getTotalStakingEnergy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 556,
                        "src": "12842:21:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12842:23:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12783:82:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12764:101:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 795,
                        "name": "moneys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 367,
                        "src": "12875:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 797,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 796,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 780,
                        "src": "12882:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12875:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 798,
                      "name": "_rewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 784,
                      "src": "12890:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12875:23:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 800,
                  "nodeType": "ExpressionStatement",
                  "src": "12875:23:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 801,
                      "name": "reservedFundsForStakers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 375,
                      "src": "12908:23:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 802,
                      "name": "_rewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 784,
                      "src": "12935:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12908:35:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 804,
                  "nodeType": "ExpressionStatement",
                  "src": "12908:35:20"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 807,
                              "name": "activeNFTArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 372,
                              "src": "13005:14:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 809,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 808,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 780,
                              "src": "13020:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13005:19:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 805,
                            "name": "BTD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 355,
                            "src": "12985:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BuyTheDipNFT_$2760",
                              "typeString": "contract BuyTheDipNFT"
                            }
                          },
                          "id": 806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenIdToEnergy",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1052,
                          "src": "12985:19:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) view external returns (uint256)"
                          }
                        },
                        "id": 810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12985:40:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 811,
                          "name": "stakeStartTimestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 363,
                          "src": "13028:19:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 813,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 812,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 780,
                          "src": "13048:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13028:24:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "12985:67:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 815,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "13055:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "13055:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12985:85:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 863,
                    "nodeType": "Block",
                    "src": "13242:155:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 842,
                              "name": "stakeStartTimestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 363,
                              "src": "13256:19:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 844,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 843,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 780,
                              "src": "13276:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13256:24:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 845,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "13283:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 846,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "13283:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13256:42:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 848,
                        "nodeType": "ExpressionStatement",
                        "src": "13256:42:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 852,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 780,
                              "src": "13326:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 860,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 855,
                                    "name": "_id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 780,
                                    "src": "13351:3:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 853,
                                    "name": "BTD",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 355,
                                    "src": "13331:3:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_BuyTheDipNFT_$2760",
                                      "typeString": "contract BuyTheDipNFT"
                                    }
                                  },
                                  "id": 854,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokenIdToEnergy",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1052,
                                  "src": "13331:19:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256) view external returns (uint256)"
                                  }
                                },
                                "id": 856,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13331:24:20",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 858,
                                    "name": "_id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 780,
                                    "src": "13381:3:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 857,
                                  "name": "getActiveEnergyOfToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 910,
                                  "src": "13358:22:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256) view returns (uint256)"
                                  }
                                },
                                "id": 859,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13358:27:20",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13331:54:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 849,
                              "name": "BTD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 355,
                              "src": "13312:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BuyTheDipNFT_$2760",
                                "typeString": "contract BuyTheDipNFT"
                              }
                            },
                            "id": 851,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "setEnergy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2256,
                            "src": "13312:13:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) external"
                            }
                          },
                          "id": 861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13312:74:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 862,
                        "nodeType": "ExpressionStatement",
                        "src": "13312:74:20"
                      }
                    ]
                  },
                  "id": 864,
                  "nodeType": "IfStatement",
                  "src": "12982:415:20",
                  "trueBody": {
                    "id": 841,
                    "nodeType": "Block",
                    "src": "13071:157:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 821,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 780,
                              "src": "13099:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 822,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13104:1:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 818,
                              "name": "BTD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 355,
                              "src": "13085:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BuyTheDipNFT_$2760",
                                "typeString": "contract BuyTheDipNFT"
                              }
                            },
                            "id": 820,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "setEnergy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2256,
                            "src": "13085:13:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) external"
                            }
                          },
                          "id": 823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13085:21:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 824,
                        "nodeType": "ExpressionStatement",
                        "src": "13085:21:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 825,
                              "name": "activeNFTArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 372,
                              "src": "13120:14:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 827,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 826,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 780,
                              "src": "13135:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13120:19:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 828,
                              "name": "activeNFTArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 372,
                              "src": "13142:14:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 833,
                            "indexExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 832,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 829,
                                  "name": "activeNFTArray",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 372,
                                  "src": "13157:14:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                    "typeString": "uint256[] storage ref"
                                  }
                                },
                                "id": 830,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "13157:21:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 831,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13181:1:20",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "13157:25:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13142:41:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13120:63:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 835,
                        "nodeType": "ExpressionStatement",
                        "src": "13120:63:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 836,
                              "name": "activeNFTArray",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 372,
                              "src": "13197:14:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 838,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pop",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "13197:18:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13197:20:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 840,
                        "nodeType": "ExpressionStatement",
                        "src": "13197:20:20"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 778,
              "nodeType": "StructuredDocumentation",
              "src": "12549:149:20",
              "text": "@dev moves token rewards from the pool and puts it in a separate account for one token. Decreases energy.\n@param _id -- token id"
            },
            "id": 866,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "flushTokenRewardsOf",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 780,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 866,
                  "src": "12732:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 779,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12732:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12731:13:20"
            },
            "returnParameters": {
              "id": 782,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12754:0:20"
            },
            "scope": 1020,
            "src": "12703:947:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 909,
              "nodeType": "Block",
              "src": "13864:320:20",
              "statements": [
                {
                  "assignments": [
                    875
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 875,
                      "mutability": "mutable",
                      "name": "_energy",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 909,
                      "src": "13878:15:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 874,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13878:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 876,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13878:15:20"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 879,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 869,
                            "src": "13930:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 877,
                            "name": "BTD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 355,
                            "src": "13910:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BuyTheDipNFT_$2760",
                              "typeString": "contract BuyTheDipNFT"
                            }
                          },
                          "id": 878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenIdToEnergy",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1052,
                          "src": "13910:19:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) view external returns (uint256)"
                          }
                        },
                        "id": 880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13910:24:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 881,
                          "name": "stakeStartTimestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 363,
                          "src": "13937:19:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 883,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 882,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 869,
                          "src": "13957:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13937:24:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "13910:51:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 885,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "13964:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 886,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "13964:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13910:69:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 905,
                    "nodeType": "Block",
                    "src": "14083:67:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 898,
                            "name": "_energy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 875,
                            "src": "14101:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 901,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 869,
                                "src": "14131:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 899,
                                "name": "BTD",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 355,
                                "src": "14111:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BuyTheDipNFT_$2760",
                                  "typeString": "contract BuyTheDipNFT"
                                }
                              },
                              "id": 900,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tokenIdToEnergy",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1052,
                              "src": "14111:19:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) view external returns (uint256)"
                              }
                            },
                            "id": 902,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14111:24:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14101:34:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 904,
                        "nodeType": "ExpressionStatement",
                        "src": "14101:34:20"
                      }
                    ]
                  },
                  "id": 906,
                  "nodeType": "IfStatement",
                  "src": "13907:243:20",
                  "trueBody": {
                    "id": 897,
                    "nodeType": "Block",
                    "src": "13980:85:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 888,
                            "name": "_energy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 875,
                            "src": "13998:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 894,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 889,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "14008:5:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 890,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "14008:15:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 891,
                                "name": "stakeStartTimestamp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 363,
                                "src": "14026:19:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 893,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 892,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 869,
                                "src": "14046:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14026:24:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "14008:42:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13998:52:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 896,
                        "nodeType": "ExpressionStatement",
                        "src": "13998:52:20"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 907,
                    "name": "_energy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 875,
                    "src": "14170:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 873,
                  "id": 908,
                  "nodeType": "Return",
                  "src": "14163:14:20"
                }
              ]
            },
            "documentation": {
              "id": 867,
              "nodeType": "StructuredDocumentation",
              "src": "13656:130:20",
              "text": "@dev Get energy used since timestamp for specific NFT\n@param _id -- id of NFT. Must be previous owner to call"
            },
            "functionSelector": "0dac11d4",
            "id": 910,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getActiveEnergyOfToken",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 870,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 869,
                  "mutability": "mutable",
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 910,
                  "src": "13823:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 868,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13823:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13822:13:20"
            },
            "returnParameters": {
              "id": 873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 872,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 910,
                  "src": "13856:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 871,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13856:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13855:9:20"
            },
            "scope": 1020,
            "src": "13791:393:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 959,
              "nodeType": "Block",
              "src": "14299:854:20",
              "statements": [
                {
                  "assignments": [
                    915
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 915,
                      "mutability": "mutable",
                      "name": "_id",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 959,
                      "src": "14309:11:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 914,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14309:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 916,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14309:11:20"
                },
                {
                  "assignments": [
                    918
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 918,
                      "mutability": "mutable",
                      "name": "_rewards",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 959,
                      "src": "14330:16:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 917,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14330:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 919,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14330:16:20"
                },
                {
                  "assignments": [
                    921
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 921,
                      "mutability": "mutable",
                      "name": "_totalEnergy",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 959,
                      "src": "14356:20:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 920,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14356:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 924,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 922,
                      "name": "getTotalStakingEnergy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 556,
                      "src": "14379:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14379:23:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14356:46:20"
                },
                {
                  "body": {
                    "id": 957,
                    "nodeType": "Block",
                    "src": "14520:627:20",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 945,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 938,
                                    "name": "activeNFTArray",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 372,
                                    "src": "14599:14:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 940,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 939,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 926,
                                    "src": "14614:1:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14599:17:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 936,
                                  "name": "BTD",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 355,
                                  "src": "14579:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BuyTheDipNFT_$2760",
                                    "typeString": "contract BuyTheDipNFT"
                                  }
                                },
                                "id": 937,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "tokenIdToEnergy",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1052,
                                "src": "14579:19:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256) view external returns (uint256)"
                                }
                              },
                              "id": 941,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14579:38:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 942,
                                "name": "stakeStartTimestamp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 363,
                                "src": "14620:19:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 944,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 943,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 926,
                                "src": "14640:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14620:22:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "14579:63:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 946,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "14645:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 947,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "14645:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14579:81:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 956,
                        "nodeType": "IfStatement",
                        "src": "14576:561:20",
                        "trueBody": {
                          "id": 955,
                          "nodeType": "Block",
                          "src": "14661:476:20",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 950,
                                      "name": "activeNFTArray",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 372,
                                      "src": "15104:14:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                        "typeString": "uint256[] storage ref"
                                      }
                                    },
                                    "id": 952,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 951,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 926,
                                      "src": "15119:1:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "15104:17:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 949,
                                  "name": "flushTokenRewardsOf",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 866,
                                  "src": "15084:19:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 953,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15084:38:20",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 954,
                              "nodeType": "ExpressionStatement",
                              "src": "15084:38:20"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 929,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 926,
                      "src": "14489:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 930,
                        "name": "activeNFTArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 372,
                        "src": "14493:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "14493:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14489:25:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 958,
                  "initializationExpression": {
                    "assignments": [
                      926
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 926,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 958,
                        "src": "14474:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 925,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14474:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 928,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14486:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "14474:13:20"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 934,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "14516:3:20",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 933,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 926,
                        "src": "14516:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 935,
                    "nodeType": "ExpressionStatement",
                    "src": "14516:3:20"
                  },
                  "nodeType": "ForStatement",
                  "src": "14470:677:20"
                }
              ]
            },
            "documentation": {
              "id": 911,
              "nodeType": "StructuredDocumentation",
              "src": "14190:70:20",
              "text": "@dev Flush all staked NFTs that have used up their energy"
            },
            "id": 960,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "flushInactive",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 912,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14287:2:20"
            },
            "returnParameters": {
              "id": 913,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14299:0:20"
            },
            "scope": 1020,
            "src": "14265:888:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              348
            ],
            "body": {
              "id": 1018,
              "nodeType": "Block",
              "src": "15398:1029:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 978,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 967,
                              "src": "15981:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 976,
                              "name": "BTD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 355,
                              "src": "15953:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BuyTheDipNFT_$2760",
                                "typeString": "contract BuyTheDipNFT"
                              }
                            },
                            "id": 977,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenIdToIsWaitingToBuy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1048,
                            "src": "15953:27:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view external returns (bool)"
                            }
                          },
                          "id": 979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15953:37:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15992:5:20",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "15953:44:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e2774207374616b65207768696c652077616974696e6720746f20627579206469702e",
                        "id": 982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15998:39:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a8b87543fed45959e56e1d3c82d1910c49983fda428f41875513296668082cbe",
                          "typeString": "literal_string \"Can't stake while waiting to buy dip.\""
                        },
                        "value": "Can't stake while waiting to buy dip."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a8b87543fed45959e56e1d3c82d1910c49983fda428f41875513296668082cbe",
                          "typeString": "literal_string \"Can't stake while waiting to buy dip.\""
                        }
                      ],
                      "id": 975,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15945:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15945:93:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 984,
                  "nodeType": "ExpressionStatement",
                  "src": "15945:93:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 988,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 967,
                              "src": "16078:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 986,
                              "name": "BTD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 355,
                              "src": "16058:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BuyTheDipNFT_$2760",
                                "typeString": "contract BuyTheDipNFT"
                              }
                            },
                            "id": 987,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenIdToEnergy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1052,
                            "src": "16058:19:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16058:29:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16090:1:20",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "16058:33:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f7420656e6f75676820656e657267792e",
                        "id": 992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16093:20:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f0f20759d1df73c525bf56d1271bec286ff77519ff1639a17320cf9c4905d17a",
                          "typeString": "literal_string \"Not enough energy.\""
                        },
                        "value": "Not enough energy."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f0f20759d1df73c525bf56d1271bec286ff77519ff1639a17320cf9c4905d17a",
                          "typeString": "literal_string \"Not enough energy.\""
                        }
                      ],
                      "id": 985,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16050:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16050:64:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 994,
                  "nodeType": "ExpressionStatement",
                  "src": "16050:64:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 995,
                        "name": "stakeStartTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 363,
                        "src": "16126:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 997,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 996,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 967,
                        "src": "16146:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16126:29:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 998,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "16158:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 999,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "16158:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16126:47:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1001,
                  "nodeType": "ExpressionStatement",
                  "src": "16126:47:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1002,
                        "name": "previousOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 359,
                        "src": "16185:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1004,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1003,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 967,
                        "src": "16199:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16185:23:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1005,
                      "name": "_from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 965,
                      "src": "16211:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "16185:31:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1007,
                  "nodeType": "ExpressionStatement",
                  "src": "16185:31:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1011,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 967,
                        "src": "16275:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1008,
                        "name": "activeNFTArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 372,
                        "src": "16255:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 1010,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "16255:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16255:29:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1013,
                  "nodeType": "ExpressionStatement",
                  "src": "16255:29:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1014,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "16390:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DipStaking_$1020",
                          "typeString": "contract DipStaking"
                        }
                      },
                      "id": 1015,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "onERC721Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1019,
                      "src": "16390:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                      }
                    },
                    "id": 1016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "16390:30:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 974,
                  "id": 1017,
                  "nodeType": "Return",
                  "src": "16383:37:20"
                }
              ]
            },
            "documentation": {
              "id": 961,
              "nodeType": "StructuredDocumentation",
              "src": "15159:44:20",
              "text": "@dev Upkeep when receiving NFTs"
            },
            "functionSelector": "150b7a02",
            "id": 1019,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 971,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "15374:8:20"
            },
            "parameters": {
              "id": 970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 963,
                  "mutability": "mutable",
                  "name": "_operator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1019,
                  "src": "15293:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 962,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15293:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 965,
                  "mutability": "mutable",
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1019,
                  "src": "15312:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 964,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15312:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 967,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1019,
                  "src": "15327:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 966,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15327:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 969,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1019,
                  "src": "15345:18:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 968,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "15345:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15292:72:20"
            },
            "returnParameters": {
              "id": 974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 973,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1019,
                  "src": "15391:6:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 972,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "15391:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15390:8:20"
            },
            "scope": 1020,
            "src": "15267:1160:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2761,
        "src": "7503:8926:20"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1021,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3813,
              "src": "16476:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$3813",
                "typeString": "contract ERC721"
              }
            },
            "id": 1022,
            "nodeType": "InheritanceSpecifier",
            "src": "16476:6:20"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1023,
              "name": "KeeperCompatibleInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4003,
              "src": "16484:25:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_KeeperCompatibleInterface_$4003",
                "typeString": "contract KeeperCompatibleInterface"
              }
            },
            "id": 1024,
            "nodeType": "InheritanceSpecifier",
            "src": "16484:25:20"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1025,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2870,
              "src": "16511:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2870",
                "typeString": "contract Ownable"
              }
            },
            "id": 1026,
            "nodeType": "InheritanceSpecifier",
            "src": "16511:7:20"
          }
        ],
        "contractDependencies": [
          2870,
          3813,
          4003,
          12858,
          12915,
          13386,
          13417,
          13444,
          15501
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2760,
        "linearizedBaseContracts": [
          2760,
          2870,
          4003,
          3813,
          13417,
          13444,
          13386,
          12915,
          15501,
          12858
        ],
        "name": "BuyTheDipNFT",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "d082e381",
            "id": 1028,
            "mutability": "mutable",
            "name": "tokenCounter",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2760,
            "src": "16526:27:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1027,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "16526:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "47b6b491",
            "id": 1032,
            "mutability": "mutable",
            "name": "tokenIdToDipLevel",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2760,
            "src": "16591:50:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint8_$",
              "typeString": "mapping(uint256 => uint8)"
            },
            "typeName": {
              "id": 1031,
              "keyType": {
                "id": 1029,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "16599:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "16591:25:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint8_$",
                "typeString": "mapping(uint256 => uint8)"
              },
              "valueType": {
                "id": 1030,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "16610:5:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0a537537",
            "id": 1036,
            "mutability": "mutable",
            "name": "tokenIdToDipValue",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2760,
            "src": "16689:52:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 1035,
              "keyType": {
                "id": 1033,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "16697:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "16689:27:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 1034,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "16708:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4661720a",
            "id": 1040,
            "mutability": "mutable",
            "name": "tokenIdToDipPercent",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2760,
            "src": "16763:54:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 1039,
              "keyType": {
                "id": 1037,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "16771:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "16763:27:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 1038,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "16782:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fd4889c1",
            "id": 1044,
            "mutability": "mutable",
            "name": "tokenIdToStableCoin",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2760,
            "src": "16839:54:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 1043,
              "keyType": {
                "id": 1041,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "16847:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "16839:27:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 1042,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "16858:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fb1b0f29",
            "id": 1048,
            "mutability": "mutable",
            "name": "tokenIdToIsWaitingToBuy",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2760,
            "src": "16927:55:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
              "typeString": "mapping(uint256 => bool)"
            },
            "typeName": {
              "id": 1047,
              "keyType": {
                "id": 1045,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "16935:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "16927:24:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                "typeString": "mapping(uint256 => bool)"
              },
              "valueType": {
                "id": 1046,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "16946:4:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2223c5f1",
            "id": 1052,
            "mutability": "mutable",
            "name": "tokenIdToEnergy",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2760,
            "src": "17020:50:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 1051,
              "keyType": {
                "id": 1049,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "17028:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "17020:27:20",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 1050,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "17039:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fc4a72fb",
            "id": 1059,
            "mutability": "mutable",
            "name": "highestDip",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2760,
            "src": "17137:39:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1053,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "17137:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "id": 1058,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "nodeType": "UnaryOperation",
              "operator": "~",
              "prefix": true,
              "src": "17165:11:20",
              "subExpression": {
                "argumentTypes": null,
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 1056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "17174:1:20",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  }
                ],
                "expression": {
                  "argumentTypes": [
                    {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    }
                  ],
                  "id": 1055,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "nodeType": "ElementaryTypeNameExpression",
                  "src": "17166:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_uint256_$",
                    "typeString": "type(uint256)"
                  },
                  "typeName": {
                    "id": 1054,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17166:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": null,
                      "typeString": null
                    }
                  }
                },
                "id": 1057,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "typeConversion",
                "lValueRequested": false,
                "names": [],
                "nodeType": "FunctionCall",
                "src": "17166:10:20",
                "tryCall": false,
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1062,
            "mutability": "mutable",
            "name": "swapSlippage",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2760,
            "src": "17207:28:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1060,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "17207:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130303030",
              "id": 1061,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "17230:5:20",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000_by_1",
                "typeString": "int_const 10000"
              },
              "value": "10000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "8d98ebc1",
            "id": 1065,
            "mutability": "mutable",
            "name": "totalStableCoin",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2760,
            "src": "17258:34:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1063,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "17258:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 1064,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "17291:1:20",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1068,
            "mutability": "immutable",
            "name": "interval",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2760,
            "src": "17299:39:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1066,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "17299:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3630",
              "id": 1067,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "17336:2:20",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_60_by_1",
                "typeString": "int_const 60"
              },
              "value": "60"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1070,
            "mutability": "mutable",
            "name": "lastTimeStamp",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2760,
            "src": "17344:29:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1069,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "17344:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1075,
            "mutability": "mutable",
            "name": "MINCOINDEPOSIT",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2760,
            "src": "17379:39:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1071,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "17379:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_100000000000000_by_1",
                "typeString": "int_const 100000000000000"
              },
              "id": 1074,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "3130",
                "id": 1072,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "17412:2:20",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "argumentTypes": null,
                "hexValue": "3134",
                "id": 1073,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "17416:2:20",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_14_by_1",
                  "typeString": "int_const 14"
                },
                "value": "14"
              },
              "src": "17412:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000_by_1",
                "typeString": "int_const 100000000000000"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1078,
            "mutability": "mutable",
            "name": "EARLYWITHDRAWALFEEPERCENT",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2760,
            "src": "17424:47:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1076,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "17424:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "333030",
              "id": 1077,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "17468:3:20",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_300_by_1",
                "typeString": "int_const 300"
              },
              "value": "300"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1081,
            "mutability": "mutable",
            "name": "NORMALWITHDRAWALFEEPERCENT",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2760,
            "src": "17497:48:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1079,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "17497:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "313030",
              "id": 1080,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "17542:3:20",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100_by_1",
                "typeString": "int_const 100"
              },
              "value": "100"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1086,
            "mutability": "mutable",
            "name": "MINTFEE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2760,
            "src": "17571:32:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1082,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "17571:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_1000000000000_by_1",
                "typeString": "int_const 1000000000000"
              },
              "id": 1085,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "3130",
                "id": 1083,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "17597:2:20",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "argumentTypes": null,
                "hexValue": "3132",
                "id": 1084,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "17601:2:20",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_12_by_1",
                  "typeString": "int_const 12"
                },
                "value": "12"
              },
              "src": "17597:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000_by_1",
                "typeString": "int_const 1000000000000"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1093,
            "mutability": "mutable",
            "name": "STABLECOINDUSTTHRESHOLD",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2760,
            "src": "17665:50:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1087,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "17665:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_100000_by_1",
                "typeString": "int_const 100000"
              },
              "id": 1092,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "commonType": {
                  "typeIdentifier": "t_rational_1000000_by_1",
                  "typeString": "int_const 1000000"
                },
                "id": 1090,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "argumentTypes": null,
                  "hexValue": "3130",
                  "id": 1088,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "17707:2:20",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "argumentTypes": null,
                  "hexValue": "36",
                  "id": 1089,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "17711:1:20",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_6_by_1",
                    "typeString": "int_const 6"
                  },
                  "value": "6"
                },
                "src": "17707:5:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000_by_1",
                  "typeString": "int_const 1000000"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "/",
              "rightExpression": {
                "argumentTypes": null,
                "hexValue": "3130",
                "id": 1091,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "17713:2:20",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "src": "17707:8:20",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000_by_1",
                "typeString": "int_const 100000"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1098,
            "mutability": "mutable",
            "name": "PROFITRELEASETHRESHOLD",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2760,
            "src": "17732:47:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1094,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "17732:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_10000000000000000_by_1",
                "typeString": "int_const 10000000000000000"
              },
              "id": 1097,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "3130",
                "id": 1095,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "17773:2:20",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "argumentTypes": null,
                "hexValue": "3136",
                "id": 1096,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "17777:2:20",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_16_by_1",
                  "typeString": "int_const 16"
                },
                "value": "16"
              },
              "src": "17773:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000_by_1",
                "typeString": "int_const 10000000000000000"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "355c8973",
            "id": 1100,
            "mutability": "mutable",
            "name": "profitReceiver",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2760,
            "src": "17785:29:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1099,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "17785:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1102,
            "mutability": "mutable",
            "name": "contractStablecoinProfit",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2760,
            "src": "17820:40:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1101,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "17820:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1107,
            "mutability": "mutable",
            "name": "yUSDC",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2760,
            "src": "18137:65:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IyUSDC_$333",
              "typeString": "contract IyUSDC"
            },
            "typeName": {
              "contractScope": null,
              "id": 1103,
              "name": "IyUSDC",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 333,
              "src": "18137:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IyUSDC_$333",
                "typeString": "contract IyUSDC"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307832333264413139353334303332434266453833386535663632304334393544353230363165393437",
                  "id": 1105,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "18159:42:20",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x232dA19534032CBfE838e5f620C495D52061e947"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 1104,
                "name": "IyUSDC",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 333,
                "src": "18152:6:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IyUSDC_$333_$",
                  "typeString": "type(contract IyUSDC)"
                }
              },
              "id": 1106,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "18152:50:20",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IyUSDC_$333",
                "typeString": "contract IyUSDC"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1112,
            "mutability": "mutable",
            "name": "router",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2760,
            "src": "18700:90:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IUniswapV2Router02_$12835",
              "typeString": "contract IUniswapV2Router02"
            },
            "typeName": {
              "contractScope": null,
              "id": 1108,
              "name": "IUniswapV2Router02",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12835,
              "src": "18700:18:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV2Router02_$12835",
                "typeString": "contract IUniswapV2Router02"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307837613235306435363330423463463533393733396446324335644163623463363539463234383844",
                  "id": 1110,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "18747:42:20",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 1109,
                "name": "IUniswapV2Router02",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 12835,
                "src": "18728:18:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$12835_$",
                  "typeString": "type(contract IUniswapV2Router02)"
                }
              },
              "id": 1111,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "18728:62:20",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV2Router02_$12835",
                "typeString": "contract IUniswapV2Router02"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1118,
            "mutability": "mutable",
            "name": "factory",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2760,
            "src": "18807:69:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1113,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "18807:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307835433639624565373031656638313461324236613345444434423136353243423963633561413666",
                  "id": 1116,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "18833:42:20",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 1115,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "18825:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 1114,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "18825:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": null,
                    "typeString": null
                  }
                }
              },
              "id": 1117,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "18825:51:20",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1124,
            "mutability": "mutable",
            "name": "StableCoinAddress",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2760,
            "src": "18997:79:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1119,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "18997:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307834444243644639423632653839316137636563354132353638433346344641463945384162653262",
                  "id": 1122,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "19033:42:20",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x4DBCdF9B62e891a7cec5A2568C3F4FAF9E8Abe2b"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 1121,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "19025:7:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 1120,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "19025:7:20",
                  "typeDescriptions": {
                    "typeIdentifier": null,
                    "typeString": null
                  }
                }
              },
              "id": 1123,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "19025:51:20",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1129,
            "mutability": "mutable",
            "name": "usdc",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2760,
            "src": "19946:39:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$12442",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 1125,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12442,
              "src": "19946:6:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$12442",
                "typeString": "contract IERC20"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "id": 1127,
                  "name": "StableCoinAddress",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1124,
                  "src": "19967:17:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 1126,
                "name": "IERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 12442,
                "src": "19960:6:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IERC20_$12442_$",
                  "typeString": "type(contract IERC20)"
                }
              },
              "id": 1128,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "19960:25:20",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$12442",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1134,
            "mutability": "mutable",
            "name": "priceFeed",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2760,
            "src": "20184:108:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$3984",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "contractScope": null,
              "id": 1130,
              "name": "AggregatorV3Interface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3984,
              "src": "20184:21:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$3984",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307838413735333734374131466134393445433930366345393045396633373536334138414636333065",
                  "id": 1132,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "20249:42:20",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 1131,
                "name": "AggregatorV3Interface",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 3984,
                "src": "20227:21:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$3984_$",
                  "typeString": "type(contract AggregatorV3Interface)"
                }
              },
              "id": 1133,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "20227:65:20",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$3984",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "351c7d35",
            "id": 1136,
            "mutability": "mutable",
            "name": "addy",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2760,
            "src": "20771:19:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1135,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "20771:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1142,
            "name": "CoinsReleasedToOwner",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1138,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1142,
                  "src": "20833:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20833:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1140,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "date",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1142,
                  "src": "20857:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20857:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "20823:52:20"
            },
            "src": "20797:79:20"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1148,
            "name": "Received",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1144,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1148,
                  "src": "20894:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1143,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20894:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1146,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1148,
                  "src": "20910:11:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1145,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "20910:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "20893:29:20"
            },
            "src": "20879:44:20"
          },
          {
            "body": {
              "id": 1155,
              "nodeType": "Block",
              "src": "20949:92:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 1151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20966:4:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1150,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "20958:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20958:13:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1153,
                  "nodeType": "ExpressionStatement",
                  "src": "20958:13:20"
                },
                {
                  "id": 1154,
                  "nodeType": "PlaceholderStatement",
                  "src": "21034:1:20"
                }
              ]
            },
            "documentation": null,
            "id": 1156,
            "name": "onlyKeeper",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 1149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20949:0:20"
            },
            "src": "20929:112:20",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1177,
              "nodeType": "Block",
              "src": "21241:800:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1163,
                      "name": "tokenCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1028,
                      "src": "21251:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "21266:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "21251:16:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1166,
                  "nodeType": "ExpressionStatement",
                  "src": "21251:16:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1167,
                      "name": "profitReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1100,
                      "src": "21969:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1168,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2805,
                        "src": "21986:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 1169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "21986:7:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "21969:24:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1171,
                  "nodeType": "ExpressionStatement",
                  "src": "21969:24:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1172,
                      "name": "lastTimeStamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1070,
                      "src": "22003:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1173,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "22019:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "22019:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22003:31:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1176,
                  "nodeType": "ExpressionStatement",
                  "src": "22003:31:20"
                }
              ]
            },
            "documentation": null,
            "id": 1178,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "5765427579546865446970",
                    "id": 1159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "21215:13:20",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_933e8c89772c598a55c76566119b81bb57c589a29874776b9a235b84df54469b",
                      "typeString": "literal_string \"WeBuyTheDip\""
                    },
                    "value": "WeBuyTheDip"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "444950",
                    "id": 1160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "21230:5:20",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d238ec68acc8443a59aaf11baf3e3983604c4aac1b7adcfe802a126a2dec24fc",
                      "typeString": "literal_string \"DIP\""
                    },
                    "value": "DIP"
                  }
                ],
                "id": 1161,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1158,
                  "name": "ERC721",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3813,
                  "src": "21208:6:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721_$3813_$",
                    "typeString": "type(contract ERC721)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "21208:28:20"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21139:2:20"
            },
            "returnParameters": {
              "id": 1162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21241:0:20"
            },
            "scope": 2760,
            "src": "21128:913:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1346,
              "nodeType": "Block",
              "src": "22205:2243:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1186,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "22228:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "22228:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1188,
                            "name": "MINTFEE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1086,
                            "src": "22240:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22228:19:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1190,
                          "name": "MINCOINDEPOSIT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1075,
                          "src": "22251:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "22228:37:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f7420656e6f756768206e617469766520636f696e2e",
                        "id": 1192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22267:25:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6aee7ed9d2258a3eb95734c297323d718476b42fe16fa375234d5760e929c1df",
                          "typeString": "literal_string \"Not enough native coin.\""
                        },
                        "value": "Not enough native coin."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6aee7ed9d2258a3eb95734c297323d718476b42fe16fa375234d5760e929c1df",
                          "typeString": "literal_string \"Not enough native coin.\""
                        }
                      ],
                      "id": 1185,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "22219:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22219:74:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1194,
                  "nodeType": "ExpressionStatement",
                  "src": "22219:74:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 1198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1196,
                          "name": "percentDrop",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1180,
                          "src": "22315:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "313030",
                          "id": 1197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "22329:3:20",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "22315:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "50657263656e742058206d75737420636f6e666f726d20746f3a203130203c3d2058203c20313030",
                        "id": 1199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22334:42:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_21a6134e8696e7a171a313dd55f875006928e9d04c5d373a7eaf47e5a2d889e7",
                          "typeString": "literal_string \"Percent X must conform to: 10 <= X < 100\""
                        },
                        "value": "Percent X must conform to: 10 <= X < 100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_21a6134e8696e7a171a313dd55f875006928e9d04c5d373a7eaf47e5a2d889e7",
                          "typeString": "literal_string \"Percent X must conform to: 10 <= X < 100\""
                        }
                      ],
                      "id": 1195,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "22307:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22307:70:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1201,
                  "nodeType": "ExpressionStatement",
                  "src": "22307:70:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1202,
                      "name": "updateAllBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1564,
                      "src": "22426:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22426:19:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1204,
                  "nodeType": "ExpressionStatement",
                  "src": "22426:19:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1205,
                      "name": "contractStablecoinProfit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1102,
                      "src": "22460:24:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1206,
                      "name": "MINTFEE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1086,
                      "src": "22488:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22460:35:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1208,
                  "nodeType": "ExpressionStatement",
                  "src": "22460:35:20"
                },
                {
                  "assignments": [
                    1210
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1210,
                      "mutability": "mutable",
                      "name": "newItemId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1346,
                      "src": "22531:17:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1209,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22531:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1212,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 1211,
                    "name": "tokenCounter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1028,
                    "src": "22551:12:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22531:32:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1213,
                      "name": "tokenCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1028,
                      "src": "22577:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 1214,
                        "name": "tokenCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1028,
                        "src": "22592:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 1215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22607:1:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "22592:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22577:31:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1218,
                  "nodeType": "ExpressionStatement",
                  "src": "22577:31:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1220,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "22632:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "22632:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1222,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1210,
                        "src": "22644:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1219,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3458,
                        3487
                      ],
                      "referencedDeclaration": 3458,
                      "src": "22622:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22622:32:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1224,
                  "nodeType": "ExpressionStatement",
                  "src": "22622:32:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1225,
                        "name": "tokenIdToDipLevel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1032,
                        "src": "22669:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint8_$",
                          "typeString": "mapping(uint256 => uint8)"
                        }
                      },
                      "id": 1227,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1226,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1210,
                        "src": "22687:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "22669:28:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "22700:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "22669:32:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1230,
                  "nodeType": "ExpressionStatement",
                  "src": "22669:32:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1231,
                        "name": "tokenIdToDipValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1036,
                        "src": "22715:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1233,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1232,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1210,
                        "src": "22733:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "22715:28:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "id": 1236,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "313030",
                                "id": 1234,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "22747:3:20",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1235,
                                "name": "percentDrop",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1180,
                                "src": "22753:11:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "src": "22747:17:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "id": 1237,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "22746:19:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1238,
                            "name": "getLatestPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1853,
                            "src": "22768:14:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22768:16:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "22746:38:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "313030",
                        "id": 1241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22787:3:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "src": "22746:44:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22715:75:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1244,
                  "nodeType": "ExpressionStatement",
                  "src": "22715:75:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1245,
                        "name": "tokenIdToDipPercent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1040,
                        "src": "22804:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1247,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1246,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1210,
                        "src": "22824:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "22804:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1248,
                      "name": "percentDrop",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1180,
                      "src": "22837:11:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "22804:44:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1250,
                  "nodeType": "ExpressionStatement",
                  "src": "22804:44:20"
                },
                {
                  "assignments": [
                    null,
                    1252
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 1252,
                      "mutability": "mutable",
                      "name": "stablecoinReceived",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1346,
                      "src": "22953:26:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1251,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22953:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1265,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1255,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "23016:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "23016:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1257,
                        "name": "StableCoinAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1124,
                        "src": "23027:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1260,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "23054:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BuyTheDipNFT_$2760",
                              "typeString": "contract BuyTheDipNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BuyTheDipNFT_$2760",
                              "typeString": "contract BuyTheDipNFT"
                            }
                          ],
                          "id": 1259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "23046:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1258,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "23046:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 1261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23046:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1262,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1112,
                        "src": "23061:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Router02_$12835",
                          "typeString": "contract IUniswapV2Router02"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1263,
                        "name": "swapSlippage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1062,
                        "src": "23069:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_contract$_IUniswapV2Router02_$12835",
                          "typeString": "contract IUniswapV2Router02"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1253,
                        "name": "UniswapHelpers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 262,
                        "src": "22983:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_UniswapHelpers_$262_$",
                          "typeString": "type(library UniswapHelpers)"
                        }
                      },
                      "id": 1254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_swapEthForTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 261,
                      "src": "22983:32:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_contract$_IUniswapV2Router02_$12835_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,address,address,contract IUniswapV2Router02,uint256) returns (uint256,uint256)"
                      }
                    },
                    "id": 1264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22983:99:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22950:132:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1266,
                        "name": "tokenIdToStableCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1044,
                        "src": "23096:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1268,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1267,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1210,
                        "src": "23116:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "23096:30:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1269,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "23129:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "23129:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1271,
                          "name": "stablecoinReceived",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1252,
                          "src": "23141:18:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "23129:30:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1276,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1273,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "23162:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "23162:9:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 1275,
                              "name": "MINTFEE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1086,
                              "src": "23174:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "23162:19:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1277,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "23161:21:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "23129:53:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23096:86:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1280,
                  "nodeType": "ExpressionStatement",
                  "src": "23096:86:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1281,
                      "name": "contractStablecoinProfit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1102,
                      "src": "23196:24:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1282,
                          "name": "MINTFEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1086,
                          "src": "23224:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1283,
                          "name": "stablecoinReceived",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1252,
                          "src": "23234:18:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "23224:28:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1288,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1285,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "23255:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1286,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "23255:9:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 1287,
                              "name": "MINTFEE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1086,
                              "src": "23267:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "23255:19:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1289,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "23254:21:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "23224:51:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23196:79:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1292,
                  "nodeType": "ExpressionStatement",
                  "src": "23196:79:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1294,
                            "name": "tokenIdToStableCoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1044,
                            "src": "23298:19:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 1296,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1295,
                            "name": "newItemId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1210,
                            "src": "23318:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "23298:30:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23331:1:20",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "23298:34:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4572726f7221204e6f20746f6b656e7320626f756768742e",
                        "id": 1299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23334:26:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a30dbad9de03485360d914f790726785bbcaf09d6627ef357d4442c2b659e71f",
                          "typeString": "literal_string \"Error! No tokens bought.\""
                        },
                        "value": "Error! No tokens bought."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a30dbad9de03485360d914f790726785bbcaf09d6627ef357d4442c2b659e71f",
                          "typeString": "literal_string \"Error! No tokens bought.\""
                        }
                      ],
                      "id": 1293,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23290:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23290:71:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1301,
                  "nodeType": "ExpressionStatement",
                  "src": "23290:71:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1303,
                          "name": "tokenIdToStableCoin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1044,
                          "src": "23449:19:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 1305,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1304,
                          "name": "newItemId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1210,
                          "src": "23469:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "23449:30:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1302,
                      "name": "lendStableCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2679,
                      "src": "23434:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23434:46:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1307,
                  "nodeType": "ExpressionStatement",
                  "src": "23434:46:20"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1308,
                        "name": "tokenIdToDipValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1036,
                        "src": "23541:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1310,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1309,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1210,
                        "src": "23559:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "23541:28:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1311,
                      "name": "highestDip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1059,
                      "src": "23572:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23541:41:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1320,
                  "nodeType": "IfStatement",
                  "src": "23538:119:20",
                  "trueBody": {
                    "id": 1319,
                    "nodeType": "Block",
                    "src": "23583:74:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1313,
                            "name": "highestDip",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1059,
                            "src": "23601:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1314,
                              "name": "tokenIdToDipValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1036,
                              "src": "23614:17:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 1316,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1315,
                              "name": "newItemId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1210,
                              "src": "23632:9:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "23614:28:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "23601:41:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1318,
                        "nodeType": "ExpressionStatement",
                        "src": "23601:41:20"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1321,
                      "name": "totalStableCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1065,
                      "src": "23671:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1322,
                      "name": "stablecoinReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1252,
                      "src": "23690:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23671:37:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1324,
                  "nodeType": "ExpressionStatement",
                  "src": "23671:37:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1325,
                        "name": "tokenIdToIsWaitingToBuy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1048,
                        "src": "23756:23:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 1327,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1326,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1210,
                        "src": "23780:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "23756:34:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "23793:4:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "23756:41:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1330,
                  "nodeType": "ExpressionStatement",
                  "src": "23756:41:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1332,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1210,
                        "src": "23826:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1334,
                            "name": "newItemId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1210,
                            "src": "23846:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1333,
                          "name": "tokenURI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2184
                          ],
                          "referencedDeclaration": 2184,
                          "src": "23837:8:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (uint256) view returns (string memory)"
                          }
                        },
                        "id": 1335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23837:19:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1331,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3709,
                      "src": "23813:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 1336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23813:44:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1337,
                  "nodeType": "ExpressionStatement",
                  "src": "23813:44:20"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1338,
                      "name": "newItemId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1210,
                      "src": "23875:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 1339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "23886:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "23875:12:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1345,
                  "nodeType": "IfStatement",
                  "src": "23872:516:20",
                  "trueBody": {
                    "id": 1344,
                    "nodeType": "Block",
                    "src": "23889:499:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1341,
                            "name": "performUpkeepTest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1944,
                            "src": "24354:17:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24354:19:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1343,
                        "nodeType": "ExpressionStatement",
                        "src": "24354:19:20"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "43413e8a",
            "id": 1347,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createCollectible",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1180,
                  "mutability": "mutable",
                  "name": "percentDrop",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1347,
                  "src": "22145:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1179,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "22145:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22144:20:20"
            },
            "returnParameters": {
              "id": 1184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1183,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1347,
                  "src": "22197:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1182,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "22197:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22196:9:20"
            },
            "scope": 2760,
            "src": "22118:2330:20",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1456,
              "nodeType": "Block",
              "src": "24640:1007:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1356,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "24753:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "24753:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1358,
                          "name": "MINCOINDEPOSIT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1075,
                          "src": "24766:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "24753:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f7420456e6f75676820424e422d2d6f72207768617465766572",
                        "id": 1360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24782:29:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ec6e0e1920454918f88485faaa18d1bca48ef035ee5323f4db9db5177a2b813e",
                          "typeString": "literal_string \"Not Enough BNB--or whatever\""
                        },
                        "value": "Not Enough BNB--or whatever"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ec6e0e1920454918f88485faaa18d1bca48ef035ee5323f4db9db5177a2b813e",
                          "typeString": "literal_string \"Not Enough BNB--or whatever\""
                        }
                      ],
                      "id": 1355,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24744:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24744:68:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1362,
                  "nodeType": "ExpressionStatement",
                  "src": "24744:68:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1364,
                            "name": "tokenIdToIsWaitingToBuy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1048,
                            "src": "24830:23:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                              "typeString": "mapping(uint256 => bool)"
                            }
                          },
                          "id": 1366,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1365,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1350,
                            "src": "24854:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24830:33:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 1367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24867:5:20",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "24830:42:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "616c726561647920696e2070726f63657373206f6620627579696e67206469702e",
                        "id": 1369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24874:35:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4eef170f22d611cdfb20ae7e697859745802ac87b656af552e69d186d5a3901b",
                          "typeString": "literal_string \"already in process of buying dip.\""
                        },
                        "value": "already in process of buying dip."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4eef170f22d611cdfb20ae7e697859745802ac87b656af552e69d186d5a3901b",
                          "typeString": "literal_string \"already in process of buying dip.\""
                        }
                      ],
                      "id": 1363,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24822:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24822:88:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1371,
                  "nodeType": "ExpressionStatement",
                  "src": "24822:88:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1372,
                      "name": "updateAllBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1564,
                      "src": "24921:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24921:19:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1374,
                  "nodeType": "ExpressionStatement",
                  "src": "24921:19:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1375,
                        "name": "tokenIdToDipValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1036,
                        "src": "24951:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1377,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1376,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1350,
                        "src": "24969:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "24951:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1382,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "313030",
                                "id": 1378,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "24982:3:20",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1379,
                                  "name": "tokenIdToDipPercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1040,
                                  "src": "24988:19:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                    "typeString": "mapping(uint256 => uint256)"
                                  }
                                },
                                "id": 1381,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1380,
                                  "name": "_tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1350,
                                  "src": "25008:8:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "24988:29:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "24982:35:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1383,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "24981:37:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1384,
                            "name": "getLatestPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1853,
                            "src": "25021:14:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25021:16:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "24981:56:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "313030",
                        "id": 1387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25040:3:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "src": "24981:62:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24951:92:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1390,
                  "nodeType": "ExpressionStatement",
                  "src": "24951:92:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1392,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1350,
                        "src": "25066:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1394,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1350,
                            "src": "25085:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1393,
                          "name": "tokenURI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            2184
                          ],
                          "referencedDeclaration": 2184,
                          "src": "25076:8:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (uint256) view returns (string memory)"
                          }
                        },
                        "id": 1395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25076:18:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1391,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3709,
                      "src": "25053:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 1396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25053:42:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1397,
                  "nodeType": "ExpressionStatement",
                  "src": "25053:42:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        null,
                        {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1398,
                            "name": "tokenIdToStableCoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1044,
                            "src": "25109:19:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 1400,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1399,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1350,
                            "src": "25129:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "25109:29:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1401,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "25106:33:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_uint256_$",
                        "typeString": "tuple(,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1404,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "25175:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "25175:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1406,
                          "name": "StableCoinAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1124,
                          "src": "25186:17:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1409,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "25213:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BuyTheDipNFT_$2760",
                                "typeString": "contract BuyTheDipNFT"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BuyTheDipNFT_$2760",
                                "typeString": "contract BuyTheDipNFT"
                              }
                            ],
                            "id": 1408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "25205:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1407,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "25205:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 1410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25205:13:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1411,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1112,
                          "src": "25220:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Router02_$12835",
                            "typeString": "contract IUniswapV2Router02"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 1412,
                          "name": "swapSlippage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1062,
                          "src": "25228:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_contract$_IUniswapV2Router02_$12835",
                            "typeString": "contract IUniswapV2Router02"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1402,
                          "name": "UniswapHelpers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 262,
                          "src": "25142:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_UniswapHelpers_$262_$",
                            "typeString": "type(library UniswapHelpers)"
                          }
                        },
                        "id": 1403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_swapEthForTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 261,
                        "src": "25142:32:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_contract$_IUniswapV2Router02_$12835_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256,address,address,contract IUniswapV2Router02,uint256) returns (uint256,uint256)"
                        }
                      },
                      "id": 1413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25142:99:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "25106:135:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1415,
                  "nodeType": "ExpressionStatement",
                  "src": "25106:135:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1417,
                            "name": "tokenIdToStableCoin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1044,
                            "src": "25259:19:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 1419,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1418,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1350,
                            "src": "25279:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25259:29:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "25291:1:20",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "25259:33:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4572726f7221204e6f20746f6b656e7320626f756768742e",
                        "id": 1422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25294:26:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a30dbad9de03485360d914f790726785bbcaf09d6627ef357d4442c2b659e71f",
                          "typeString": "literal_string \"Error! No tokens bought.\""
                        },
                        "value": "Error! No tokens bought."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a30dbad9de03485360d914f790726785bbcaf09d6627ef357d4442c2b659e71f",
                          "typeString": "literal_string \"Error! No tokens bought.\""
                        }
                      ],
                      "id": 1416,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25251:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25251:70:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1424,
                  "nodeType": "ExpressionStatement",
                  "src": "25251:70:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1426,
                          "name": "tokenIdToStableCoin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1044,
                          "src": "25347:19:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 1428,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1427,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1350,
                          "src": "25367:8:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "25347:29:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1425,
                      "name": "lendStableCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2679,
                      "src": "25332:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25332:45:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1430,
                  "nodeType": "ExpressionStatement",
                  "src": "25332:45:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1431,
                      "name": "totalStableCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1065,
                      "src": "25388:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1432,
                        "name": "tokenIdToStableCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1044,
                        "src": "25407:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1434,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1433,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1350,
                        "src": "25427:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "25407:29:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25388:48:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1436,
                  "nodeType": "ExpressionStatement",
                  "src": "25388:48:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1437,
                        "name": "tokenIdToIsWaitingToBuy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1048,
                        "src": "25446:23:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 1439,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1438,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1350,
                        "src": "25470:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "25446:33:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "25482:4:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "25446:40:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1442,
                  "nodeType": "ExpressionStatement",
                  "src": "25446:40:20"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1443,
                        "name": "tokenIdToDipValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1036,
                        "src": "25500:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1445,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1444,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1350,
                        "src": "25518:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "25500:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1446,
                      "name": "highestDip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1059,
                      "src": "25530:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25500:40:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1455,
                  "nodeType": "IfStatement",
                  "src": "25497:109:20",
                  "trueBody": {
                    "id": 1454,
                    "nodeType": "Block",
                    "src": "25541:65:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1448,
                            "name": "highestDip",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1059,
                            "src": "25555:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1449,
                              "name": "tokenIdToDipValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1036,
                              "src": "25568:17:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 1451,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1450,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1350,
                              "src": "25586:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "25568:27:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "25555:40:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1453,
                        "nodeType": "ExpressionStatement",
                        "src": "25555:40:20"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1348,
              "nodeType": "StructuredDocumentation",
              "src": "24514:55:20",
              "text": "@dev Buying the dip again on existing NFTs"
            },
            "functionSelector": "8b772ba4",
            "id": 1457,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redip",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1350,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1457,
                  "src": "24589:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1349,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24589:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "24588:18:20"
            },
            "returnParameters": {
              "id": 1354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1353,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1457,
                  "src": "24631:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1352,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "24631:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "24630:9:20"
            },
            "scope": 2760,
            "src": "24574:1073:20",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1478,
              "nodeType": "Block",
              "src": "25723:196:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1466,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12846,
                              "src": "25773:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 1467,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25773:12:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1468,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1459,
                            "src": "25787:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1465,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3443,
                          "src": "25754:18:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 1469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25754:41:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 1470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25809:51:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 1464,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25733:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25733:137:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1472,
                  "nodeType": "ExpressionStatement",
                  "src": "25733:137:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1474,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1459,
                        "src": "25893:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1475,
                        "name": "_tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1461,
                        "src": "25902:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1473,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3709,
                      "src": "25880:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 1476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25880:32:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1477,
                  "nodeType": "ExpressionStatement",
                  "src": "25880:32:20"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "162094c4",
            "id": 1479,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTokenURI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1459,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1479,
                  "src": "25674:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1458,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25674:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1461,
                  "mutability": "mutable",
                  "name": "_tokenURI",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1479,
                  "src": "25691:23:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1460,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "25691:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "25673:42:20"
            },
            "returnParameters": {
              "id": 1463,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25723:0:20"
            },
            "scope": 2760,
            "src": "25653:266:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1489,
              "nodeType": "Block",
              "src": "25983:53:20",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1483,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "26007:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "26007:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1485,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "26019:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "26019:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1482,
                      "name": "Received",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1148,
                      "src": "25998:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25998:31:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1488,
                  "nodeType": "EmitStatement",
                  "src": "25993:36:20"
                }
              ]
            },
            "documentation": null,
            "id": 1490,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1480,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25963:2:20"
            },
            "returnParameters": {
              "id": 1481,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25983:0:20"
            },
            "scope": 2760,
            "src": "25956:80:20",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1563,
              "nodeType": "Block",
              "src": "26144:816:20",
              "statements": [
                {
                  "assignments": [
                    1495
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1495,
                      "mutability": "mutable",
                      "name": "_addedTokens",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1563,
                      "src": "26154:20:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1494,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "26154:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1496,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26154:20:20"
                },
                {
                  "assignments": [
                    1498
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1498,
                      "mutability": "mutable",
                      "name": "_newTotal",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1563,
                      "src": "26184:17:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1497,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "26184:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1500,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 1499,
                    "name": "totalStableCoin",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1065,
                    "src": "26204:15:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26184:35:20"
                },
                {
                  "assignments": [
                    1502
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1502,
                      "mutability": "mutable",
                      "name": "_newIndividialBalance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1563,
                      "src": "26229:29:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1501,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "26229:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1503,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26229:29:20"
                },
                {
                  "body": {
                    "id": 1557,
                    "nodeType": "Block",
                    "src": "26308:609:20",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1514,
                              "name": "tokenIdToIsWaitingToBuy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1048,
                              "src": "26325:23:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 1516,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1515,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1505,
                              "src": "26349:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "26325:26:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 1517,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "26353:4:20",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "26325:32:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1556,
                        "nodeType": "IfStatement",
                        "src": "26322:585:20",
                        "trueBody": {
                          "id": 1555,
                          "nodeType": "Block",
                          "src": "26358:549:20",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1523,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 1519,
                                  "name": "_newIndividialBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1502,
                                  "src": "26376:21:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1521,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1505,
                                      "src": "26428:1:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 1520,
                                    "name": "getStableCoinBalanceGivenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2718,
                                    "src": "26400:27:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (uint256) view returns (uint256)"
                                    }
                                  },
                                  "id": 1522,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "26400:30:20",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "26376:54:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1524,
                              "nodeType": "ExpressionStatement",
                              "src": "26376:54:20"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1538,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 1525,
                                  "name": "_addedTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1495,
                                  "src": "26584:12:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "condition": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1530,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 1526,
                                      "name": "_newIndividialBalance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1502,
                                      "src": "26599:21:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 1527,
                                        "name": "tokenIdToStableCoin",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1044,
                                        "src": "26623:19:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                          "typeString": "mapping(uint256 => uint256)"
                                        }
                                      },
                                      "id": 1529,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 1528,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1505,
                                        "src": "26643:1:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "26623:22:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "26599:46:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 1536,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "26697:1:20",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "id": 1537,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "Conditional",
                                  "src": "26599:99:20",
                                  "trueExpression": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1535,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 1531,
                                      "name": "_newIndividialBalance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1502,
                                      "src": "26648:21:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 1532,
                                        "name": "tokenIdToStableCoin",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1044,
                                        "src": "26672:19:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                          "typeString": "mapping(uint256 => uint256)"
                                        }
                                      },
                                      "id": 1534,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 1533,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1505,
                                        "src": "26692:1:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "26672:22:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "26648:46:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "26584:114:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1539,
                              "nodeType": "ExpressionStatement",
                              "src": "26584:114:20"
                            },
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1542,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 1540,
                                  "name": "_addedTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1495,
                                  "src": "26719:12:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 1541,
                                  "name": "STABLECOINDUSTTHRESHOLD",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1093,
                                  "src": "26734:23:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "26719:38:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 1554,
                              "nodeType": "IfStatement",
                              "src": "26716:177:20",
                              "trueBody": {
                                "id": 1553,
                                "nodeType": "Block",
                                "src": "26759:134:20",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1547,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 1543,
                                          "name": "tokenIdToStableCoin",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1044,
                                          "src": "26781:19:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                            "typeString": "mapping(uint256 => uint256)"
                                          }
                                        },
                                        "id": 1545,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 1544,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1505,
                                          "src": "26801:1:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "26781:22:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "id": 1546,
                                        "name": "_newIndividialBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1502,
                                        "src": "26806:21:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "26781:46:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1548,
                                    "nodeType": "ExpressionStatement",
                                    "src": "26781:46:20"
                                  },
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1551,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "id": 1549,
                                        "name": "_newTotal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1498,
                                        "src": "26849:9:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "+=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "id": 1550,
                                        "name": "_addedTokens",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1495,
                                        "src": "26862:12:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "26849:25:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1552,
                                    "nodeType": "ExpressionStatement",
                                    "src": "26849:25:20"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1508,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1505,
                      "src": "26287:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1509,
                      "name": "tokenCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1028,
                      "src": "26291:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "26287:16:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1558,
                  "initializationExpression": {
                    "assignments": [
                      1505
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1505,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1558,
                        "src": "26272:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1504,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "26272:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1507,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1506,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "26284:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "26272:13:20"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "26304:3:20",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1511,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1505,
                        "src": "26304:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1513,
                    "nodeType": "ExpressionStatement",
                    "src": "26304:3:20"
                  },
                  "nodeType": "ForStatement",
                  "src": "26268:649:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1559,
                      "name": "totalStableCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1065,
                      "src": "26926:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1560,
                      "name": "_newTotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1498,
                      "src": "26944:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "26926:27:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1562,
                  "nodeType": "ExpressionStatement",
                  "src": "26926:27:20"
                }
              ]
            },
            "documentation": {
              "id": 1491,
              "nodeType": "StructuredDocumentation",
              "src": "26043:58:20",
              "text": "@dev Update balances with new interest values"
            },
            "id": 1564,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateAllBalances",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1492,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26132:2:20"
            },
            "returnParameters": {
              "id": 1493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26144:0:20"
            },
            "scope": 2760,
            "src": "26106:854:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1625,
              "nodeType": "Block",
              "src": "27167:630:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1570,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "27185:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "27185:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1573,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1566,
                              "src": "27207:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1572,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3018,
                            "src": "27199:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 1574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27199:17:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "27185:31:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d75737420626520746f6b656e206f776e65722e",
                        "id": 1576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27218:22:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c5e0901735b3ab46984767280cde9f38c06014760d0e28944ff8b6ca3d6d7b8",
                          "typeString": "literal_string \"Must be token owner.\""
                        },
                        "value": "Must be token owner."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7c5e0901735b3ab46984767280cde9f38c06014760d0e28944ff8b6ca3d6d7b8",
                          "typeString": "literal_string \"Must be token owner.\""
                        }
                      ],
                      "id": 1569,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "27177:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27177:64:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1578,
                  "nodeType": "ExpressionStatement",
                  "src": "27177:64:20"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1579,
                        "name": "tokenIdToDipValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1036,
                        "src": "27255:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1581,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1580,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1566,
                        "src": "27273:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "27255:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1582,
                        "name": "getLatestPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1853,
                        "src": "27286:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 1583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "27286:16:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "27255:47:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1623,
                    "nodeType": "Block",
                    "src": "27389:402:20",
                    "statements": [
                      {
                        "assignments": [
                          1591
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1591,
                            "mutability": "mutable",
                            "name": "_withdrawal",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 1623,
                            "src": "27454:19:20",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1590,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "27454:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1596,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1593,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1566,
                              "src": "27500:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1594,
                              "name": "EARLYWITHDRAWALFEEPERCENT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1078,
                              "src": "27510:25:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1592,
                            "name": "retrieveLentStablecoins",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2577,
                            "src": "27476:23:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) returns (uint256)"
                            }
                          },
                          "id": 1595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27476:60:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "27454:82:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1603,
                                  "name": "router",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1112,
                                  "src": "27593:6:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IUniswapV2Router02_$12835",
                                    "typeString": "contract IUniswapV2Router02"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IUniswapV2Router02_$12835",
                                    "typeString": "contract IUniswapV2Router02"
                                  }
                                ],
                                "id": 1602,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "27585:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1601,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "27585:7:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 1604,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "27585:15:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1605,
                              "name": "_withdrawal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1591,
                              "src": "27602:11:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1598,
                                  "name": "StableCoinAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1124,
                                  "src": "27558:17:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1597,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12442,
                                "src": "27551:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$12442_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1599,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "27551:25:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$12442",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1600,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12409,
                            "src": "27551:33:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27551:63:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1607,
                        "nodeType": "ExpressionStatement",
                        "src": "27551:63:20"
                      },
                      {
                        "assignments": [
                          1609,
                          1611
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1609,
                            "mutability": "mutable",
                            "name": "ETHSent",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 1623,
                            "src": "27629:15:20",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1608,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "27629:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1611,
                            "mutability": "mutable",
                            "name": "USDTReceived",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 1623,
                            "src": "27646:20:20",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1610,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "27646:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1622,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1614,
                              "name": "_withdrawal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1591,
                              "src": "27708:11:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1615,
                              "name": "StableCoinAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1124,
                              "src": "27721:17:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1617,
                                  "name": "_tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1566,
                                  "src": "27748:8:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1616,
                                "name": "ownerOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3018,
                                "src": "27740:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 1618,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "27740:17:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1619,
                              "name": "router",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1112,
                              "src": "27759:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV2Router02_$12835",
                                "typeString": "contract IUniswapV2Router02"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1620,
                              "name": "swapSlippage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1062,
                              "src": "27767:12:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_contract$_IUniswapV2Router02_$12835",
                                "typeString": "contract IUniswapV2Router02"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1612,
                              "name": "UniswapHelpers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 262,
                              "src": "27670:14:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_UniswapHelpers_$262_$",
                                "typeString": "type(library UniswapHelpers)"
                              }
                            },
                            "id": 1613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_swapExactTokensForETH",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 118,
                            "src": "27670:37:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_contract$_IUniswapV2Router02_$12835_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                              "typeString": "function (uint256,address,address,contract IUniswapV2Router02,uint256) returns (uint256,uint256)"
                            }
                          },
                          "id": 1621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27670:110:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "27628:152:20"
                      }
                    ]
                  },
                  "id": 1624,
                  "nodeType": "IfStatement",
                  "src": "27251:540:20",
                  "trueBody": {
                    "id": 1589,
                    "nodeType": "Block",
                    "src": "27303:44:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1586,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1566,
                              "src": "27327:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1585,
                            "name": "buyTheDip",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1821,
                            "src": "27317:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27317:19:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1588,
                        "nodeType": "ExpressionStatement",
                        "src": "27317:19:20"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "60570068",
            "id": 1626,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "destroyAndRefund",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1567,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1566,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1626,
                  "src": "27142:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1565,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27142:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "27141:18:20"
            },
            "returnParameters": {
              "id": 1568,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27167:0:20"
            },
            "scope": 2760,
            "src": "27116:681:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1710,
              "nodeType": "Block",
              "src": "28040:444:20",
              "statements": [
                {
                  "assignments": [
                    1636
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1636,
                      "mutability": "mutable",
                      "name": "total",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1710,
                      "src": "28050:13:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1635,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "28050:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1638,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 1637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "28064:1:20",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28050:15:20"
                },
                {
                  "body": {
                    "id": 1660,
                    "nodeType": "Block",
                    "src": "28111:87:20",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1650,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1640,
                                "src": "28136:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1649,
                              "name": "ownerOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3018,
                              "src": "28128:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view returns (address)"
                              }
                            },
                            "id": 1651,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "28128:10:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1652,
                            "name": "_addy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1629,
                            "src": "28140:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "28128:17:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1659,
                        "nodeType": "IfStatement",
                        "src": "28125:63:20",
                        "trueBody": {
                          "id": 1658,
                          "nodeType": "Block",
                          "src": "28146:42:20",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1656,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 1654,
                                  "name": "total",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1636,
                                  "src": "28164:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 1655,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "28172:1:20",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "28164:9:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1657,
                              "nodeType": "ExpressionStatement",
                              "src": "28164:9:20"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1643,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1640,
                      "src": "28092:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1644,
                      "name": "tokenCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1028,
                      "src": "28094:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "28092:14:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1661,
                  "initializationExpression": {
                    "assignments": [
                      1640
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1640,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1661,
                        "src": "28080:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1639,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "28080:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1642,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28090:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "28080:11:20"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "28107:3:20",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1646,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1640,
                        "src": "28107:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1648,
                    "nodeType": "ExpressionStatement",
                    "src": "28107:3:20"
                  },
                  "nodeType": "ForStatement",
                  "src": "28076:122:20"
                },
                {
                  "assignments": [
                    1666
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1666,
                      "mutability": "mutable",
                      "name": "owned",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1710,
                      "src": "28208:22:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1664,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "28208:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1665,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "28208:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1672,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1670,
                        "name": "total",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1636,
                        "src": "28247:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "28233:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1667,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "28237:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1668,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "28237:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 1671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28233:20:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28208:45:20"
                },
                {
                  "assignments": [
                    1674
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1674,
                      "mutability": "mutable",
                      "name": "count",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1710,
                      "src": "28263:13:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1673,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "28263:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1676,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 1675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "28277:1:20",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28263:15:20"
                },
                {
                  "body": {
                    "id": 1706,
                    "nodeType": "Block",
                    "src": "28324:131:20",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1687,
                            "name": "count",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1674,
                            "src": "28341:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1688,
                            "name": "total",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1636,
                            "src": "28348:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "28341:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1692,
                        "nodeType": "IfStatement",
                        "src": "28338:26:20",
                        "trueBody": {
                          "id": 1691,
                          "nodeType": "Block",
                          "src": "28354:10:20",
                          "statements": [
                            {
                              "id": 1690,
                              "nodeType": "Break",
                              "src": "28356:5:20"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1694,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1678,
                                "src": "28388:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1693,
                              "name": "ownerOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3018,
                              "src": "28380:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view returns (address)"
                              }
                            },
                            "id": 1695,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "28380:10:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1696,
                            "name": "_addy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1629,
                            "src": "28392:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "28380:17:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1705,
                        "nodeType": "IfStatement",
                        "src": "28377:68:20",
                        "trueBody": {
                          "id": 1704,
                          "nodeType": "Block",
                          "src": "28398:47:20",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1702,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1698,
                                    "name": "owned",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1666,
                                    "src": "28416:5:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 1700,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 1699,
                                    "name": "count",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1674,
                                    "src": "28422:5:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "28416:12:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 1701,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1678,
                                  "src": "28429:1:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "28416:14:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1703,
                              "nodeType": "ExpressionStatement",
                              "src": "28416:14:20"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1681,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1678,
                      "src": "28305:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1682,
                      "name": "tokenCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1028,
                      "src": "28307:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "28305:14:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1707,
                  "initializationExpression": {
                    "assignments": [
                      1678
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1678,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1707,
                        "src": "28293:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1677,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "28293:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1680,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1679,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28303:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "28293:11:20"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "28320:3:20",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1684,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1678,
                        "src": "28320:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1686,
                    "nodeType": "ExpressionStatement",
                    "src": "28320:3:20"
                  },
                  "nodeType": "ForStatement",
                  "src": "28289:166:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1708,
                    "name": "owned",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1666,
                    "src": "28472:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 1634,
                  "id": 1709,
                  "nodeType": "Return",
                  "src": "28465:12:20"
                }
              ]
            },
            "documentation": {
              "id": 1627,
              "nodeType": "StructuredDocumentation",
              "src": "27803:151:20",
              "text": "@dev Get all NFTs owned by owner\n@param _addy -- address to get list of NFTs of\n@return -- list of token IDs owned by addy"
            },
            "functionSelector": "5d2e1157",
            "id": 1711,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllNFTsByOwner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1630,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1629,
                  "mutability": "mutable",
                  "name": "_addy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1711,
                  "src": "27987:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1628,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "27987:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "27986:15:20"
            },
            "returnParameters": {
              "id": 1634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1633,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1711,
                  "src": "28023:16:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1631,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "28023:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1632,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "28023:9:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "28022:18:20"
            },
            "scope": 2760,
            "src": "27960:524:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1820,
              "nodeType": "Block",
              "src": "28546:1028:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1719,
                            "name": "tokenIdToDipValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1036,
                            "src": "28589:17:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 1721,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1720,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1713,
                            "src": "28607:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "28589:27:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1722,
                            "name": "getLatestPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1853,
                            "src": "28620:14:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "28620:16:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "28589:47:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "50726963652061626f7665206469704c6576656c",
                        "id": 1725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28638:22:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_395685f0a8e4d0ffb7792c79696d497365e58bbafc24566ff4168b57d04aa6aa",
                          "typeString": "literal_string \"Price above dipLevel\""
                        },
                        "value": "Price above dipLevel"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_395685f0a8e4d0ffb7792c79696d497365e58bbafc24566ff4168b57d04aa6aa",
                          "typeString": "literal_string \"Price above dipLevel\""
                        }
                      ],
                      "id": 1718,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "28581:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28581:80:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1727,
                  "nodeType": "ExpressionStatement",
                  "src": "28581:80:20"
                },
                {
                  "assignments": [
                    1729
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1729,
                      "mutability": "mutable",
                      "name": "initialBalance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1820,
                      "src": "28671:22:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1728,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "28671:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1735,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1732,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "28704:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BuyTheDipNFT_$2760",
                            "typeString": "contract BuyTheDipNFT"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_BuyTheDipNFT_$2760",
                            "typeString": "contract BuyTheDipNFT"
                          }
                        ],
                        "id": 1731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "28696:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1730,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "28696:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 1733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "28696:13:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 1734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "28696:21:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28671:46:20"
                },
                {
                  "assignments": [
                    1737
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1737,
                      "mutability": "mutable",
                      "name": "_withdrawal",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1820,
                      "src": "28727:19:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1736,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "28727:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1742,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1739,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1713,
                        "src": "28773:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1740,
                        "name": "NORMALWITHDRAWALFEEPERCENT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1081,
                        "src": "28783:26:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1738,
                      "name": "retrieveLentStablecoins",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2577,
                      "src": "28749:23:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) returns (uint256)"
                      }
                    },
                    "id": 1741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28749:61:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28727:83:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1749,
                            "name": "router",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1112,
                            "src": "28919:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$12835",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$12835",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          ],
                          "id": 1748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "28911:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1747,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "28911:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 1750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28911:15:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1751,
                        "name": "_withdrawal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1737,
                        "src": "28928:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1744,
                            "name": "StableCoinAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1124,
                            "src": "28884:17:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1743,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12442,
                          "src": "28877:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$12442_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28877:25:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$12442",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12409,
                      "src": "28877:33:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28877:63:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1753,
                  "nodeType": "ExpressionStatement",
                  "src": "28877:63:20"
                },
                {
                  "assignments": [
                    1755,
                    1757
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1755,
                      "mutability": "mutable",
                      "name": "ETHSent",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1820,
                      "src": "28951:15:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1754,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "28951:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1757,
                      "mutability": "mutable",
                      "name": "USDTReceived",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1820,
                      "src": "28968:20:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1756,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "28968:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1768,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1760,
                        "name": "_withdrawal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1737,
                        "src": "29030:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1761,
                        "name": "StableCoinAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1124,
                        "src": "29043:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1763,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1713,
                            "src": "29070:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1762,
                          "name": "ownerOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3018,
                          "src": "29062:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 1764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29062:17:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1765,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1112,
                        "src": "29081:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Router02_$12835",
                          "typeString": "contract IUniswapV2Router02"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1766,
                        "name": "swapSlippage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1062,
                        "src": "29089:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IUniswapV2Router02_$12835",
                          "typeString": "contract IUniswapV2Router02"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1758,
                        "name": "UniswapHelpers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 262,
                        "src": "28992:14:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_UniswapHelpers_$262_$",
                          "typeString": "type(library UniswapHelpers)"
                        }
                      },
                      "id": 1759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_swapExactTokensForETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 118,
                      "src": "28992:37:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_contract$_IUniswapV2Router02_$12835_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,address,address,contract IUniswapV2Router02,uint256) returns (uint256,uint256)"
                      }
                    },
                    "id": 1767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28992:110:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28950:152:20"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1770,
                        "name": "USDTReceived",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1757,
                        "src": "29139:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1771,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "29153:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "29153:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1769,
                      "name": "CoinsReleasedToOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1142,
                      "src": "29118:20:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 1773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29118:51:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1774,
                  "nodeType": "EmitStatement",
                  "src": "29113:56:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1775,
                        "name": "tokenIdToIsWaitingToBuy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1048,
                        "src": "29179:23:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 1777,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1776,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1713,
                        "src": "29203:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "29179:33:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 1778,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "29215:5:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "29179:41:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1780,
                  "nodeType": "ExpressionStatement",
                  "src": "29179:41:20"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 1785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1781,
                        "name": "tokenIdToDipLevel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1032,
                        "src": "29234:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint8_$",
                          "typeString": "mapping(uint256 => uint8)"
                        }
                      },
                      "id": 1783,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1782,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1713,
                        "src": "29252:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "29234:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "37",
                      "id": 1784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "29264:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_7_by_1",
                        "typeString": "int_const 7"
                      },
                      "value": "7"
                    },
                    "src": "29234:31:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1793,
                  "nodeType": "IfStatement",
                  "src": "29230:74:20",
                  "trueBody": {
                    "id": 1792,
                    "nodeType": "Block",
                    "src": "29267:37:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1786,
                              "name": "tokenIdToDipLevel",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1032,
                              "src": "29269:17:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint8_$",
                                "typeString": "mapping(uint256 => uint8)"
                              }
                            },
                            "id": 1788,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1787,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1713,
                              "src": "29287:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "29269:27:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 1789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "29300:1:20",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "29269:32:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 1791,
                        "nodeType": "ExpressionStatement",
                        "src": "29269:32:20"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1794,
                        "name": "tokenIdToEnergy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1052,
                        "src": "29314:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1796,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1795,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1713,
                        "src": "29330:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "29314:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1797,
                              "name": "tokenIdToStableCoin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1044,
                              "src": "29343:19:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 1799,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1798,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1713,
                              "src": "29363:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "29343:29:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1804,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1800,
                                "name": "tokenIdToDipPercent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1040,
                                "src": "29375:19:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 1802,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1801,
                                "name": "_tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1713,
                                "src": "29395:8:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "29375:29:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 1803,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "29407:1:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "29375:33:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "29343:65:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130303030",
                          "id": 1806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "29411:5:20",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        },
                        "src": "29343:73:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1808,
                          "name": "tokenIdToDipLevel",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1032,
                          "src": "29419:17:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint8_$",
                            "typeString": "mapping(uint256 => uint8)"
                          }
                        },
                        "id": 1810,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1809,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1713,
                          "src": "29437:8:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "29419:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "29343:103:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "29314:132:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1813,
                  "nodeType": "ExpressionStatement",
                  "src": "29314:132:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1814,
                        "name": "tokenIdToEnergy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1052,
                        "src": "29534:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1816,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1815,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1713,
                        "src": "29550:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "29534:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "3130303030",
                      "id": 1817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "29562:5:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10000"
                    },
                    "src": "29534:33:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1819,
                  "nodeType": "ExpressionStatement",
                  "src": "29534:33:20"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "04276b2f",
            "id": 1821,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1716,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1715,
                  "name": "onlyKeeper",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1156,
                  "src": "28535:10:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "28535:10:20"
              }
            ],
            "name": "buyTheDip",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1713,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1821,
                  "src": "28510:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1712,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28510:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "28509:18:20"
            },
            "returnParameters": {
              "id": 1717,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28546:0:20"
            },
            "scope": 2760,
            "src": "28491:1083:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1852,
              "nodeType": "Block",
              "src": "29637:345:20",
              "statements": [
                {
                  "assignments": [
                    1827,
                    1829,
                    1831,
                    1833,
                    1835
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1827,
                      "mutability": "mutable",
                      "name": "roundID",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1852,
                      "src": "29661:14:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      },
                      "typeName": {
                        "id": 1826,
                        "name": "uint80",
                        "nodeType": "ElementaryTypeName",
                        "src": "29661:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1829,
                      "mutability": "mutable",
                      "name": "price",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1852,
                      "src": "29689:9:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 1828,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "29689:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1831,
                      "mutability": "mutable",
                      "name": "startedAt",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1852,
                      "src": "29712:14:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1830,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "29712:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1833,
                      "mutability": "mutable",
                      "name": "timeStamp",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1852,
                      "src": "29740:14:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1832,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "29740:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1835,
                      "mutability": "mutable",
                      "name": "answeredInRound",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1852,
                      "src": "29768:22:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint80",
                        "typeString": "uint80"
                      },
                      "typeName": {
                        "id": 1834,
                        "name": "uint80",
                        "nodeType": "ElementaryTypeName",
                        "src": "29768:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1839,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1836,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1134,
                        "src": "29803:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$3984",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 1837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3983,
                      "src": "29803:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 1838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29803:27:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "29647:183:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1841,
                          "name": "timeStamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1833,
                          "src": "29908:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "29920:1:20",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "29908:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "526f756e64206e6f7420636f6d706c657465",
                        "id": 1844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29923:20:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b7ecab3e737ab1feff263511100307a44f17c7fb1128774d25941524e6209697",
                          "typeString": "literal_string \"Round not complete\""
                        },
                        "value": "Round not complete"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b7ecab3e737ab1feff263511100307a44f17c7fb1128774d25941524e6209697",
                          "typeString": "literal_string \"Round not complete\""
                        }
                      ],
                      "id": 1840,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "29900:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29900:44:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1846,
                  "nodeType": "ExpressionStatement",
                  "src": "29900:44:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1849,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1829,
                        "src": "29969:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 1848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "29961:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 1847,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "29961:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 1850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29961:14:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1825,
                  "id": 1851,
                  "nodeType": "Return",
                  "src": "29954:21:20"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8e15f473",
            "id": 1853,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLatestPrice",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1822,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29604:2:20"
            },
            "returnParameters": {
              "id": 1825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1824,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1853,
                  "src": "29628:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1823,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29628:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "29627:9:20"
            },
            "scope": 2760,
            "src": "29581:401:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3996
            ],
            "body": {
              "id": 1878,
              "nodeType": "Block",
              "src": "30119:222:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1863,
                      "name": "upkeepNeeded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1859,
                      "src": "30129:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1867,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1864,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "30145:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1865,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "30145:15:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1866,
                                "name": "lastTimeStamp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1070,
                                "src": "30163:13:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "30145:31:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1868,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "30144:33:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1869,
                          "name": "interval",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1068,
                          "src": "30180:8:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "30144:44:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1871,
                          "name": "highestDip",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1059,
                          "src": "30192:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1872,
                            "name": "getLatestPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1853,
                            "src": "30206:14:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "30206:16:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "30192:30:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "30144:78:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "30129:93:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1877,
                  "nodeType": "ExpressionStatement",
                  "src": "30129:93:20"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "6e04ff0d",
            "id": 1879,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkUpkeep",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1857,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "30050:8:20"
            },
            "parameters": {
              "id": 1856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1855,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1879,
                  "src": "30009:14:20",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1854,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "30009:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "30008:32:20"
            },
            "returnParameters": {
              "id": 1862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1859,
                  "mutability": "mutable",
                  "name": "upkeepNeeded",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1879,
                  "src": "30068:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1858,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "30068:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1861,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1879,
                  "src": "30087:12:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1860,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "30087:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "30067:51:20"
            },
            "scope": 2760,
            "src": "29988:353:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              4002
            ],
            "body": {
              "id": 1885,
              "nodeType": "Block",
              "src": "30468:23:20",
              "statements": []
            },
            "documentation": null,
            "functionSelector": "4585e33b",
            "id": 1886,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "performUpkeep",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1883,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "30459:8:20"
            },
            "parameters": {
              "id": 1882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1881,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1886,
                  "src": "30416:14:20",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1880,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "30416:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "30415:34:20"
            },
            "returnParameters": {
              "id": 1884,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30468:0:20"
            },
            "scope": 2760,
            "src": "30393:98:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1943,
              "nodeType": "Block",
              "src": "30533:585:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1889,
                      "name": "lastTimeStamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1070,
                      "src": "30543:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1890,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "30559:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "30559:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "30543:31:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1893,
                  "nodeType": "ExpressionStatement",
                  "src": "30543:31:20"
                },
                {
                  "assignments": [
                    1895
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1895,
                      "mutability": "mutable",
                      "name": "latestPrice",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1943,
                      "src": "30675:19:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1894,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "30675:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1898,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1896,
                      "name": "getLatestPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1853,
                      "src": "30697:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30697:16:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "30675:38:20"
                },
                {
                  "body": {
                    "id": 1941,
                    "nodeType": "Block",
                    "src": "30759:353:20",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1909,
                              "name": "tokenIdToIsWaitingToBuy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1048,
                              "src": "30777:23:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                                "typeString": "mapping(uint256 => bool)"
                              }
                            },
                            "id": 1911,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1910,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1900,
                              "src": "30801:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "30777:26:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 1912,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "30807:4:20",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "30777:34:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1939,
                          "nodeType": "Block",
                          "src": "30956:146:20",
                          "statements": [
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1930,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1926,
                                    "name": "tokenIdToDipValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1036,
                                    "src": "30979:17:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 1928,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 1927,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1900,
                                    "src": "30997:1:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "30979:20:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 1929,
                                  "name": "highestDip",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1059,
                                  "src": "31002:10:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "30979:33:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 1938,
                              "nodeType": "IfStatement",
                              "src": "30974:114:20",
                              "trueBody": {
                                "id": 1937,
                                "nodeType": "Block",
                                "src": "31014:74:20",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1935,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "id": 1931,
                                        "name": "highestDip",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1059,
                                        "src": "31036:10:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 1932,
                                          "name": "tokenIdToDipValue",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1036,
                                          "src": "31049:17:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                            "typeString": "mapping(uint256 => uint256)"
                                          }
                                        },
                                        "id": 1934,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 1933,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1900,
                                          "src": "31067:1:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "31049:20:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "31036:33:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1936,
                                    "nodeType": "ExpressionStatement",
                                    "src": "31036:33:20"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "id": 1940,
                        "nodeType": "IfStatement",
                        "src": "30773:329:20",
                        "trueBody": {
                          "id": 1925,
                          "nodeType": "Block",
                          "src": "30813:126:20",
                          "statements": [
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1918,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 1914,
                                    "name": "tokenIdToDipValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1036,
                                    "src": "30835:17:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 1916,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 1915,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1900,
                                    "src": "30853:1:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "30835:20:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 1917,
                                  "name": "latestPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1895,
                                  "src": "30859:11:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "30835:35:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 1924,
                              "nodeType": "IfStatement",
                              "src": "30831:94:20",
                              "trueBody": {
                                "id": 1923,
                                "nodeType": "Block",
                                "src": "30872:53:20",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 1920,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1900,
                                          "src": "30904:1:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 1919,
                                        "name": "buyTheDip",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1821,
                                        "src": "30894:9:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                          "typeString": "function (uint256)"
                                        }
                                      },
                                      "id": 1921,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "30894:12:20",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1922,
                                    "nodeType": "ExpressionStatement",
                                    "src": "30894:12:20"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1903,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1900,
                      "src": "30740:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1904,
                      "name": "tokenCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1028,
                      "src": "30742:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "30740:14:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1942,
                  "initializationExpression": {
                    "assignments": [
                      1900
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1900,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1942,
                        "src": "30728:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1899,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "30728:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1902,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "30738:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "30728:11:20"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "30755:3:20",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1906,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1900,
                        "src": "30755:1:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1908,
                    "nodeType": "ExpressionStatement",
                    "src": "30755:3:20"
                  },
                  "nodeType": "ForStatement",
                  "src": "30724:388:20"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "18ff04ee",
            "id": 1944,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "performUpkeepTest",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1887,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30523:2:20"
            },
            "returnParameters": {
              "id": 1888,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30533:0:20"
            },
            "scope": 2760,
            "src": "30497:621:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3106
            ],
            "body": {
              "id": 2183,
              "nodeType": "Block",
              "src": "31213:7427:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1954,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1946,
                            "src": "31239:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1953,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3401,
                          "src": "31231:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 1955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "31231:17:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 1956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31250:49:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 1952,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "31223:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31223:77:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1958,
                  "nodeType": "ExpressionStatement",
                  "src": "31223:77:20"
                },
                {
                  "assignments": [
                    1960
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1960,
                      "mutability": "mutable",
                      "name": "isWaitingToBuy",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2183,
                      "src": "31311:19:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1959,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "31311:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1964,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1961,
                      "name": "tokenIdToIsWaitingToBuy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1048,
                      "src": "31333:23:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                        "typeString": "mapping(uint256 => bool)"
                      }
                    },
                    "id": 1963,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1962,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1946,
                      "src": "31357:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "31333:33:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "31311:55:20"
                },
                {
                  "assignments": [
                    1966
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1966,
                      "mutability": "mutable",
                      "name": "_dipLevel",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2183,
                      "src": "31376:17:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1965,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "31376:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1970,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1967,
                      "name": "tokenIdToDipLevel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1032,
                      "src": "31396:17:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint8_$",
                        "typeString": "mapping(uint256 => uint8)"
                      }
                    },
                    "id": 1969,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1968,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1946,
                      "src": "31414:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "31396:27:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "31376:47:20"
                },
                {
                  "assignments": [
                    1972
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1972,
                      "mutability": "mutable",
                      "name": "_strikePrice",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2183,
                      "src": "31433:20:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1971,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "31433:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1979,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1975,
                          "name": "tokenIdToDipValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1036,
                          "src": "31464:17:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                            "typeString": "mapping(uint256 => uint256)"
                          }
                        },
                        "id": 1977,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1976,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1946,
                          "src": "31482:8:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "31464:27:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "31456:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 1973,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "31456:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 1978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31456:36:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "31433:59:20"
                },
                {
                  "assignments": [
                    1981
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1981,
                      "mutability": "mutable",
                      "name": "_RADIUS",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2183,
                      "src": "31502:15:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1980,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "31502:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1983,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "3738",
                    "id": 1982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "31520:2:20",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_78_by_1",
                      "typeString": "int_const 78"
                    },
                    "value": "78"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "31502:20:20"
                },
                {
                  "assignments": [
                    1985
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1985,
                      "mutability": "mutable",
                      "name": "_latestPrice",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2183,
                      "src": "31542:20:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1984,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "31542:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1991,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1988,
                          "name": "getLatestPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1853,
                          "src": "31573:14:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 1989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "31573:16:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "31565:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 1986,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "31565:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 1990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31565:25:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "31542:48:20"
                },
                {
                  "assignments": [
                    1993
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1993,
                      "mutability": "mutable",
                      "name": "_circleRadius",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2183,
                      "src": "31600:21:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1992,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "31600:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1994,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "31600:21:20"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 1996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "31635:15:20",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 1995,
                      "name": "isWaitingToBuy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1960,
                      "src": "31636:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2040,
                    "nodeType": "Block",
                    "src": "31714:226:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2002,
                            "name": "_circleRadius",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1993,
                            "src": "31728:13:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "condition": {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2016,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 2003,
                                    "name": "_latestPrice",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1985,
                                    "src": "31745:12:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "components": [
                                      {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2014,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 2007,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "argumentTypes": null,
                                            "components": [
                                              {
                                                "argumentTypes": null,
                                                "id": 2004,
                                                "name": "_strikePrice",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1972,
                                                "src": "31762:12:20",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "id": 2005,
                                            "isConstant": false,
                                            "isInlineArray": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "TupleExpression",
                                            "src": "31761:14:20",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "argumentTypes": null,
                                            "hexValue": "313030",
                                            "id": 2006,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "31776:3:20",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_100_by_1",
                                              "typeString": "int_const 100"
                                            },
                                            "value": "100"
                                          },
                                          "src": "31761:18:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "components": [
                                            {
                                              "argumentTypes": null,
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 2012,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "argumentTypes": null,
                                                "hexValue": "313030",
                                                "id": 2008,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "31781:3:20",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_100_by_1",
                                                  "typeString": "int_const 100"
                                                },
                                                "value": "100"
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "argumentTypes": null,
                                                "baseExpression": {
                                                  "argumentTypes": null,
                                                  "id": 2009,
                                                  "name": "tokenIdToDipPercent",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1040,
                                                  "src": "31787:19:20",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                                    "typeString": "mapping(uint256 => uint256)"
                                                  }
                                                },
                                                "id": 2011,
                                                "indexExpression": {
                                                  "argumentTypes": null,
                                                  "id": 2010,
                                                  "name": "_tokenId",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1946,
                                                  "src": "31807:8:20",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "31787:29:20",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "31781:35:20",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 2013,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "31780:37:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "31761:56:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 2015,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "31760:58:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "31745:73:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 2017,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "31744:75:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2035,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2033,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 2021,
                                      "name": "_RADIUS",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1981,
                                      "src": "31834:7:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "components": [
                                        {
                                          "argumentTypes": null,
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 2031,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "argumentTypes": null,
                                            "hexValue": "313030",
                                            "id": 2022,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "31843:3:20",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_100_by_1",
                                              "typeString": "int_const 100"
                                            },
                                            "value": "100"
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "argumentTypes": null,
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 2030,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "argumentTypes": null,
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 2028,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "argumentTypes": null,
                                                "hexValue": "313030",
                                                "id": 2023,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "31849:3:20",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_100_by_1",
                                                  "typeString": "int_const 100"
                                                },
                                                "value": "100"
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "argumentTypes": null,
                                                "components": [
                                                  {
                                                    "argumentTypes": null,
                                                    "commonType": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    },
                                                    "id": 2026,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "argumentTypes": null,
                                                      "id": 2024,
                                                      "name": "_latestPrice",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 1985,
                                                      "src": "31854:12:20",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "-",
                                                    "rightExpression": {
                                                      "argumentTypes": null,
                                                      "id": 2025,
                                                      "name": "_strikePrice",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 1972,
                                                      "src": "31869:12:20",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "src": "31854:27:20",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  }
                                                ],
                                                "id": 2027,
                                                "isConstant": false,
                                                "isInlineArray": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "TupleExpression",
                                                "src": "31853:29:20",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "31849:33:20",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "/",
                                            "rightExpression": {
                                              "argumentTypes": null,
                                              "id": 2029,
                                              "name": "_latestPrice",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1985,
                                              "src": "31883:12:20",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "31849:46:20",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "31843:52:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 2032,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "31842:54:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "31834:62:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "313030",
                                    "id": 2034,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "31897:3:20",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100_by_1",
                                      "typeString": "int_const 100"
                                    },
                                    "value": "100"
                                  },
                                  "src": "31834:66:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 2020,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "31826:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 2019,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "31826:7:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 2036,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "31826:75:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2037,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "Conditional",
                            "src": "31744:157:20",
                            "trueExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2018,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "31822:1:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "31728:173:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2039,
                        "nodeType": "ExpressionStatement",
                        "src": "31728:173:20"
                      }
                    ]
                  },
                  "id": 2041,
                  "nodeType": "IfStatement",
                  "src": "31631:309:20",
                  "trueBody": {
                    "id": 2001,
                    "nodeType": "Block",
                    "src": "31652:48:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1999,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1997,
                            "name": "_circleRadius",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1993,
                            "src": "31666:13:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1998,
                            "name": "_RADIUS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1981,
                            "src": "31682:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "31666:23:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2000,
                        "nodeType": "ExpressionStatement",
                        "src": "31666:23:20"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2043
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2043,
                      "mutability": "mutable",
                      "name": "_energy",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2183,
                      "src": "31949:15:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2042,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "31949:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2047,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2044,
                      "name": "tokenIdToEnergy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1052,
                      "src": "31967:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 2046,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2045,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1946,
                      "src": "31983:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "31967:25:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "31949:43:20"
                },
                {
                  "assignments": [
                    2049
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2049,
                      "mutability": "mutable",
                      "name": "mainImage",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2183,
                      "src": "32003:23:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2048,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "32003:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2050,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "32003:23:20"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2051,
                      "name": "isWaitingToBuy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1960,
                      "src": "32130:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 2052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "32146:4:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "32130:20:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2089,
                    "nodeType": "Block",
                    "src": "33532:1222:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2071,
                            "name": "mainImage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2049,
                            "src": "33546:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "253343636972636c65207374796c653d2766696c6c3a2532336666666666663b7374726f6b653a2532333030343562623b7374726f6b652d77696474683a312e33383b7374726f6b652d6c696e656a6f696e3a726f756e643b7374726f6b652d6f7061636974793a313b7374726f6b652d6d697465726c696d69743a343b7374726f6b652d6461736861727261793a6e6f6e65272063783d27313735272063793d273230302720723d2731303027202f25334520",
                                    "id": 2076,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "33657:182:20",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_ae083b4e4cdaa824bb149d90d0da5d7e4d8664bb62a61c584fa886e4affda330",
                                      "typeString": "literal_string \"%3Ccircle style='fill:%23ffffff;stroke:%230045bb;stroke-width:1.38;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none' cx='175' cy='200' r='100' /%3E \""
                                    },
                                    "value": "%3Ccircle style='fill:%23ffffff;stroke:%230045bb;stroke-width:1.38;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none' cx='175' cy='200' r='100' /%3E "
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "253343636972636c65207374796c653d2766696c6c3a2532336666666666663b7374726f6b653a2532333030303030303b7374726f6b652d77696474683a343b7374726f6b652d6c696e656a6f696e3a726f756e643b7374726f6b652d6d697465726c696d69743a343b7374726f6b652d6461736861727261793a6e6f6e653b7374726f6b652d6f7061636974793a302e3332272063783d27313735272063793d273230302720723d27383027202f253345",
                                    "id": 2077,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "33857:180:20",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_f5d700e490f689c606dd9fc54bcabb77f9178ead5e8f7792ee56f67cb7c5cdf0",
                                      "typeString": "literal_string \"%3Ccircle style='fill:%23ffffff;stroke:%23000000;stroke-width:4;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0.32' cx='175' cy='200' r='80' /%3E\""
                                    },
                                    "value": "%3Ccircle style='fill:%23ffffff;stroke:%23000000;stroke-width:4;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0.32' cx='175' cy='200' r='80' /%3E"
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "253343636972636c652063783d27313735272063793d273230302720723d27",
                                    "id": 2078,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "34055:33:20",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_5eb8411efa92132999f201415d18bb9180bfb9a35fd1384f9c0fae1a2b196cbd",
                                      "typeString": "literal_string \"%3Ccircle cx='175' cy='200' r='\""
                                    },
                                    "value": "%3Ccircle cx='175' cy='200' r='"
                                  },
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 2080,
                                        "name": "_circleRadius",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1993,
                                        "src": "34099:13:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 2079,
                                      "name": "uint2str",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        2403,
                                        2481
                                      ],
                                      "referencedDeclaration": 2481,
                                      "src": "34090:8:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                        "typeString": "function (uint256) pure returns (string memory)"
                                      }
                                    },
                                    "id": 2081,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "34090:23:20",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "27207374726f6b653d2727207374726f6b652d77696474683d2730272066696c6c3d27677265656e27202f253345",
                                    "id": 2082,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "34115:48:20",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_4596ce16c255df03db9a831c39c1cffb0ee9630ed6e7563c5bd9be39ff158b59",
                                      "typeString": "literal_string \"' stroke='' stroke-width='0' fill='green' /%3E\""
                                    },
                                    "value": "' stroke='' stroke-width='0' fill='green' /%3E"
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "25334370617468207374796c653d2766696c6c3a6e6f6e653b7374726f6b653a2532336666666666663b7374726f6b652d77696474683a31353b7374726f6b652d6c696e656361703a726f756e643b7374726f6b652d6c696e656a6f696e3a726f756e643b7374726f6b652d6d697465726c696d69743a343b7374726f6b652d6f7061636974793a312720643d276d203133392c3231382032302e342c32332e372035362e392c2d35362e3627202f25334520",
                                    "id": 2083,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "34403:181:20",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_d376f3950c33f9b7748c67c8bc87b507b8a3318a96f785053f2582306f51789f",
                                      "typeString": "literal_string \"%3Cpath style='fill:none;stroke:%23ffffff;stroke-width:15;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1' d='m 139,218 20.4,23.7 56.9,-56.6' /%3E \""
                                    },
                                    "value": "%3Cpath style='fill:none;stroke:%23ffffff;stroke-width:15;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1' d='m 139,218 20.4,23.7 56.9,-56.6' /%3E "
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "2533437465787420783d2735352720793d27333138272066696c6c3d2762726f776e27253345436f6e67726174756c6174696f6e732120596f7520626f7567687420746865206469702e202533432f74657874253345",
                                    "id": 2084,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "34640:88:20",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_d9bec5d69b98df065f0f3d6af235232639b44828bdd09101cbf19af5fdfda1d4",
                                      "typeString": "literal_string \"%3Ctext x='55' y='318' fill='brown'%3ECongratulations! You bought the dip. %3C/text%3E\""
                                    },
                                    "value": "%3Ctext x='55' y='318' fill='brown'%3ECongratulations! You bought the dip. %3C/text%3E"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_ae083b4e4cdaa824bb149d90d0da5d7e4d8664bb62a61c584fa886e4affda330",
                                      "typeString": "literal_string \"%3Ccircle style='fill:%23ffffff;stroke:%230045bb;stroke-width:1.38;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none' cx='175' cy='200' r='100' /%3E \""
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_f5d700e490f689c606dd9fc54bcabb77f9178ead5e8f7792ee56f67cb7c5cdf0",
                                      "typeString": "literal_string \"%3Ccircle style='fill:%23ffffff;stroke:%23000000;stroke-width:4;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0.32' cx='175' cy='200' r='80' /%3E\""
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_5eb8411efa92132999f201415d18bb9180bfb9a35fd1384f9c0fae1a2b196cbd",
                                      "typeString": "literal_string \"%3Ccircle cx='175' cy='200' r='\""
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_4596ce16c255df03db9a831c39c1cffb0ee9630ed6e7563c5bd9be39ff158b59",
                                      "typeString": "literal_string \"' stroke='' stroke-width='0' fill='green' /%3E\""
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_d376f3950c33f9b7748c67c8bc87b507b8a3318a96f785053f2582306f51789f",
                                      "typeString": "literal_string \"%3Cpath style='fill:none;stroke:%23ffffff;stroke-width:15;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1' d='m 139,218 20.4,23.7 56.9,-56.6' /%3E \""
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_d9bec5d69b98df065f0f3d6af235232639b44828bdd09101cbf19af5fdfda1d4",
                                      "typeString": "literal_string \"%3Ctext x='55' y='318' fill='brown'%3ECongratulations! You bought the dip. %3C/text%3E\""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2074,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "33565:3:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 2075,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "33565:16:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 2085,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "33565:1177:20",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 2073,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "33558:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                "typeString": "type(string storage pointer)"
                              },
                              "typeName": {
                                "id": 2072,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "33558:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 2086,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "33558:1185:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "33546:1197:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 2088,
                        "nodeType": "ExpressionStatement",
                        "src": "33546:1197:20"
                      }
                    ]
                  },
                  "id": 2090,
                  "nodeType": "IfStatement",
                  "src": "32126:2628:20",
                  "trueBody": {
                    "id": 2070,
                    "nodeType": "Block",
                    "src": "32151:1345:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2054,
                            "name": "mainImage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2049,
                            "src": "32165:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "253343636972636c65207374796c653d2766696c6c3a2532336666666666663b7374726f6b653a2532333030343562623b7374726f6b652d77696474683a312e33383b7374726f6b652d6c696e656a6f696e3a726f756e643b7374726f6b652d6f7061636974793a313b7374726f6b652d6d697465726c696d69743a343b7374726f6b652d6461736861727261793a6e6f6e65272069643d2770617468383436272063783d27313735272063793d273230302720723d2731303027202f25334520",
                                    "id": 2059,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "32935:195:20",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_744209f4196d5c054ce86094d060fd9348a211a2becb4afe4497d8fbc903cdd1",
                                      "typeString": "literal_string \"%3Ccircle style='fill:%23ffffff;stroke:%230045bb;stroke-width:1.38;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none' id='path846' cx='175' cy='200' r='100' /%3E \""
                                    },
                                    "value": "%3Ccircle style='fill:%23ffffff;stroke:%230045bb;stroke-width:1.38;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none' id='path846' cx='175' cy='200' r='100' /%3E "
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "253343636972636c65207374796c653d2766696c6c3a2532336666666666663b7374726f6b653a2532333030303030303b7374726f6b652d77696474683a343b7374726f6b652d6c696e656a6f696e3a726f756e643b7374726f6b652d6d697465726c696d69743a343b7374726f6b652d6461736861727261793a6e6f6e653b7374726f6b652d6f7061636974793a302e3332272069643d27706174683834362d35272063783d27313735272063793d273230302720723d27383027202f253345",
                                    "id": 2060,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "33148:195:20",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_5c9688dad438302e221c9b55ebf6208e948b93357562ac1f759e97a223def230",
                                      "typeString": "literal_string \"%3Ccircle style='fill:%23ffffff;stroke:%23000000;stroke-width:4;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0.32' id='path846-5' cx='175' cy='200' r='80' /%3E\""
                                    },
                                    "value": "%3Ccircle style='fill:%23ffffff;stroke:%23000000;stroke-width:4;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0.32' id='path846-5' cx='175' cy='200' r='80' /%3E"
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "253343636972636c652063783d27313735272063793d273230302720723d27",
                                    "id": 2061,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "33361:33:20",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_5eb8411efa92132999f201415d18bb9180bfb9a35fd1384f9c0fae1a2b196cbd",
                                      "typeString": "literal_string \"%3Ccircle cx='175' cy='200' r='\""
                                    },
                                    "value": "%3Ccircle cx='175' cy='200' r='"
                                  },
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 2063,
                                        "name": "_circleRadius",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1993,
                                        "src": "33405:13:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 2062,
                                      "name": "uint2str",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        2403,
                                        2481
                                      ],
                                      "referencedDeclaration": 2481,
                                      "src": "33396:8:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                        "typeString": "function (uint256) pure returns (string memory)"
                                      }
                                    },
                                    "id": 2064,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "33396:23:20",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "27207374726f6b653d2727207374726f6b652d77696474683d2730272066696c6c3d27677265656e27202f253345",
                                    "id": 2065,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "33421:48:20",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_4596ce16c255df03db9a831c39c1cffb0ee9630ed6e7563c5bd9be39ff158b59",
                                      "typeString": "literal_string \"' stroke='' stroke-width='0' fill='green' /%3E\""
                                    },
                                    "value": "' stroke='' stroke-width='0' fill='green' /%3E"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_744209f4196d5c054ce86094d060fd9348a211a2becb4afe4497d8fbc903cdd1",
                                      "typeString": "literal_string \"%3Ccircle style='fill:%23ffffff;stroke:%230045bb;stroke-width:1.38;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none' id='path846' cx='175' cy='200' r='100' /%3E \""
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_5c9688dad438302e221c9b55ebf6208e948b93357562ac1f759e97a223def230",
                                      "typeString": "literal_string \"%3Ccircle style='fill:%23ffffff;stroke:%23000000;stroke-width:4;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0.32' id='path846-5' cx='175' cy='200' r='80' /%3E\""
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_5eb8411efa92132999f201415d18bb9180bfb9a35fd1384f9c0fae1a2b196cbd",
                                      "typeString": "literal_string \"%3Ccircle cx='175' cy='200' r='\""
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_4596ce16c255df03db9a831c39c1cffb0ee9630ed6e7563c5bd9be39ff158b59",
                                      "typeString": "literal_string \"' stroke='' stroke-width='0' fill='green' /%3E\""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2057,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "32184:3:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 2058,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "32184:16:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 2066,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "32184:1300:20",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 2056,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "32177:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                "typeString": "type(string storage pointer)"
                              },
                              "typeName": {
                                "id": 2055,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "32177:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 2067,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "32177:1308:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "32165:1320:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 2069,
                        "nodeType": "ExpressionStatement",
                        "src": "32165:1320:20"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2092
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2092,
                      "mutability": "mutable",
                      "name": "SVG",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2183,
                      "src": "34764:17:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2091,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "34764:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2126,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "25334373766720786d6c6e733d27687474703a2f2f7777772e77332e6f72672f323030302f737667272077696474683d2733353027206865696768743d273335302725334520253343726563742077696474683d2733353027206865696768743d2733353027207374796c653d2766696c6c3a726762283235352c3235352c323535293b7374726f6b652d77696474683a333b7374726f6b653a72676228302c302c302927202f253345",
                            "id": 2097,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "34845:172:20",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_1879df45eafa4f03f5186092933f549eaceee445d3e328264c61906d0ec0fa34",
                              "typeString": "literal_string \"%3Csvg xmlns='http://www.w3.org/2000/svg' width='350' height='350'%3E %3Crect width='350' height='350' style='fill:rgb(255,255,255);stroke-width:3;stroke:rgb(0,0,0)' /%3E\""
                            },
                            "value": "%3Csvg xmlns='http://www.w3.org/2000/svg' width='350' height='350'%3E %3Crect width='350' height='350' style='fill:rgb(255,255,255);stroke-width:3;stroke:rgb(0,0,0)' /%3E"
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "25334372656374207374796c653d276f7061636974793a302e33333b66696c6c3a2532333135373730303b66696c6c2d6f7061636974793a302e33333b7374726f6b653a2532333062393130303b7374726f6b652d77696474683a313b7374726f6b652d6c696e656361703a726f756e643b7374726f6b652d6c696e656a6f696e3a726f756e643b7374726f6b652d6d697465726c696d69743a343b7374726f6b652d6461736861727261793a6e6f6e653b7374726f6b652d6f7061636974793a313b7061696e742d6f726465723a6e6f726d616c272077696474683d2733353027206865696768743d273335302720783d27302720793d273027202f253345",
                            "id": 2098,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "35054:258:20",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c45e09e22d16da31f6a53102c8532237b1abb701b2888abdbbf4f9a1e1234f3b",
                              "typeString": "literal_string \"%3Crect style='opacity:0.33;fill:%23157700;fill-opacity:0.33;stroke:%230b9100;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:normal' width='350' height='350' x='0' y='0' /%3E\""
                            },
                            "value": "%3Crect style='opacity:0.33;fill:%23157700;fill-opacity:0.33;stroke:%230b9100;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:normal' width='350' height='350' x='0' y='0' /%3E"
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "25334372656374207374796c65203d20276f7061636974793a302e363b6d69782d626c656e642d6d6f64653a6e6f726d616c3b66696c6c3a6e6f6e653b7374726f6b653a2532333062393130303b7374726f6b652d77696474683a31353b7374726f6b652d6c696e656a6f696e3a6d697465723b7374726f6b652d6d697465726c696d69743a343b7374726f6b652d6461736861727261793a6e6f6e653b7374726f6b652d6f7061636974793a313b7061696e742d6f726465723a6e6f726d616c27206964203d20277265637439323627207769647468203d20273331352720686569676874203d2027333135272078203d20273137272079203d2027313727202f2533452025334372656374207374796c65203d20276f7061636974793a302e33333b6d69782d626c656e642d6d6f64653a6e6f726d616c3b66696c6c3a6e6f6e653b7374726f6b653a2532333062393130303b7374726f6b652d77696474683a312e38323439363b7374726f6b652d6c696e656a6f696e3a6d697465723b7374726f6b652d6d697465726c696d69743a343b7374726f6b652d6461736861727261793a6e6f6e653b7374726f6b652d6f7061636974793a313b7061696e742d6f726465723a6e6f726d616c27206964203d2027726563743932362d3427207769647468203d20273238382720686569676874203d2027323838272078203d20273331272079203d2027333127202f253345",
                            "id": 2099,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "35351:533:20",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_0094abd0ac3a6aa1de537fe36c132c5dea82515641131106f854f9b85f758186",
                              "typeString": "literal_string \"%3Crect style = 'opacity:0.6;mix-blend-mode:normal;fill:none;stroke:%230b9100;stroke-width:15;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:normal' id = 'rect926' width = '315' height = '315' x = '17' y = '17' /%3E %3Crect style = 'opacity:0.33;mix-blend-mode:normal;fill:none;stroke:%230b9100;stroke-width:1.82496;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:normal' id = 'rect926-4' width = '288' height = '288' x = '31' y = '31' /%3E\""
                            },
                            "value": "%3Crect style = 'opacity:0.6;mix-blend-mode:normal;fill:none;stroke:%230b9100;stroke-width:15;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:normal' id = 'rect926' width = '315' height = '315' x = '17' y = '17' /%3E %3Crect style = 'opacity:0.33;mix-blend-mode:normal;fill:none;stroke:%230b9100;stroke-width:1.82496;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:normal' id = 'rect926-4' width = '288' height = '288' x = '31' y = '31' /%3E"
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "2533437465787420783d2733352720793d2734352720666f6e742d7765696768743d27626f6c64272066696c6c3d2762726f776e2725334543757272656e742050726963653a2533432f74657874253345",
                            "id": 2100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "35953:83:20",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_d1f9b9bb622bf66c097a5b9c1f45dc21d577955e926e20da1c2717582bf0ea43",
                              "typeString": "literal_string \"%3Ctext x='35' y='45' font-weight='bold' fill='brown'%3ECurrent Price:%3C/text%3E\""
                            },
                            "value": "%3Ctext x='35' y='45' font-weight='bold' fill='brown'%3ECurrent Price:%3C/text%3E"
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "2533437465787420783d273137352720793d2734352720666f6e742d7765696768743d276e6f726d616c272066696c6c3d2762726f776e2725334524",
                            "id": 2101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "36049:62:20",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7d8bb827289c08f712032e44205a0a36cdc73c1e6d861a32edc38103cd7c7464",
                              "typeString": "literal_string \"%3Ctext x='175' y='45' font-weight='normal' fill='brown'%3E$\""
                            },
                            "value": "%3Ctext x='175' y='45' font-weight='normal' fill='brown'%3E$"
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 2105,
                                      "name": "getLatestPrice",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1853,
                                      "src": "36130:14:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                        "typeString": "function () view returns (uint256)"
                                      }
                                    },
                                    "id": 2106,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "36130:16:20",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2104,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "36122:7:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 2103,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "36122:7:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 2107,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "36122:25:20",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "38",
                                "id": 2108,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "36149:1:20",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_8_by_1",
                                  "typeString": "int_const 8"
                                },
                                "value": "8"
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "32",
                                "id": 2109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "36152:1:20",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_8_by_1",
                                  "typeString": "int_const 8"
                                },
                                {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                }
                              ],
                              "id": 2102,
                              "name": "uint2str",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                2403,
                                2481
                              ],
                              "referencedDeclaration": 2403,
                              "src": "36113:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (uint256,uint256,uint256) pure returns (string memory)"
                              }
                            },
                            "id": 2110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "36113:41:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "2533432f74657874253345",
                            "id": 2111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "36156:13:20",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5eaf70c7fc59821878aeb38875915f6150432b4106ab0b0c8833384123e7e2ab",
                              "typeString": "literal_string \"%3C/text%3E\""
                            },
                            "value": "%3C/text%3E"
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "2533437465787420783d2733352720793d273630272020666f6e742d7765696768743d27626f6c64272066696c6c3d2762726f776e27253345537472696b652050726963653a2533432f74657874253345",
                            "id": 2112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "36214:83:20",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_0b5692a03c525f8d687e25d38e8a927be9e3b76017ed1e3399d325f77820c71e",
                              "typeString": "literal_string \"%3Ctext x='35' y='60'  font-weight='bold' fill='brown'%3EStrike Price:%3C/text%3E\""
                            },
                            "value": "%3Ctext x='35' y='60'  font-weight='bold' fill='brown'%3EStrike Price:%3C/text%3E"
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "2533437465787420783d273137352720793d2736302720666f6e742d7765696768743d276e6f726d616c272066696c6c3d2762726f776e2725334524",
                            "id": 2113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "36310:62:20",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9a5f766e1de118241816b75fee70b94c7e449d4a19f17205d3decf9dd500a0cc",
                              "typeString": "literal_string \"%3Ctext x='175' y='60' font-weight='normal' fill='brown'%3E$\""
                            },
                            "value": "%3Ctext x='175' y='60' font-weight='normal' fill='brown'%3E$"
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 2117,
                                    "name": "_strikePrice",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1972,
                                    "src": "36391:12:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2116,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "36383:7:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 2115,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "36383:7:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 2118,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "36383:21:20",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "38",
                                "id": 2119,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "36406:1:20",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_8_by_1",
                                  "typeString": "int_const 8"
                                },
                                "value": "8"
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "32",
                                "id": 2120,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "36409:1:20",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_8_by_1",
                                  "typeString": "int_const 8"
                                },
                                {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                }
                              ],
                              "id": 2114,
                              "name": "uint2str",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                2403,
                                2481
                              ],
                              "referencedDeclaration": 2403,
                              "src": "36374:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (uint256,uint256,uint256) pure returns (string memory)"
                              }
                            },
                            "id": 2121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "36374:37:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "2533432f74657874253345",
                            "id": 2122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "36413:13:20",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5eaf70c7fc59821878aeb38875915f6150432b4106ab0b0c8833384123e7e2ab",
                              "typeString": "literal_string \"%3C/text%3E\""
                            },
                            "value": "%3C/text%3E"
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "2533437465787420783d2733352720793d273735272020666f6e742d7765696768743d27626f6c64272066696c6c3d2762726f776e272533455553444320496e7665737465643a2533432f74657874253345",
                            "id": 2123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "36492:84:20",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_1213b6a1a2771220c5990f074838a80c58e5c5da67f0271fc0231be81cc6d064",
                              "typeString": "literal_string \"%3Ctext x='35' y='75'  font-weight='bold' fill='brown'%3EUSDC Invested:%3C/text%3E\""
                            },
                            "value": "%3Ctext x='35' y='75'  font-weight='bold' fill='brown'%3EUSDC Invested:%3C/text%3E"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_1879df45eafa4f03f5186092933f549eaceee445d3e328264c61906d0ec0fa34",
                              "typeString": "literal_string \"%3Csvg xmlns='http://www.w3.org/2000/svg' width='350' height='350'%3E %3Crect width='350' height='350' style='fill:rgb(255,255,255);stroke-width:3;stroke:rgb(0,0,0)' /%3E\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_c45e09e22d16da31f6a53102c8532237b1abb701b2888abdbbf4f9a1e1234f3b",
                              "typeString": "literal_string \"%3Crect style='opacity:0.33;fill:%23157700;fill-opacity:0.33;stroke:%230b9100;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:normal' width='350' height='350' x='0' y='0' /%3E\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_0094abd0ac3a6aa1de537fe36c132c5dea82515641131106f854f9b85f758186",
                              "typeString": "literal_string \"%3Crect style = 'opacity:0.6;mix-blend-mode:normal;fill:none;stroke:%230b9100;stroke-width:15;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:normal' id = 'rect926' width = '315' height = '315' x = '17' y = '17' /%3E %3Crect style = 'opacity:0.33;mix-blend-mode:normal;fill:none;stroke:%230b9100;stroke-width:1.82496;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:normal' id = 'rect926-4' width = '288' height = '288' x = '31' y = '31' /%3E\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_d1f9b9bb622bf66c097a5b9c1f45dc21d577955e926e20da1c2717582bf0ea43",
                              "typeString": "literal_string \"%3Ctext x='35' y='45' font-weight='bold' fill='brown'%3ECurrent Price:%3C/text%3E\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_7d8bb827289c08f712032e44205a0a36cdc73c1e6d861a32edc38103cd7c7464",
                              "typeString": "literal_string \"%3Ctext x='175' y='45' font-weight='normal' fill='brown'%3E$\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_5eaf70c7fc59821878aeb38875915f6150432b4106ab0b0c8833384123e7e2ab",
                              "typeString": "literal_string \"%3C/text%3E\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_0b5692a03c525f8d687e25d38e8a927be9e3b76017ed1e3399d325f77820c71e",
                              "typeString": "literal_string \"%3Ctext x='35' y='60'  font-weight='bold' fill='brown'%3EStrike Price:%3C/text%3E\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_9a5f766e1de118241816b75fee70b94c7e449d4a19f17205d3decf9dd500a0cc",
                              "typeString": "literal_string \"%3Ctext x='175' y='60' font-weight='normal' fill='brown'%3E$\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_5eaf70c7fc59821878aeb38875915f6150432b4106ab0b0c8833384123e7e2ab",
                              "typeString": "literal_string \"%3C/text%3E\""
                            },
                            {
                              "typeIdentifier": "t_stringliteral_1213b6a1a2771220c5990f074838a80c58e5c5da67f0271fc0231be81cc6d064",
                              "typeString": "literal_string \"%3Ctext x='35' y='75'  font-weight='bold' fill='brown'%3EUSDC Invested:%3C/text%3E\""
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2095,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "34791:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "34791:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "34791:1799:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "34784:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 2093,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "34784:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 2125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "34784:1807:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "34764:1827:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2127,
                      "name": "SVG",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2092,
                      "src": "36663:3:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2132,
                              "name": "SVG",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2092,
                              "src": "36693:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "2533437465787420783d273137352720793d2737352720666f6e742d7765696768743d276e6f726d616c272066696c6c3d2762726f776e2725334524",
                              "id": 2133,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "36858:62:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3ad253f0cfb77b47e1791d466a58f47ebbb8bbbb960bb5f0a41d5314fbfa2a3b",
                                "typeString": "literal_string \"%3Ctext x='175' y='75' font-weight='normal' fill='brown'%3E$\""
                              },
                              "value": "%3Ctext x='175' y='75' font-weight='normal' fill='brown'%3E$"
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 2136,
                                      "name": "_tokenId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1946,
                                      "src": "36946:8:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 2135,
                                    "name": "lendingBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2759,
                                    "src": "36931:14:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (uint256) view returns (uint256)"
                                    }
                                  },
                                  "id": 2137,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "36931:24:20",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "hexValue": "36",
                                  "id": 2138,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "36957:1:20",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_6_by_1",
                                    "typeString": "int_const 6"
                                  },
                                  "value": "6"
                                },
                                {
                                  "argumentTypes": null,
                                  "hexValue": "32",
                                  "id": 2139,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "36960:1:20",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_6_by_1",
                                    "typeString": "int_const 6"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  }
                                ],
                                "id": 2134,
                                "name": "uint2str",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  2403,
                                  2481
                                ],
                                "referencedDeclaration": 2403,
                                "src": "36922:8:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256,uint256,uint256) pure returns (string memory)"
                                }
                              },
                              "id": 2140,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "36922:40:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "202533432f74657874253345",
                              "id": 2141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "36964:14:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a299460911bf907aa493cbaabbb4ecaafa0b940d4c6cd8e9058345cdfa805e44",
                                "typeString": "literal_string \" %3C/text%3E\""
                              },
                              "value": " %3C/text%3E"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "2533437465787420783d2733352720793d2739302720666f6e742d7765696768743d27626f6c64272066696c6c3d2762726f776e27253345456e657267793a2533432f74657874253345",
                              "id": 2142,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "37018:76:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d0b2435fde123ed5aa449e250ec3116d9a4b5154fd6d485b0653406126477df8",
                                "typeString": "literal_string \"%3Ctext x='35' y='90' font-weight='bold' fill='brown'%3EEnergy:%3C/text%3E\""
                              },
                              "value": "%3Ctext x='35' y='90' font-weight='bold' fill='brown'%3EEnergy:%3C/text%3E"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "2533437465787420783d273137352720793d2739302720666f6e742d7765696768743d276e6f726d616c272066696c6c3d2762726f776e27253345",
                              "id": 2143,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "37107:61:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bb9268c8eccf094fb4c187eb0881ef35bc573fe0d096d65bc786137f9729be82",
                                "typeString": "literal_string \"%3Ctext x='175' y='90' font-weight='normal' fill='brown'%3E\""
                              },
                              "value": "%3Ctext x='175' y='90' font-weight='normal' fill='brown'%3E"
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2145,
                                  "name": "_energy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2043,
                                  "src": "37179:7:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 2144,
                                "name": "uint2str",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  2403,
                                  2481
                                ],
                                "referencedDeclaration": 2481,
                                "src": "37170:8:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 2146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "37170:17:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "2533432f74657874253345",
                              "id": 2147,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "37189:13:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5eaf70c7fc59821878aeb38875915f6150432b4106ab0b0c8833384123e7e2ab",
                                "typeString": "literal_string \"%3C/text%3E\""
                              },
                              "value": "%3C/text%3E"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "2533437465787420783d273530252720793d2732332720746578742d616e63686f723d276d6964646c652720666f6e742d7765696768743d27626f6c642720666f6e742d73697a653d27312e31656d272066696c6c3d27776869746527253345",
                              "id": 2148,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "37785:98:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3782d9c6734a02e7663dccbd03bcc3edde64be92f1816e32759ea51de6f79c3f",
                                "typeString": "literal_string \"%3Ctext x='50%' y='23' text-anchor='middle' font-weight='bold' font-size='1.1em' fill='white'%3E\""
                              },
                              "value": "%3Ctext x='50%' y='23' text-anchor='middle' font-weight='bold' font-size='1.1em' fill='white'%3E"
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 2152,
                                      "name": "_tokenId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1946,
                                      "src": "37902:8:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 2151,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "37894:7:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 2150,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "37894:7:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": null,
                                        "typeString": null
                                      }
                                    }
                                  },
                                  "id": 2153,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "37894:17:20",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 2149,
                                "name": "uint2str",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  2403,
                                  2481
                                ],
                                "referencedDeclaration": 2481,
                                "src": "37885:8:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 2154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "37885:27:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "2533432f74657874253345",
                              "id": 2155,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "37914:13:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5eaf70c7fc59821878aeb38875915f6150432b4106ab0b0c8833384123e7e2ab",
                                "typeString": "literal_string \"%3C/text%3E\""
                              },
                              "value": "%3C/text%3E"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "2533437465787420783d273530252720793d273333382720746578742d616e63686f723d276d6964646c652720666f6e742d7765696768743d27626f6c642720666f6e742d73697a653d27312e31656d272066696c6c3d2777686974652725334520455448455245554d202533432f74657874253345",
                              "id": 2156,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "37971:120:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_df82142385f1a70f099b9810403c49769b128ee955d4900802e03e699a8c86d6",
                                "typeString": "literal_string \"%3Ctext x='50%' y='338' text-anchor='middle' font-weight='bold' font-size='1.1em' fill='white'%3E ETHEREUM %3C/text%3E\""
                              },
                              "value": "%3Ctext x='50%' y='338' text-anchor='middle' font-weight='bold' font-size='1.1em' fill='white'%3E ETHEREUM %3C/text%3E"
                            },
                            {
                              "argumentTypes": null,
                              "id": 2157,
                              "name": "mainImage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2049,
                              "src": "38176:9:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "556e737570706f727465642e",
                              "id": 2158,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "38228:14:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a3519b1da1beadd772b34a7a0ccdae7dfe426327b90de67db46b02a20c9c9e88",
                                "typeString": "literal_string \"Unsupported.\""
                              },
                              "value": "Unsupported."
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "2533432f737667253345",
                              "id": 2159,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "38256:12:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9b2a904108fe500a34a1b8ff744c702a36b1e2a99cd3b3bc88fb87e4725ae36a",
                                "typeString": "literal_string \"%3C/svg%3E\""
                              },
                              "value": "%3C/svg%3E"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3ad253f0cfb77b47e1791d466a58f47ebbb8bbbb960bb5f0a41d5314fbfa2a3b",
                                "typeString": "literal_string \"%3Ctext x='175' y='75' font-weight='normal' fill='brown'%3E$\""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a299460911bf907aa493cbaabbb4ecaafa0b940d4c6cd8e9058345cdfa805e44",
                                "typeString": "literal_string \" %3C/text%3E\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d0b2435fde123ed5aa449e250ec3116d9a4b5154fd6d485b0653406126477df8",
                                "typeString": "literal_string \"%3Ctext x='35' y='90' font-weight='bold' fill='brown'%3EEnergy:%3C/text%3E\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bb9268c8eccf094fb4c187eb0881ef35bc573fe0d096d65bc786137f9729be82",
                                "typeString": "literal_string \"%3Ctext x='175' y='90' font-weight='normal' fill='brown'%3E\""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5eaf70c7fc59821878aeb38875915f6150432b4106ab0b0c8833384123e7e2ab",
                                "typeString": "literal_string \"%3C/text%3E\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3782d9c6734a02e7663dccbd03bcc3edde64be92f1816e32759ea51de6f79c3f",
                                "typeString": "literal_string \"%3Ctext x='50%' y='23' text-anchor='middle' font-weight='bold' font-size='1.1em' fill='white'%3E\""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5eaf70c7fc59821878aeb38875915f6150432b4106ab0b0c8833384123e7e2ab",
                                "typeString": "literal_string \"%3C/text%3E\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_df82142385f1a70f099b9810403c49769b128ee955d4900802e03e699a8c86d6",
                                "typeString": "literal_string \"%3Ctext x='50%' y='338' text-anchor='middle' font-weight='bold' font-size='1.1em' fill='white'%3E ETHEREUM %3C/text%3E\""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a3519b1da1beadd772b34a7a0ccdae7dfe426327b90de67db46b02a20c9c9e88",
                                "typeString": "literal_string \"Unsupported.\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9b2a904108fe500a34a1b8ff744c702a36b1e2a99cd3b3bc88fb87e4725ae36a",
                                "typeString": "literal_string \"%3C/svg%3E\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2130,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "36676:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 2131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "36676:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 2160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "36676:1606:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 2129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "36669:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 2128,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "36669:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 2161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "36669:1614:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "36663:1620:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 2163,
                  "nodeType": "ExpressionStatement",
                  "src": "36663:1620:20"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 2164,
                        "name": "_dipLevel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1966,
                        "src": "38478:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 2165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "38491:1:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "38478:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 2167,
                        "name": "_dipLevel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1966,
                        "src": "38496:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 2168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "38508:1:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "38496:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "38478:31:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2181,
                    "nodeType": "Block",
                    "src": "38600:34:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "",
                          "id": 2179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "38621:2:20",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        },
                        "functionReturnParameters": 1951,
                        "id": 2180,
                        "nodeType": "Return",
                        "src": "38614:9:20"
                      }
                    ]
                  },
                  "id": 2182,
                  "nodeType": "IfStatement",
                  "src": "38474:160:20",
                  "trueBody": {
                    "id": 2178,
                    "nodeType": "Block",
                    "src": "38510:76:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2172,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1946,
                              "src": "38546:8:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2174,
                                  "name": "SVG",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2092,
                                  "src": "38570:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 2173,
                                "name": "svgToImageURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2233,
                                "src": "38556:13:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (string memory) pure returns (string memory)"
                                }
                              },
                              "id": 2175,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "38556:18:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 2171,
                            "name": "formatTokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2353,
                            "src": "38531:14:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                              "typeString": "function (uint256,string memory) view returns (string memory)"
                            }
                          },
                          "id": 2176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "38531:44:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 1951,
                        "id": 2177,
                        "nodeType": "Return",
                        "src": "38524:51:20"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "c87b56dd",
            "id": 2184,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1948,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "31180:8:20"
            },
            "parameters": {
              "id": 1947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1946,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2184,
                  "src": "31142:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1945,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "31142:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "31141:18:20"
            },
            "returnParameters": {
              "id": 1951,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1950,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2184,
                  "src": "31198:13:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1949,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "31198:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "31197:15:20"
            },
            "scope": 2760,
            "src": "31124:7516:20",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2232,
              "nodeType": "Block",
              "src": "38725:483:20",
              "statements": [
                {
                  "assignments": [
                    2192
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2192,
                      "mutability": "mutable",
                      "name": "ENCODE",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2232,
                      "src": "38735:11:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2191,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "38735:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2194,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 2193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "38749:5:20",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "38735:19:20"
                },
                {
                  "assignments": [
                    2196
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2196,
                      "mutability": "mutable",
                      "name": "baseURL",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2232,
                      "src": "38764:21:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2195,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "38764:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2198,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "646174613a696d6167652f7376672b786d6c3b6261736536342c",
                    "id": 2197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "38788:28:20",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f90ae014c41cb48231e1f02c314087ff9c479133697911d25c5fe231e237dd14",
                      "typeString": "literal_string \"data:image/svg+xml;base64,\""
                    },
                    "value": "data:image/svg+xml;base64,"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "38764:52:20"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 2200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "38831:7:20",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 2199,
                      "name": "ENCODE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2192,
                      "src": "38832:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2215,
                  "nodeType": "IfStatement",
                  "src": "38827:127:20",
                  "trueBody": {
                    "id": 2214,
                    "nodeType": "Block",
                    "src": "38840:114:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2201,
                            "name": "baseURL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2196,
                            "src": "38854:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "646174613a696d6167652f7376672b786d6c2c",
                            "id": 2202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "38864:21:20",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9031e2cfdac64d3d8e2f4fae3227bbd4d95db6b156ed65beee14619af80ceecd",
                              "typeString": "literal_string \"data:image/svg+xml,\""
                            },
                            "value": "data:image/svg+xml,"
                          },
                          "src": "38854:31:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 2204,
                        "nodeType": "ExpressionStatement",
                        "src": "38854:31:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2209,
                                  "name": "baseURL",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2196,
                                  "src": "38930:7:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 2210,
                                  "name": "svg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2186,
                                  "src": "38938:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2207,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "38913:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 2208,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "38913:16:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 2211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "38913:29:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 2206,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "38906:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 2205,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "38906:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 2212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "38906:37:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 2190,
                        "id": 2213,
                        "nodeType": "Return",
                        "src": "38899:44:20"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2217
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2217,
                      "mutability": "mutable",
                      "name": "svgBase64Encoded",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2232,
                      "src": "39073:30:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2216,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "39073:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2222,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2220,
                        "name": "svg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2186,
                        "src": "39120:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2218,
                        "name": "Base64",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4304,
                        "src": "39106:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Base64_$4304_$",
                          "typeString": "type(library Base64)"
                        }
                      },
                      "id": 2219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "encode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4213,
                      "src": "39106:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (string memory)"
                      }
                    },
                    "id": 2221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "39106:18:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "39073:51:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2227,
                            "name": "baseURL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2196,
                            "src": "39175:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2228,
                            "name": "svgBase64Encoded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2217,
                            "src": "39183:16:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2225,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "39158:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "39158:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "39158:42:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "39151:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 2223,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "39151:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 2230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "39151:50:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 2190,
                  "id": 2231,
                  "nodeType": "Return",
                  "src": "39144:57:20"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "30d871c6",
            "id": 2233,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "svgToImageURI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2186,
                  "mutability": "mutable",
                  "name": "svg",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2233,
                  "src": "38670:17:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2185,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "38670:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "38669:19:20"
            },
            "returnParameters": {
              "id": 2190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2189,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2233,
                  "src": "38710:13:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2188,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "38710:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "38709:15:20"
            },
            "scope": 2760,
            "src": "38647:561:20",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2255,
              "nodeType": "Block",
              "src": "39277:216:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2241,
                          "name": "_energy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2237,
                          "src": "39341:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2242,
                            "name": "tokenIdToEnergy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1052,
                            "src": "39352:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 2244,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2243,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2235,
                            "src": "39368:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "39352:25:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "39341:36:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e277420696e63726561736520656e65726779",
                        "id": 2246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "39379:23:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b6de670a2a8165f044d1321d49259167e106af234e32b32ec903d035a29f887",
                          "typeString": "literal_string \"Can't increase energy\""
                        },
                        "value": "Can't increase energy"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b6de670a2a8165f044d1321d49259167e106af234e32b32ec903d035a29f887",
                          "typeString": "literal_string \"Can't increase energy\""
                        }
                      ],
                      "id": 2240,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "39333:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "39333:70:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2248,
                  "nodeType": "ExpressionStatement",
                  "src": "39333:70:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2249,
                        "name": "tokenIdToEnergy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1052,
                        "src": "39451:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2251,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2250,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2235,
                        "src": "39467:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "39451:25:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2252,
                      "name": "_energy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2237,
                      "src": "39479:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "39451:35:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2254,
                  "nodeType": "ExpressionStatement",
                  "src": "39451:35:20"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "ae153e3e",
            "id": 2256,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setEnergy",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2235,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2256,
                  "src": "39233:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2234,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "39233:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2237,
                  "mutability": "mutable",
                  "name": "_energy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2256,
                  "src": "39251:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2236,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "39251:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "39232:35:20"
            },
            "returnParameters": {
              "id": 2239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "39277:0:20"
            },
            "scope": 2760,
            "src": "39214:279:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2289,
              "nodeType": "Block",
              "src": "39573:248:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 2268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2266,
                            "name": "_dipLevel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2260,
                            "src": "39591:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2267,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "39603:1:20",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "39591:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 2271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2269,
                            "name": "_dipLevel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2260,
                            "src": "39608:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "38",
                            "id": 2270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "39620:1:20",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_8_by_1",
                              "typeString": "int_const 8"
                            },
                            "value": "8"
                          },
                          "src": "39608:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "39591:30:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c696420446970204c6576656c",
                        "id": 2273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "39623:19:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_577292c890a4af8cc5d56f918016f29a6614fab8ac8f036357205cd89c8cb33b",
                          "typeString": "literal_string \"Invalid Dip Level\""
                        },
                        "value": "Invalid Dip Level"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_577292c890a4af8cc5d56f918016f29a6614fab8ac8f036357205cd89c8cb33b",
                          "typeString": "literal_string \"Invalid Dip Level\""
                        }
                      ],
                      "id": 2265,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "39583:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "39583:60:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2275,
                  "nodeType": "ExpressionStatement",
                  "src": "39583:60:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2277,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2258,
                          "src": "39661:8:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2278,
                          "name": "tokenCounter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1028,
                          "src": "39672:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "39661:23:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c696420746f6b656e4964",
                        "id": 2280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "39686:17:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_47dcc88603f32730c5f1349ee02d9fe469c193c742f38ce12c7b0ba84c66c8a4",
                          "typeString": "literal_string \"Invalid tokenId\""
                        },
                        "value": "Invalid tokenId"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_47dcc88603f32730c5f1349ee02d9fe469c193c742f38ce12c7b0ba84c66c8a4",
                          "typeString": "literal_string \"Invalid tokenId\""
                        }
                      ],
                      "id": 2276,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "39653:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "39653:51:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2282,
                  "nodeType": "ExpressionStatement",
                  "src": "39653:51:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2283,
                        "name": "tokenIdToDipLevel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1032,
                        "src": "39775:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint8_$",
                          "typeString": "mapping(uint256 => uint8)"
                        }
                      },
                      "id": 2285,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2284,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2258,
                        "src": "39793:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "39775:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2286,
                      "name": "_dipLevel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2260,
                      "src": "39805:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "39775:39:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 2288,
                  "nodeType": "ExpressionStatement",
                  "src": "39775:39:20"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "498a4af3",
            "id": 2290,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2263,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2262,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2819,
                  "src": "39563:9:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "39563:9:20"
              }
            ],
            "name": "setDipLevel",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2258,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2290,
                  "src": "39521:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2257,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "39521:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2260,
                  "mutability": "mutable",
                  "name": "_dipLevel",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2290,
                  "src": "39539:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2259,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "39539:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "39520:35:20"
            },
            "returnParameters": {
              "id": 2264,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "39573:0:20"
            },
            "scope": 2760,
            "src": "39500:321:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2352,
              "nodeType": "Block",
              "src": "39930:2255:20",
              "statements": [
                {
                  "assignments": [
                    2300
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2300,
                      "mutability": "mutable",
                      "name": "ENCODE",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2352,
                      "src": "39940:11:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2299,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "39940:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2302,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "39954:4:20",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "39940:18:20"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 2303,
                    "name": "ENCODE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2300,
                    "src": "39973:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2350,
                    "nodeType": "Block",
                    "src": "41259:920:20",
                    "statements": []
                  },
                  "id": 2351,
                  "nodeType": "IfStatement",
                  "src": "39969:2210:20",
                  "trueBody": {
                    "id": 2349,
                    "nodeType": "Block",
                    "src": "39980:1194:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c",
                                  "id": 2308,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "40063:31:20",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa",
                                    "typeString": "literal_string \"data:application/json;base64,\""
                                  },
                                  "value": "data:application/json;base64,"
                                },
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "hexValue": "7b226465736372697074696f6e223a2022546865204e4654206c696d6974206f726465722074686174206561726e73206d6f6e65792122",
                                              "id": 2315,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "40242:57:20",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_974cd0175d89c693234173b235a4406caca760a5356b4ee76144bc0ad07c77b2",
                                                "typeString": "literal_string \"{\"description\": \"The NFT limit order that earns money!\"\""
                                              },
                                              "value": "{\"description\": \"The NFT limit order that earns money!\""
                                            },
                                            {
                                              "argumentTypes": null,
                                              "hexValue": "2c202265787465726e616c5f75726c223a202268747470733a2f2f77656275797468656469702e636f6d22",
                                              "id": 2316,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "40333:45:20",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_b71c6b2e607a5a6af79373102c5e038085e36c2c956fefc73237db2e06397f5d",
                                                "typeString": "literal_string \", \"external_url\": \"https://webuythedip.com\"\""
                                              },
                                              "value": ", \"external_url\": \"https://webuythedip.com\""
                                            },
                                            {
                                              "argumentTypes": null,
                                              "hexValue": "2c2022696d616765223a2022",
                                              "id": 2317,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "40412:14:20",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_7c62051a58edfc6131002bd06977b03b7b1f8898ad7e4a5bdbd3296f68da3856",
                                                "typeString": "literal_string \", \"image\": \"\""
                                              },
                                              "value": ", \"image\": \""
                                            },
                                            {
                                              "argumentTypes": null,
                                              "id": 2318,
                                              "name": "imageURI",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2294,
                                              "src": "40461:8:20",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                              }
                                            },
                                            {
                                              "argumentTypes": null,
                                              "hexValue": "22",
                                              "id": 2319,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "40471:3:20",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0",
                                                "typeString": "literal_string \"\"\""
                                              },
                                              "value": "\""
                                            },
                                            {
                                              "argumentTypes": null,
                                              "hexValue": "2c20226e616d65223a202242757954686544697022",
                                              "id": 2320,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "40508:23:20",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_2a1745bf61a1f7154f131f8199ce6227f7947c7892c57cf25623e9d3effc86c4",
                                                "typeString": "literal_string \", \"name\": \"BuyTheDip\"\""
                                              },
                                              "value": ", \"name\": \"BuyTheDip\""
                                            },
                                            {
                                              "argumentTypes": null,
                                              "hexValue": "2c202261747472696275746573223a205b7b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a2022446970204c6576656c222c202276616c7565223a20",
                                              "id": 2321,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "40611:82:20",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_f7f3ec77ad25ee73874021ada38919ac8bc7c634830ea0d546f9ac321f7bafcb",
                                                "typeString": "literal_string \", \"attributes\": [{\"display_type\": \"number\", \"trait_type\": \"Dip Level\", \"value\": \""
                                              },
                                              "value": ", \"attributes\": [{\"display_type\": \"number\", \"trait_type\": \"Dip Level\", \"value\": "
                                            },
                                            {
                                              "argumentTypes": null,
                                              "condition": {
                                                "argumentTypes": null,
                                                "commonType": {
                                                  "typeIdentifier": "t_uint8",
                                                  "typeString": "uint8"
                                                },
                                                "id": 2326,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "argumentTypes": null,
                                                  "baseExpression": {
                                                    "argumentTypes": null,
                                                    "id": 2322,
                                                    "name": "tokenIdToDipLevel",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1032,
                                                    "src": "40727:17:20",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint8_$",
                                                      "typeString": "mapping(uint256 => uint8)"
                                                    }
                                                  },
                                                  "id": 2324,
                                                  "indexExpression": {
                                                    "argumentTypes": null,
                                                    "id": 2323,
                                                    "name": "_tokenId",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 2292,
                                                    "src": "40745:8:20",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "40727:27:20",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint8",
                                                    "typeString": "uint8"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                  "argumentTypes": null,
                                                  "hexValue": "30",
                                                  "id": 2325,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "40756:1:20",
                                                  "subdenomination": null,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_0_by_1",
                                                    "typeString": "int_const 0"
                                                  },
                                                  "value": "0"
                                                },
                                                "src": "40727:30:20",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              "falseExpression": {
                                                "argumentTypes": null,
                                                "hexValue": "31",
                                                "id": 2328,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "40765:3:20",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                                                  "typeString": "literal_string \"1\""
                                                },
                                                "value": "1"
                                              },
                                              "id": 2329,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "Conditional",
                                              "src": "40727:41:20",
                                              "trueExpression": {
                                                "argumentTypes": null,
                                                "hexValue": "30",
                                                "id": 2327,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "40760:3:20",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                                                  "typeString": "literal_string \"0\""
                                                },
                                                "value": "0"
                                              },
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                              }
                                            },
                                            {
                                              "argumentTypes": null,
                                              "hexValue": "207d",
                                              "id": 2330,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "40771:4:20",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                                "typeString": "literal_string \" }\""
                                              },
                                              "value": " }"
                                            },
                                            {
                                              "argumentTypes": null,
                                              "hexValue": "2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a20224469702056616c7565222c202276616c7565223a20",
                                              "id": 2331,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "40809:67:20",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_94b54e359289959fecdf7a9734bc667c402dde7f2f08234bc7c1fd3c586fa5fd",
                                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"Dip Value\", \"value\": \""
                                              },
                                              "value": ", {\"display_type\": \"number\", \"trait_type\": \"Dip Value\", \"value\": "
                                            },
                                            {
                                              "argumentTypes": null,
                                              "arguments": [
                                                {
                                                  "argumentTypes": null,
                                                  "arguments": [
                                                    {
                                                      "argumentTypes": null,
                                                      "baseExpression": {
                                                        "argumentTypes": null,
                                                        "id": 2335,
                                                        "name": "tokenIdToDipValue",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1036,
                                                        "src": "40924:17:20",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                                          "typeString": "mapping(uint256 => uint256)"
                                                        }
                                                      },
                                                      "id": 2337,
                                                      "indexExpression": {
                                                        "argumentTypes": null,
                                                        "id": 2336,
                                                        "name": "_tokenId",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 2292,
                                                        "src": "40942:8:20",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "nodeType": "IndexAccess",
                                                      "src": "40924:27:20",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    ],
                                                    "id": 2334,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "40919:4:20",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_uint256_$",
                                                      "typeString": "type(uint256)"
                                                    },
                                                    "typeName": {
                                                      "id": 2333,
                                                      "name": "uint",
                                                      "nodeType": "ElementaryTypeName",
                                                      "src": "40919:4:20",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": null,
                                                        "typeString": null
                                                      }
                                                    }
                                                  },
                                                  "id": 2338,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "typeConversion",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "40919:33:20",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                ],
                                                "id": 2332,
                                                "name": "uint2str",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [
                                                  2403,
                                                  2481
                                                ],
                                                "referencedDeclaration": 2481,
                                                "src": "40910:8:20",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                                  "typeString": "function (uint256) pure returns (string memory)"
                                                }
                                              },
                                              "id": 2339,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "40910:43:20",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                              }
                                            },
                                            {
                                              "argumentTypes": null,
                                              "hexValue": "207d",
                                              "id": 2340,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "40957:4:20",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                                "typeString": "literal_string \" }\""
                                              },
                                              "value": " }"
                                            },
                                            {
                                              "argumentTypes": null,
                                              "hexValue": "5d",
                                              "id": 2341,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "40995:3:20",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_b36bcf9cc1d9e7f60b1f757ebd8b4694b17fc592b16065d243c43b09fde00b29",
                                                "typeString": "literal_string \"]\""
                                              },
                                              "value": "]"
                                            },
                                            {
                                              "argumentTypes": null,
                                              "hexValue": "7d",
                                              "id": 2342,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "41050:3:20",
                                              "subdenomination": null,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff",
                                                "typeString": "literal_string \"}\""
                                              },
                                              "value": "}"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_974cd0175d89c693234173b235a4406caca760a5356b4ee76144bc0ad07c77b2",
                                                "typeString": "literal_string \"{\"description\": \"The NFT limit order that earns money!\"\""
                                              },
                                              {
                                                "typeIdentifier": "t_stringliteral_b71c6b2e607a5a6af79373102c5e038085e36c2c956fefc73237db2e06397f5d",
                                                "typeString": "literal_string \", \"external_url\": \"https://webuythedip.com\"\""
                                              },
                                              {
                                                "typeIdentifier": "t_stringliteral_7c62051a58edfc6131002bd06977b03b7b1f8898ad7e4a5bdbd3296f68da3856",
                                                "typeString": "literal_string \", \"image\": \"\""
                                              },
                                              {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                              },
                                              {
                                                "typeIdentifier": "t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0",
                                                "typeString": "literal_string \"\"\""
                                              },
                                              {
                                                "typeIdentifier": "t_stringliteral_2a1745bf61a1f7154f131f8199ce6227f7947c7892c57cf25623e9d3effc86c4",
                                                "typeString": "literal_string \", \"name\": \"BuyTheDip\"\""
                                              },
                                              {
                                                "typeIdentifier": "t_stringliteral_f7f3ec77ad25ee73874021ada38919ac8bc7c634830ea0d546f9ac321f7bafcb",
                                                "typeString": "literal_string \", \"attributes\": [{\"display_type\": \"number\", \"trait_type\": \"Dip Level\", \"value\": \""
                                              },
                                              {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                              },
                                              {
                                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                                "typeString": "literal_string \" }\""
                                              },
                                              {
                                                "typeIdentifier": "t_stringliteral_94b54e359289959fecdf7a9734bc667c402dde7f2f08234bc7c1fd3c586fa5fd",
                                                "typeString": "literal_string \", {\"display_type\": \"number\", \"trait_type\": \"Dip Value\", \"value\": \""
                                              },
                                              {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                              },
                                              {
                                                "typeIdentifier": "t_stringliteral_a44a2403c24e5dffe1c19627ee12ef440d23e932d2166fed14da273727f2ceb3",
                                                "typeString": "literal_string \" }\""
                                              },
                                              {
                                                "typeIdentifier": "t_stringliteral_b36bcf9cc1d9e7f60b1f757ebd8b4694b17fc592b16065d243c43b09fde00b29",
                                                "typeString": "literal_string \"]\""
                                              },
                                              {
                                                "typeIdentifier": "t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff",
                                                "typeString": "literal_string \"}\""
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 2313,
                                              "name": "abi",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -1,
                                              "src": "40191:3:20",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_abi",
                                                "typeString": "abi"
                                              }
                                            },
                                            "id": 2314,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "encodePacked",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": null,
                                            "src": "40191:16:20",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                              "typeString": "function () pure returns (bytes memory)"
                                            }
                                          },
                                          "id": 2343,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "40191:892:20",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        ],
                                        "id": 2312,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "40155:6:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                          "typeString": "type(string storage pointer)"
                                        },
                                        "typeName": {
                                          "id": 2311,
                                          "name": "string",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "40155:6:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": null,
                                            "typeString": null
                                          }
                                        }
                                      },
                                      "id": 2344,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "40155:954:20",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2309,
                                      "name": "Base64",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4304,
                                      "src": "40116:6:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_Base64_$4304_$",
                                        "typeString": "type(library Base64)"
                                      }
                                    },
                                    "id": 2310,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "encode",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4213,
                                    "src": "40116:13:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                                      "typeString": "function (string memory) pure returns (string memory)"
                                    }
                                  },
                                  "id": 2345,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "40116:1015:20",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa",
                                    "typeString": "literal_string \"data:application/json;base64,\""
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2306,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "40025:3:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 2307,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "40025:16:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 2346,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "40025:1124:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 2305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "40001:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 2304,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "40001:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 2347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "40001:1162:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 2298,
                        "id": 2348,
                        "nodeType": "Return",
                        "src": "39994:1169:20"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "0419e314",
            "id": 2353,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "formatTokenURI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2292,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2353,
                  "src": "39852:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2291,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "39852:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2294,
                  "mutability": "mutable",
                  "name": "imageURI",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2353,
                  "src": "39870:22:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2293,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "39870:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "39851:42:20"
            },
            "returnParameters": {
              "id": 2298,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2297,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2353,
                  "src": "39915:13:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2296,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "39915:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "39914:15:20"
            },
            "scope": 2760,
            "src": "39828:2357:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2402,
              "nodeType": "Block",
              "src": "42321:240:20",
              "statements": [
                {
                  "assignments": [
                    2365
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2365,
                      "mutability": "mutable",
                      "name": "first",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2402,
                      "src": "42331:19:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2364,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "42331:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2373,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2367,
                          "name": "_i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2355,
                          "src": "42362:2:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "hexValue": "3130",
                            "id": 2368,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "42367:2:20",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2369,
                            "name": "_totalDecimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2357,
                            "src": "42371:14:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "42367:18:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "42362:23:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2366,
                      "name": "uint2str",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2403,
                        2481
                      ],
                      "referencedDeclaration": 2481,
                      "src": "42353:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (string memory)"
                      }
                    },
                    "id": 2372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "42353:33:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "42331:55:20"
                },
                {
                  "assignments": [
                    2375
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2375,
                      "mutability": "mutable",
                      "name": "second",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2402,
                      "src": "42396:20:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2374,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "42396:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2391,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2381,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 2377,
                                "name": "_i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2355,
                                "src": "42429:2:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "%",
                              "rightExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2380,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "3130",
                                  "id": 2378,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "42434:2:20",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 2379,
                                  "name": "_totalDecimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2357,
                                  "src": "42438:14:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "42434:18:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "42429:23:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 2382,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "42428:25:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "hexValue": "3130",
                            "id": 2383,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "42455:2:20",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2386,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 2384,
                                  "name": "_totalDecimals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2357,
                                  "src": "42460:14:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 2385,
                                  "name": "_decimalPlaces",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2359,
                                  "src": "42477:14:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "42460:31:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2387,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "42459:33:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "42455:37:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "42428:64:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2376,
                      "name": "uint2str",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2403,
                        2481
                      ],
                      "referencedDeclaration": 2481,
                      "src": "42419:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (string memory)"
                      }
                    },
                    "id": 2390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "42419:74:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "42396:97:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2396,
                            "name": "first",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2365,
                            "src": "42534:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "2e",
                            "id": 2397,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "42541:3:20",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf",
                              "typeString": "literal_string \".\""
                            },
                            "value": "."
                          },
                          {
                            "argumentTypes": null,
                            "id": 2398,
                            "name": "second",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2375,
                            "src": "42546:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf",
                              "typeString": "literal_string \".\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2394,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "42517:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "42517:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "42517:36:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "42510:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 2392,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "42510:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 2400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "42510:44:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 2363,
                  "id": 2401,
                  "nodeType": "Return",
                  "src": "42503:51:20"
                }
              ]
            },
            "documentation": null,
            "id": 2403,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uint2str",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2355,
                  "mutability": "mutable",
                  "name": "_i",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2403,
                  "src": "42209:10:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2354,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "42209:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2357,
                  "mutability": "mutable",
                  "name": "_totalDecimals",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2403,
                  "src": "42221:22:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2356,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "42221:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2359,
                  "mutability": "mutable",
                  "name": "_decimalPlaces",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2403,
                  "src": "42245:22:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2358,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "42245:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "42208:60:20"
            },
            "returnParameters": {
              "id": 2363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2362,
                  "mutability": "mutable",
                  "name": "_uintAsString",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2403,
                  "src": "42292:27:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2361,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "42292:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "42291:29:20"
            },
            "scope": 2760,
            "src": "42191:370:20",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2480,
              "nodeType": "Block",
              "src": "42646:388:20",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2410,
                      "name": "_i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2405,
                      "src": "42660:2:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "42666:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "42660:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2416,
                  "nodeType": "IfStatement",
                  "src": "42656:48:20",
                  "trueBody": {
                    "id": 2415,
                    "nodeType": "Block",
                    "src": "42669:35:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "42690:3:20",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                            "typeString": "literal_string \"0\""
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 2409,
                        "id": 2414,
                        "nodeType": "Return",
                        "src": "42683:10:20"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2418
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2418,
                      "mutability": "mutable",
                      "name": "j",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2480,
                      "src": "42713:6:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2417,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "42713:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2420,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 2419,
                    "name": "_i",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2405,
                    "src": "42722:2:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "42713:11:20"
                },
                {
                  "assignments": [
                    2422
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2422,
                      "mutability": "mutable",
                      "name": "len",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2480,
                      "src": "42734:8:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2421,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "42734:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2423,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "42734:8:20"
                },
                {
                  "body": {
                    "id": 2434,
                    "nodeType": "Block",
                    "src": "42767:51:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "42781:5:20",
                          "subExpression": {
                            "argumentTypes": null,
                            "id": 2427,
                            "name": "len",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2422,
                            "src": "42781:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2429,
                        "nodeType": "ExpressionStatement",
                        "src": "42781:5:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2430,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2418,
                            "src": "42800:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "/=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "3130",
                            "id": 2431,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "42805:2:20",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "42800:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2433,
                        "nodeType": "ExpressionStatement",
                        "src": "42800:7:20"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2424,
                      "name": "j",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2418,
                      "src": "42759:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "42764:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "42759:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2435,
                  "nodeType": "WhileStatement",
                  "src": "42752:66:20"
                },
                {
                  "assignments": [
                    2437
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2437,
                      "mutability": "mutable",
                      "name": "bstr",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2480,
                      "src": "42827:17:20",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2436,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "42827:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2442,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2440,
                        "name": "len",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2422,
                        "src": "42857:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "42847:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory)"
                      },
                      "typeName": {
                        "id": 2438,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "42851:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      }
                    },
                    "id": 2441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "42847:14:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "42827:34:20"
                },
                {
                  "assignments": [
                    2444
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2444,
                      "mutability": "mutable",
                      "name": "k",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2480,
                      "src": "42871:6:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2443,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "42871:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2448,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2445,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2422,
                      "src": "42880:3:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 2446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "42886:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "42880:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "42871:16:20"
                },
                {
                  "body": {
                    "id": 2473,
                    "nodeType": "Block",
                    "src": "42913:86:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2452,
                              "name": "bstr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2437,
                              "src": "42927:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 2455,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2454,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "--",
                              "prefix": false,
                              "src": "42932:3:20",
                              "subExpression": {
                                "argumentTypes": null,
                                "id": 2453,
                                "name": "k",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2444,
                                "src": "42932:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "42927:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2464,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "3438",
                                      "id": 2460,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "42952:2:20",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_48_by_1",
                                        "typeString": "int_const 48"
                                      },
                                      "value": "48"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2463,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "id": 2461,
                                        "name": "_i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2405,
                                        "src": "42957:2:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "%",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "hexValue": "3130",
                                        "id": 2462,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "42962:2:20",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        },
                                        "value": "10"
                                      },
                                      "src": "42957:7:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "42952:12:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2459,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "42946:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint8_$",
                                    "typeString": "type(uint8)"
                                  },
                                  "typeName": {
                                    "id": 2458,
                                    "name": "uint8",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "42946:5:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 2465,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "42946:19:20",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "id": 2457,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "42939:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes1_$",
                                "typeString": "type(bytes1)"
                              },
                              "typeName": {
                                "id": 2456,
                                "name": "bytes1",
                                "nodeType": "ElementaryTypeName",
                                "src": "42939:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 2466,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "42939:27:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "src": "42927:39:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "id": 2468,
                        "nodeType": "ExpressionStatement",
                        "src": "42927:39:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2469,
                            "name": "_i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2405,
                            "src": "42980:2:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "/=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "3130",
                            "id": 2470,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "42986:2:20",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "42980:8:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2472,
                        "nodeType": "ExpressionStatement",
                        "src": "42980:8:20"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2449,
                      "name": "_i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2405,
                      "src": "42904:2:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "42910:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "42904:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2474,
                  "nodeType": "WhileStatement",
                  "src": "42897:102:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2477,
                        "name": "bstr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2437,
                        "src": "43022:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "43015:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 2475,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "43015:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 2478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "43015:12:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 2409,
                  "id": 2479,
                  "nodeType": "Return",
                  "src": "43008:19:20"
                }
              ]
            },
            "documentation": null,
            "id": 2481,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uint2str",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2405,
                  "mutability": "mutable",
                  "name": "_i",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2481,
                  "src": "42585:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2404,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "42585:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "42584:9:20"
            },
            "returnParameters": {
              "id": 2409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2408,
                  "mutability": "mutable",
                  "name": "_uintAsString",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2481,
                  "src": "42617:27:20",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2407,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "42617:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "42616:29:20"
            },
            "scope": 2760,
            "src": "42567:467:20",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2576,
              "nodeType": "Block",
              "src": "44379:678:20",
              "statements": [
                {
                  "assignments": [
                    2491
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2491,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2576,
                      "src": "44389:14:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2490,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "44389:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2495,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2492,
                      "name": "tokenIdToStableCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1044,
                      "src": "44406:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 2494,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2493,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2483,
                      "src": "44426:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "44406:29:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "44389:46:20"
                },
                {
                  "assignments": [
                    2497
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2497,
                      "mutability": "mutable",
                      "name": "balanceShares",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2576,
                      "src": "44445:21:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2496,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "44445:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2505,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2502,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "44493:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BuyTheDipNFT_$2760",
                              "typeString": "contract BuyTheDipNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BuyTheDipNFT_$2760",
                              "typeString": "contract BuyTheDipNFT"
                            }
                          ],
                          "id": 2501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "44485:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2500,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "44485:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "44485:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2498,
                        "name": "yUSDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1107,
                        "src": "44469:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IyUSDC_$333",
                          "typeString": "contract IyUSDC"
                        }
                      },
                      "id": 2499,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 332,
                      "src": "44469:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "44469:30:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "44445:54:20"
                },
                {
                  "assignments": [
                    2507
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2507,
                      "mutability": "mutable",
                      "name": "shareOfShares",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2576,
                      "src": "44509:21:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2506,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "44509:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2513,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 2508,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2491,
                        "src": "44533:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2509,
                        "name": "balanceShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2497,
                        "src": "44542:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "44533:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2511,
                      "name": "totalStableCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1065,
                      "src": "44558:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "44533:40:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "44509:64:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2514,
                        "name": "tokenIdToStableCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1044,
                        "src": "44584:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2516,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2515,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2483,
                        "src": "44604:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "44584:29:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "44616:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "44584:33:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2519,
                  "nodeType": "ExpressionStatement",
                  "src": "44584:33:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2520,
                      "name": "totalStableCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1065,
                      "src": "44627:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 2521,
                        "name": "totalStableCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1065,
                        "src": "44645:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2522,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2491,
                        "src": "44663:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "44645:24:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "44627:42:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2525,
                  "nodeType": "ExpressionStatement",
                  "src": "44627:42:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2529,
                            "name": "shareOfShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2507,
                            "src": "44734:13:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2532,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "3130303030",
                                  "id": 2530,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "44749:5:20",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10000_by_1",
                                    "typeString": "int_const 10000"
                                  },
                                  "value": "10000"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 2531,
                                  "name": "_feePercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2485,
                                  "src": "44757:11:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "44749:19:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2533,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "44748:21:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "44734:35:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130303030",
                          "id": 2535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "44770:5:20",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        },
                        "src": "44734:41:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2526,
                        "name": "yUSDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1107,
                        "src": "44719:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IyUSDC_$333",
                          "typeString": "contract IyUSDC"
                        }
                      },
                      "id": 2528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 267,
                      "src": "44719:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 2537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "44719:57:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2538,
                  "nodeType": "ExpressionStatement",
                  "src": "44719:57:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2544,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "44808:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BuyTheDipNFT_$2760",
                              "typeString": "contract BuyTheDipNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BuyTheDipNFT_$2760",
                              "typeString": "contract BuyTheDipNFT"
                            }
                          ],
                          "id": 2543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "44800:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2542,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "44800:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "44800:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2546,
                            "name": "shareOfShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2507,
                            "src": "44815:13:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2549,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "3130303030",
                                  "id": 2547,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "44830:5:20",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10000_by_1",
                                    "typeString": "int_const 10000"
                                  },
                                  "value": "10000"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 2548,
                                  "name": "_feePercent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2485,
                                  "src": "44838:11:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "44830:19:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2550,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "44829:21:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "44815:35:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130303030",
                          "id": 2552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "44851:5:20",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        },
                        "src": "44815:41:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2539,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1129,
                        "src": "44786:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$12442",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12391,
                      "src": "44786:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "44786:71:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2555,
                  "nodeType": "ExpressionStatement",
                  "src": "44786:71:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2556,
                      "name": "contractStablecoinProfit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1102,
                      "src": "44907:24:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2557,
                          "name": "shareOfShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2507,
                          "src": "44935:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2558,
                          "name": "_feePercent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2485,
                          "src": "44949:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "44935:25:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "3130303030",
                        "id": 2560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "44961:5:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10000"
                      },
                      "src": "44935:31:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "44907:59:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2563,
                  "nodeType": "ExpressionStatement",
                  "src": "44907:59:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2564,
                      "name": "releaseProfits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2611,
                      "src": "44977:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "44977:16:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2566,
                  "nodeType": "ExpressionStatement",
                  "src": "44977:16:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2572,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 2567,
                        "name": "shareOfShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2507,
                        "src": "45011:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2570,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130303030",
                              "id": 2568,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "45026:5:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000_by_1",
                                "typeString": "int_const 10000"
                              },
                              "value": "10000"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 2569,
                              "name": "_feePercent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2485,
                              "src": "45034:11:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "45026:19:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 2571,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "45025:21:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "45011:35:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130303030",
                      "id": 2573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "45047:5:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10000"
                    },
                    "src": "45011:41:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2489,
                  "id": 2575,
                  "nodeType": "Return",
                  "src": "45004:48:20"
                }
              ]
            },
            "documentation": null,
            "id": 2577,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retrieveLentStablecoins",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2483,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2577,
                  "src": "44314:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2482,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "44314:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2485,
                  "mutability": "mutable",
                  "name": "_feePercent",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2577,
                  "src": "44332:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2484,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "44332:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "44313:39:20"
            },
            "returnParameters": {
              "id": 2489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2488,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2577,
                  "src": "44370:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2487,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "44370:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "44369:9:20"
            },
            "scope": 2760,
            "src": "44281:776:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2610,
              "nodeType": "Block",
              "src": "45096:419:20",
              "statements": [
                {
                  "assignments": [
                    2581
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2581,
                      "mutability": "mutable",
                      "name": "profit",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2610,
                      "src": "45136:14:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2580,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "45136:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2583,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 2582,
                    "name": "contractStablecoinProfit",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1102,
                    "src": "45153:24:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "45136:41:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2584,
                      "name": "contractStablecoinProfit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1102,
                      "src": "45185:24:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "45212:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "45185:28:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2587,
                  "nodeType": "ExpressionStatement",
                  "src": "45185:28:20"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2588,
                      "name": "profit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2581,
                      "src": "45226:6:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2589,
                      "name": "PROFITRELEASETHRESHOLD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1098,
                      "src": "45235:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "45226:31:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2609,
                  "nodeType": "IfStatement",
                  "src": "45221:290:20",
                  "trueBody": {
                    "id": 2608,
                    "nodeType": "Block",
                    "src": "45259:252:20",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2591,
                            "name": "withdrawProfitsFromLending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2657,
                            "src": "45271:26:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 2592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "45271:28:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2593,
                        "nodeType": "ExpressionStatement",
                        "src": "45271:28:20"
                      },
                      {
                        "assignments": [
                          2595,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2595,
                            "mutability": "mutable",
                            "name": "res",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2608,
                            "src": "45346:8:20",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 2594,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "45346:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 2602,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "52656c656173696e672070726f666974732e",
                              "id": 2600,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "45395:20:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d117977d1bbda33acdeba69d183a0c17c3a9a836f7a06e4f12f8fb914e2ad487",
                                "typeString": "literal_string \"Releasing profits.\""
                              },
                              "value": "Releasing profits."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_d117977d1bbda33acdeba69d183a0c17c3a9a836f7a06e4f12f8fb914e2ad487",
                                "typeString": "literal_string \"Releasing profits.\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_d117977d1bbda33acdeba69d183a0c17c3a9a836f7a06e4f12f8fb914e2ad487",
                                  "typeString": "literal_string \"Releasing profits.\""
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 2596,
                                "name": "profitReceiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1100,
                                "src": "45359:14:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2597,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "45359:19:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 2599,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "argumentTypes": null,
                                "id": 2598,
                                "name": "profit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2581,
                                "src": "45387:6:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "45359:35:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 2601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "45359:57:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "45345:71:20"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2604,
                              "name": "res",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2595,
                              "src": "45436:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "436f756c64206e6f742072656c656173652070726f666974732e",
                              "id": 2605,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "45441:28:20",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f59a066846b6b4981e659662745f8dc1fd288f434e0321d5263f05e805d5f065",
                                "typeString": "literal_string \"Could not release profits.\""
                              },
                              "value": "Could not release profits."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f59a066846b6b4981e659662745f8dc1fd288f434e0321d5263f05e805d5f065",
                                "typeString": "literal_string \"Could not release profits.\""
                              }
                            ],
                            "id": 2603,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "45428:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "45428:42:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2607,
                        "nodeType": "ExpressionStatement",
                        "src": "45428:42:20"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 2611,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "releaseProfits",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2578,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "45084:2:20"
            },
            "returnParameters": {
              "id": 2579,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "45096:0:20"
            },
            "scope": 2760,
            "src": "45061:454:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2656,
              "nodeType": "Block",
              "src": "46407:481:20",
              "statements": [
                {
                  "assignments": [
                    2615
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2615,
                      "mutability": "mutable",
                      "name": "balanceShares",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2656,
                      "src": "46476:21:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2614,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "46476:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2623,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2620,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "46524:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BuyTheDipNFT_$2760",
                              "typeString": "contract BuyTheDipNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BuyTheDipNFT_$2760",
                              "typeString": "contract BuyTheDipNFT"
                            }
                          ],
                          "id": 2619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "46516:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2618,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "46516:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "46516:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2616,
                        "name": "yUSDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1107,
                        "src": "46500:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IyUSDC_$333",
                          "typeString": "contract IyUSDC"
                        }
                      },
                      "id": 2617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 332,
                      "src": "46500:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "46500:30:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "46476:54:20"
                },
                {
                  "assignments": [
                    2625
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2625,
                      "mutability": "mutable",
                      "name": "shareOfShares",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2656,
                      "src": "46540:21:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2624,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "46540:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2631,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 2626,
                        "name": "contractStablecoinProfit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1102,
                        "src": "46564:24:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2627,
                        "name": "balanceShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2615,
                        "src": "46591:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "46564:40:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2629,
                      "name": "totalStableCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1065,
                      "src": "46607:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "46564:58:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "46540:82:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2632,
                      "name": "totalStableCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1065,
                      "src": "46633:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2635,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 2633,
                        "name": "totalStableCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1065,
                        "src": "46651:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2634,
                        "name": "contractStablecoinProfit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1102,
                        "src": "46669:24:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "46651:42:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "46633:60:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2637,
                  "nodeType": "ExpressionStatement",
                  "src": "46633:60:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2638,
                      "name": "contractStablecoinProfit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1102,
                      "src": "46742:24:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "46769:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "46742:28:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2641,
                  "nodeType": "ExpressionStatement",
                  "src": "46742:28:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2645,
                        "name": "shareOfShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2625,
                        "src": "46796:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2642,
                        "name": "yUSDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1107,
                        "src": "46781:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IyUSDC_$333",
                          "typeString": "contract IyUSDC"
                        }
                      },
                      "id": 2644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 267,
                      "src": "46781:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 2646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "46781:29:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2647,
                  "nodeType": "ExpressionStatement",
                  "src": "46781:29:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2651,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "46834:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "46834:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2653,
                        "name": "shareOfShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2625,
                        "src": "46846:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2648,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1129,
                        "src": "46820:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$12442",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12391,
                      "src": "46820:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "46820:40:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2655,
                  "nodeType": "ExpressionStatement",
                  "src": "46820:40:20"
                }
              ]
            },
            "documentation": null,
            "id": 2657,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawProfitsFromLending",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2612,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "46395:2:20"
            },
            "returnParameters": {
              "id": 2613,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "46407:0:20"
            },
            "scope": 2760,
            "src": "46360:528:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2678,
              "nodeType": "Block",
              "src": "46943:76:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2667,
                            "name": "yUSDC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1107,
                            "src": "46970:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IyUSDC_$333",
                              "typeString": "contract IyUSDC"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IyUSDC_$333",
                              "typeString": "contract IyUSDC"
                            }
                          ],
                          "id": 2666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "46962:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2665,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "46962:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "46962:14:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2669,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2659,
                        "src": "46978:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2662,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1129,
                        "src": "46949:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$12442",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12409,
                      "src": "46949:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "46949:37:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2671,
                  "nodeType": "ExpressionStatement",
                  "src": "46949:37:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2675,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2659,
                        "src": "47006:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2672,
                        "name": "yUSDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1107,
                        "src": "46992:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IyUSDC_$333",
                          "typeString": "contract IyUSDC"
                        }
                      },
                      "id": 2674,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 272,
                      "src": "46992:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 2676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "46992:22:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2677,
                  "nodeType": "ExpressionStatement",
                  "src": "46992:22:20"
                }
              ]
            },
            "documentation": null,
            "id": 2679,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lendStableCoin",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2659,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2679,
                  "src": "46917:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2658,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "46917:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "46916:17:20"
            },
            "returnParameters": {
              "id": 2661,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "46943:0:20"
            },
            "scope": 2760,
            "src": "46893:126:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2717,
              "nodeType": "Block",
              "src": "47109:237:20",
              "statements": [
                {
                  "assignments": [
                    2687
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2687,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2717,
                      "src": "47115:14:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2686,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "47115:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2691,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2688,
                      "name": "tokenIdToStableCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1044,
                      "src": "47132:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 2690,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2689,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2681,
                      "src": "47152:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "47132:29:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "47115:46:20"
                },
                {
                  "assignments": [
                    2693
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2693,
                      "mutability": "mutable",
                      "name": "balanceShares",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2717,
                      "src": "47167:21:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2692,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "47167:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2701,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2698,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "47215:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BuyTheDipNFT_$2760",
                              "typeString": "contract BuyTheDipNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BuyTheDipNFT_$2760",
                              "typeString": "contract BuyTheDipNFT"
                            }
                          ],
                          "id": 2697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "47207:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2696,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "47207:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "47207:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2694,
                        "name": "yUSDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1107,
                        "src": "47191:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IyUSDC_$333",
                          "typeString": "contract IyUSDC"
                        }
                      },
                      "id": 2695,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 332,
                      "src": "47191:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "47191:30:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "47167:54:20"
                },
                {
                  "assignments": [
                    2703
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2703,
                      "mutability": "mutable",
                      "name": "shareOfShares",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2717,
                      "src": "47227:21:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2702,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "47227:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2714,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 2704,
                        "name": "totalStableCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1065,
                        "src": "47251:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 2705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "47268:1:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "47251:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2712,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2708,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2687,
                          "src": "47276:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2709,
                          "name": "balanceShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2693,
                          "src": "47285:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "47276:22:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2711,
                        "name": "totalStableCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1065,
                        "src": "47301:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "47276:40:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "47251:65:20",
                    "trueExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "47272:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "47227:89:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2715,
                    "name": "shareOfShares",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2703,
                    "src": "47329:13:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2685,
                  "id": 2716,
                  "nodeType": "Return",
                  "src": "47322:20:20"
                }
              ]
            },
            "documentation": null,
            "id": 2718,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStableCoinBalanceGivenId",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2681,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2718,
                  "src": "47060:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2680,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "47060:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "47059:18:20"
            },
            "returnParameters": {
              "id": 2685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2684,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2718,
                  "src": "47100:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2683,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "47100:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "47099:9:20"
            },
            "scope": 2760,
            "src": "47023:323:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2758,
              "nodeType": "Block",
              "src": "47424:278:20",
              "statements": [
                {
                  "assignments": [
                    2726
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2726,
                      "mutability": "mutable",
                      "name": "price",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2758,
                      "src": "47482:13:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2725,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "47482:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2728,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "31",
                    "id": 2727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "47498:1:20",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "47482:17:20"
                },
                {
                  "assignments": [
                    2730
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2730,
                      "mutability": "mutable",
                      "name": "balanceShares",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2758,
                      "src": "47505:21:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2729,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "47505:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2738,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2735,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "47553:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BuyTheDipNFT_$2760",
                              "typeString": "contract BuyTheDipNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BuyTheDipNFT_$2760",
                              "typeString": "contract BuyTheDipNFT"
                            }
                          ],
                          "id": 2734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "47545:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2733,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "47545:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "47545:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2731,
                        "name": "yUSDC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1107,
                        "src": "47529:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IyUSDC_$333",
                          "typeString": "contract IyUSDC"
                        }
                      },
                      "id": 2732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 332,
                      "src": "47529:15:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "47529:30:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "47505:54:20"
                },
                {
                  "assignments": [
                    2740
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2740,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2758,
                      "src": "47565:14:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2739,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "47565:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2744,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2741,
                      "name": "tokenIdToStableCoin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1044,
                      "src": "47582:19:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 2743,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2742,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2720,
                      "src": "47602:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "47582:29:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "47565:46:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 2745,
                        "name": "totalStableCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1065,
                        "src": "47624:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 2746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "47641:1:20",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "47624:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2749,
                            "name": "balanceShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2730,
                            "src": "47649:13:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2750,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2726,
                            "src": "47665:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "47649:21:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2752,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2740,
                          "src": "47673:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "47649:30:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2754,
                        "name": "totalStableCoin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1065,
                        "src": "47682:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "47649:48:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "47624:73:20",
                    "trueExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "47645:1:20",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2724,
                  "id": 2757,
                  "nodeType": "Return",
                  "src": "47617:80:20"
                }
              ]
            },
            "documentation": null,
            "id": 2759,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lendingBalance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2721,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2720,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2759,
                  "src": "47375:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2719,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "47375:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "47374:18:20"
            },
            "returnParameters": {
              "id": 2724,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2723,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2759,
                  "src": "47415:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2722,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "47415:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "47414:9:20"
            },
            "scope": 2760,
            "src": "47351:351:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2761,
        "src": "16451:31254:20"
      }
    ],
    "src": "0:47706:20"
  },
  "bytecode": "60a06040526000196012556127106013556000601455603c608052655af3107a400060165561012c601755606460185564e8d4a51000601955620186a0601a55662386f26fc10000601b55601e80546001600160a01b031990811673232da19534032cbfe838e5f620c495d52061e94717909155601f80548216737a250d5630b4cf539739df2c5dacb4c659f2488d179055602080548216735c69bee701ef814a2b6a3edd4b1652cb9cc5aa6f179055602180548216734dbcdf9b62e891a7cec5a2568c3f4faf9e8abe2b17908190556022805483166001600160a01b039290921691909117905560238054909116738a753747a1fa494ec906ce90e9f37563a8af630e1790553480156200011357600080fd5b50604080518082018252600b81526a057654275795468654469760ac1b6020808301919091528251808401909352600383526204449560ec1b9083015290620001636301ffc9a760e01b6200025b565b815162000178906006906020850190620002f3565b5080516200018e906007906020840190620002f3565b50620001a16380ac58cd60e01b6200025b565b620001b3635b5e139f60e01b6200025b565b620001c563780e9d6360e01b6200025b565b5060009050620001d4620002e0565b600a80546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506000600b5562000231620002e4565b601c80546001600160a01b0319166001600160a01b0392909216919091179055426015556200038f565b6001600160e01b03198082161415620002bb576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b3390565b600a546001600160a01b031690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200033657805160ff191683800117855562000366565b8280016001018555821562000366579182015b828111156200036657825182559160200191906001019062000349565b506200037492915062000378565b5090565b5b8082111562000374576000815560010162000379565b608051615d05620003aa60003980611edf5250615d056000f3fe6080604052600436106102765760003560e01c80634f6ccce71161014f5780638e15f473116100c1578063d082e3811161007a578063d082e38114610d3f578063e985e9c514610d54578063f2fde38b14610d8f578063fb1b0f2914610dc2578063fc4a72fb14610dec578063fd4889c114610e01576102b7565b80638e15f47314610baf57806395d89b4114610bc4578063a22cb46514610bd9578063ae153e3e14610c14578063b88d4fde14610c44578063c87b56dd14610d15576102b7565b80636e04ff0d116101135780636e04ff0d14610a2457806370a0823114610b20578063715018a614610b535780638b772ba414610b685780638d98ebc114610b855780638da5cb5b14610b9a576102b7565b80634f6ccce71461090e5780635d2e11571461093857806360570068146109bb5780636352211e146109e55780636c0360eb14610a0f576102b7565b806323b872dd116101e857806342842e0e116101ac57806342842e0e1461079057806343413e8a146107d35780634585e33b146107f65780634661720a1461087157806347b6b4911461089b578063498a4af3146108db576102b7565b806323b872dd146106395780632f745c591461067c57806330d871c6146106b5578063351c7d3514610766578063355c89731461077b576102b7565b8063095ea7b31161023a578063095ea7b3146104b85780630a537537146104f1578063162094c41461052d57806318160ddd146105e557806318ff04ee146105fa5780632223c5f11461060f576102b7565b806301ffc9a7146102bc5780630419e3141461030457806304276b2f1461043157806306fdde031461045d578063081812fc14610472576102b7565b366102b7576040805133815234602082015281517f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874929181900390910190a1005b600080fd5b3480156102c857600080fd5b506102f0600480360360208110156102df57600080fd5b50356001600160e01b031916610e2b565b604080519115158252519081900360200190f35b34801561031057600080fd5b506103bc6004803603604081101561032757600080fd5b81359190810190604081016020820135600160201b81111561034857600080fd5b82018360208201111561035a57600080fd5b803590602001918460018302840111600160201b8311171561037b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610e4e945050505050565b6040805160208082528351818301528351919283929083019185019080838360005b838110156103f65781810151838201526020016103de565b50505050905090810190601f1680156104235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561043d57600080fd5b5061045b6004803603602081101561045457600080fd5b50356110f4565b005b34801561046957600080fd5b506103bc6112ce565b34801561047e57600080fd5b5061049c6004803603602081101561049557600080fd5b5035611364565b604080516001600160a01b039092168252519081900360200190f35b3480156104c457600080fd5b5061045b600480360360408110156104db57600080fd5b506001600160a01b0381351690602001356113c6565b3480156104fd57600080fd5b5061051b6004803603602081101561051457600080fd5b50356114a1565b60408051918252519081900360200190f35b34801561053957600080fd5b5061045b6004803603604081101561055057600080fd5b81359190810190604081016020820135600160201b81111561057157600080fd5b82018360208201111561058357600080fd5b803590602001918460018302840111600160201b831117156105a457600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506114b3945050505050565b3480156105f157600080fd5b5061051b61150d565b34801561060657600080fd5b5061045b61151e565b34801561061b57600080fd5b5061051b6004803603602081101561063257600080fd5b50356115ad565b34801561064557600080fd5b5061045b6004803603606081101561065c57600080fd5b506001600160a01b038135811691602081013590911690604001356115bf565b34801561068857600080fd5b5061051b6004803603604081101561069f57600080fd5b506001600160a01b038135169060200135611616565b3480156106c157600080fd5b506103bc600480360360208110156106d857600080fd5b810190602081018135600160201b8111156106f257600080fd5b82018360208201111561070457600080fd5b803590602001918460018302840111600160201b8311171561072557600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061163f945050505050565b34801561077257600080fd5b5061049c6117fd565b34801561078757600080fd5b5061049c61180c565b34801561079c57600080fd5b5061045b600480360360608110156107b357600080fd5b506001600160a01b0381358116916020810135909116906040013561181b565b61051b600480360360208110156107e957600080fd5b503563ffffffff16611836565b34801561080257600080fd5b5061045b6004803603602081101561081957600080fd5b810190602081018135600160201b81111561083357600080fd5b82018360208201111561084557600080fd5b803590602001918460018302840111600160201b8311171561086657600080fd5b509092509050611509565b34801561087d57600080fd5b5061051b6004803603602081101561089457600080fd5b5035611aac565b3480156108a757600080fd5b506108c5600480360360208110156108be57600080fd5b5035611abe565b6040805160ff9092168252519081900360200190f35b3480156108e757600080fd5b5061045b600480360360408110156108fe57600080fd5b508035906020013560ff16611ad3565b34801561091a57600080fd5b5061051b6004803603602081101561093157600080fd5b5035611bfd565b34801561094457600080fd5b5061096b6004803603602081101561095b57600080fd5b50356001600160a01b0316611c13565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156109a757818101518382015260200161098f565b505050509050019250505060405180910390f35b3480156109c757600080fd5b5061045b600480360360208110156109de57600080fd5b5035611d03565b3480156109f157600080fd5b5061049c60048036036020811015610a0857600080fd5b5035611e50565b348015610a1b57600080fd5b506103bc611e78565b348015610a3057600080fd5b50610a9f60048036036020811015610a4757600080fd5b810190602081018135600160201b811115610a6157600080fd5b820183602082011115610a7357600080fd5b803590602001918460018302840111600160201b83111715610a9457600080fd5b509092509050611ed9565b60405180831515815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610ae4578181015183820152602001610acc565b50505050905090810190601f168015610b115780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b348015610b2c57600080fd5b5061051b60048036036020811015610b4357600080fd5b50356001600160a01b0316611f22565b348015610b5f57600080fd5b5061045b611f8a565b61051b60048036036020811015610b7e57600080fd5b5035612048565b348015610b9157600080fd5b5061051b61222f565b348015610ba657600080fd5b5061049c612235565b348015610bbb57600080fd5b5061051b612244565b348015610bd057600080fd5b506103bc61233b565b348015610be557600080fd5b5061045b60048036036040811015610bfc57600080fd5b506001600160a01b038135169060200135151561239c565b348015610c2057600080fd5b5061045b60048036036040811015610c3757600080fd5b50803590602001356124a1565b348015610c5057600080fd5b5061045b60048036036080811015610c6757600080fd5b6001600160a01b03823581169260208101359091169160408201359190810190608081016060820135600160201b811115610ca157600080fd5b820183602082011115610cb357600080fd5b803590602001918460018302840111600160201b83111715610cd457600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061250e945050505050565b348015610d2157600080fd5b506103bc60048036036020811015610d3857600080fd5b5035612566565b348015610d4b57600080fd5b5061051b612bee565b348015610d6057600080fd5b506102f060048036036040811015610d7757600080fd5b506001600160a01b0381358116916020013516612bf4565b348015610d9b57600080fd5b5061045b60048036036020811015610db257600080fd5b50356001600160a01b0316612c22565b348015610dce57600080fd5b506102f060048036036020811015610de557600080fd5b5035612d37565b348015610df857600080fd5b5061051b612d4c565b348015610e0d57600080fd5b5061051b60048036036020811015610e2457600080fd5b5035612d52565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b606060016000848152600c602052604090205461105c90849060ff1615610e8e57604051806040016040528060018152602001603160f81b815250610ea9565b604051806040016040528060018152602001600360fc1b8152505b6000878152600d6020526040902054610ec190612d64565b60405160200180603761567d8239603701602b61581d8239602b01806b16101134b6b0b3b2911d101160a11b815250600c0184805190602001908083835b60208310610f1e5780518252601f199092019160209182019101610eff565b5181516020939093036101000a6000190180199091169216919091179052601160f91b920191825250741610113730b6b2911d1011213abcaa3432a234b81160591b60018201526016016050615c80823960500183805190602001908083835b60208310610f9d5780518252601f199092019160209182019101610f7e565b5181516020939093036101000a600019018019909116921691909117905261207d60f01b9201918252506002016041615610823960410182805190602001908083835b60208310610fff5780518252601f199092019160209182019101610fe0565b5181516020939093036101000a600019018019909116921691909117905261207d60f01b920191825250605d60f81b6002820152607d60f81b600382015260408051808303601b19018152600490920190529350612e3c92505050565b60405160200180807f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000815250601d0182805190602001908083835b602083106110b65780518252601f199092019160209182019101611097565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040529150505b92915050565b6110fc612244565b6000828152600d60205260409020541115611155576040805162461bcd60e51b8152602060048201526014602482015273141c9a58d94818589bdd9948191a5c13195d995b60621b604482015290519081900360640190fd5b60004790506000611168836018546130b3565b602154601f546040805163095ea7b360e01b81526001600160a01b03928316600482015260248101859052905193945091169163095ea7b3916044808201926020929091908290030181600087803b1580156111c357600080fd5b505af11580156111d7573d6000803e3d6000fd5b505050506040513d60208110156111ed57600080fd5b505060215460009081906112269084906001600160a01b031661120f88611e50565b601f546013546001600160a01b0390911690613282565b6040805182815242602082015281519395509193507f4bcdd9b8b0cadbbafa70adc1d3944dfb4731760c7d447e4c7da9f6f5645f8c6792918290030190a16000858152601060209081526040808320805460ff19169055600c909152902054600760ff90911610156112b5576000858152600c60205260409020805460ff8082166001011660ff199091161790555b5050506000918252506011602052604090206127109055565b60068054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561135a5780601f1061132f5761010080835404028352916020019161135a565b820191906000526020600020905b81548152906001019060200180831161133d57829003601f168201915b5050505050905090565b600061136f8261371f565b6113aa5760405162461bcd60e51b815260040180806020018281038252602c8152602001806155e4602c913960400191505060405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006113d182611e50565b9050806001600160a01b0316836001600160a01b031614156114245760405162461bcd60e51b81526004018080602001828103825260218152602001806157fc6021913960400191505060405180910390fd5b806001600160a01b031661143661372c565b6001600160a01b0316148061145757506114578161145261372c565b612bf4565b6114925760405162461bcd60e51b815260040180806020018281038252603881526020018061543a6038913960400191505060405180910390fd5b61149c8383613730565b505050565b600d6020526000908152604090205481565b6114c46114be61372c565b8361379e565b6114ff5760405162461bcd60e51b81526004018080602001828103825260318152602001806159836031913960400191505060405180910390fd5b6115098282613842565b5050565b600061151960026138a5565b905090565b42601555600061152c612244565b905060005b600b548110156115095760008181526010602052604090205460ff1615156001141561157a576000818152600d6020526040902054821061157557611575816110f4565b6115a5565b6012546000828152600d602052604090205410156115a5576000818152600d60205260409020546012555b600101611531565b60116020526000908152604090205481565b6115d06115ca61372c565b8261379e565b61160b5760405162461bcd60e51b81526004018080602001828103825260318152602001806159836031913960400191505060405180910390fd5b61149c8383836138b0565b6001600160a01b038216600090815260016020526040812061163890836139fc565b9392505050565b604080518082018252601a81527f646174613a696d6167652f7376672b786d6c3b6261736536342c0000000000006020918201528151808301835260138082527219185d184e9a5b5859d94bdcdd99cade1b5b0b606a1b8284019081529351606094600094849388939091019182918083835b602083106116d15780518252601f1990920191602091820191016116b2565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b602083106117195780518252601f1990920191602091820191016116fa565b6001836020036101000a0380198251168184511680821785525050505050509050019250505060405160208183030381529060405292505050610e49565b602083106117765780518252601f199092019160209182019101611757565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b602083106117be5780518252601f19909201916020918201910161179f565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529350505050919050565b6024546001600160a01b031681565b601c546001600160a01b031681565b61149c8383836040518060200160405280600081525061250e565b600060165460195434011015611893576040805162461bcd60e51b815260206004820152601760248201527f4e6f7420656e6f756768206e617469766520636f696e2e000000000000000000604482015290519081900360640190fd5b60648263ffffffff16106118d85760405162461bcd60e51b81526004018080602001828103825260288152602001806151b06028913960400191505060405180910390fd5b6118e0613a08565b601954601d80549091019055600b8054600181019091556119013382613aa3565b6000818152600c60205260409020805460ff191690556064611921612244565b8460640363ffffffff16028161193357fe5b6000838152600d6020908152604080832094909304909355600e909252812063ffffffff85169055602154601f546013546119819234926001600160a01b0391821692309290911690613abd565b91505060195434018134028161199357fe5b6000848152600f602052604090209190049055601954348101908202816119b657fe5b601d80549290910490910190556000828152600f6020526040902054611a1e576040805162461bcd60e51b815260206004820152601860248201527722b93937b910902737903a37b5b2b739903137bab3b43a1760411b604482015290519081900360640190fd5b6000828152600f6020526040902054611a3690613e0c565b6012546000838152600d60205260409020541115611a61576000828152600d60205260409020546012555b60148054820190556000828152601060205260409020805460ff19166001179055611a9482611a8f81612566565b613842565b8160021415611aa557611aa561151e565b5050919050565b600e6020526000908152604090205481565b600c6020526000908152604090205460ff1681565b611adb61372c565b6001600160a01b0316611aec612235565b6001600160a01b031614611b47576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60088160ff1610611b93576040805162461bcd60e51b8152602060048201526011602482015270125b9d985b1a5908111a5c0813195d995b607a1b604482015290519081900360640190fd5b600b548210611bdb576040805162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b604482015290519081900360640190fd5b6000918252600c6020526040909120805460ff191660ff909216919091179055565b600080611c0b600284613ef9565b509392505050565b60606000805b600b54811015611c5457836001600160a01b0316611c3682611e50565b6001600160a01b03161415611c4c576001820191505b600101611c19565b5060608167ffffffffffffffff81118015611c6e57600080fd5b50604051908082528060200260200182016040528015611c98578160200160208202803683370190505b5090506000805b600b54811015611cf957838210611cb557611cf9565b856001600160a01b0316611cc882611e50565b6001600160a01b03161415611cf15780838381518110611ce457fe5b6020026020010181815250505b600101611c9f565b5090949350505050565b611d0c81611e50565b6001600160a01b0316336001600160a01b031614611d68576040805162461bcd60e51b815260206004820152601460248201527326bab9ba103132903a37b5b2b71037bbb732b91760611b604482015290519081900360640190fd5b611d70612244565b6000828152600d602052604090205411611d9257611d8d816110f4565b611e4d565b6000611da0826017546130b3565b602154601f546040805163095ea7b360e01b81526001600160a01b03928316600482015260248101859052905193945091169163095ea7b3916044808201926020929091908290030181600087803b158015611dfb57600080fd5b505af1158015611e0f573d6000803e3d6000fd5b505050506040513d6020811015611e2557600080fd5b50506021546000908190611e479084906001600160a01b031661120f87611e50565b50505050505b50565b60006110ee8260405180606001604052806029815260200161555d6029913960029190613f15565b60098054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561135a5780601f1061132f5761010080835404028352916020019161135a565b600060607f00000000000000000000000000000000000000000000000000000000000000006015544203118015611f195750611f13612244565b60125411155b91509250929050565b60006001600160a01b038216611f695760405162461bcd60e51b815260040180806020018281038252602a815260200180615472602a913960400191505060405180910390fd5b6001600160a01b03821660009081526001602052604090206110ee906138a5565b611f9261372c565b6001600160a01b0316611fa3612235565b6001600160a01b031614611ffe576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600a546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600a80546001600160a01b0319169055565b60006016543410156120a1576040805162461bcd60e51b815260206004820152601b60248201527f4e6f7420456e6f75676820424e422d2d6f722077686174657665720000000000604482015290519081900360640190fd5b60008281526010602052604090205460ff16156120ef5760405162461bcd60e51b81526004018080602001828103825260218152602001806152ec6021913960400191505060405180910390fd5b6120f7613a08565b6064612101612244565b6000848152600e6020526040902054606403028161211b57fe5b6000848152600d60205260409020919004905561213b82611a8f81612566565b602154601f546013546121619234926001600160a01b0391821692309290911690613abd565b6000848152600f60205260409020819055151590506121c2576040805162461bcd60e51b815260206004820152601860248201527722b93937b910902737903a37b5b2b739903137bab3b43a1760411b604482015290519081900360640190fd5b6000828152600f60205260409020546121da90613e0c565b6000828152600f602090815260408083205460148054909101905560108252808320805460ff19166001179055601254600d909252909120541115610e49576000918252600d60205260409091205460125590565b60145481565b600a546001600160a01b031690565b600080600080600080602360009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561229b57600080fd5b505afa1580156122af573d6000803e3d6000fd5b505050506040513d60a08110156122c557600080fd5b5080516020820151604083015160608401516080909401519298509096509450909250905081612331576040805162461bcd60e51b8152602060048201526012602482015271526f756e64206e6f7420636f6d706c65746560701b604482015290519081900360640190fd5b5091935050505090565b60078054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561135a5780601f1061132f5761010080835404028352916020019161135a565b6123a461372c565b6001600160a01b0316826001600160a01b0316141561240a576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b806005600061241761372c565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff19169215159290921790915561245b61372c565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b6000828152601160205260409020548111156124fc576040805162461bcd60e51b815260206004820152601560248201527443616e277420696e63726561736520656e6572677960581b604482015290519081900360640190fd5b60009182526011602052604090912055565b6125196114be61372c565b6125545760405162461bcd60e51b81526004018080602001828103825260318152602001806159836031913960400191505060405180910390fd5b61256084848484613f22565b50505050565b60606125718261371f565b6125ac5760405162461bcd60e51b815260040180806020018281038252602f815260200180615719602f913960400191505060405180910390fd5b600082815260106020908152604080832054600c835281842054600d9093529083205460ff918216939290911691604e906125e5612244565b90506000856125f5575081612643565b6000888152600e602052604090205460649081039085028161261357fe5b04821161263d576064828584036064028161262a57fe5b0460640384028161263757fe5b04612640565b60005b90505b60008881526011602052604090205460606001881515141561271d5761266883612d64565b6040516020018060c161549c823960c1018061533960c1913960c101807f253343636972636c652063783d27313735272063793d273230302720723d2700815250601f0182805190602001908083835b602083106126d75780518252601f1990920191602091820191016126b8565b6001836020036101000a038019825116818451168082178552505050505050905001806152be602e9139602e0191505060405160208183030381529060405290506127ea565b61272683612d64565b6040516020018060b4615748823960b40160b2615bce823960b201807f253343636972636c652063783d27313735272063793d273230302720723d2700815250601f0182805190602001908083835b602083106127945780518252601f199092019160209182019101612775565b6001836020036101000a038019825116818451168082178552505050505050905001806152be602e9139602e0160b3615a4f823960b3016056615b02823960560191505060405160208183030381529060405290505b60606128006127f7612244565b60086002613f74565b61280d8860086002613f74565b6040516020018060aa6150d4823960aa01610100615883823961010001610213614dfc82396102130160516159fe8239605101603c6155868239603c0183805190602001908083835b602083106128755780518252601f199092019160209182019101612856565b5181516020939093036101000a60001901801990911692169190911790526a2533432f7465787425334560a81b920191825250600b0160516150318239605101603c6156b48239603c0182805190602001908083835b602083106128ea5780518252601f1990920191602091820191016128cb565b5181516020939093036101000a60001901801990911692169190911790526a2533432f7465787425334560a81b920191825250600b01605261508282396052019250505060405160208183030381529060405290508061295561294c8d61407c565b60066002613f74565b61295e85612d64565b6129678e612d64565b856040516020018086805190602001908083835b6020831061299a5780518252601f19909201916020918201910161297b565b6001836020036101000a0380198251168184511680821785525050505050509050018061525e603c9139603c0185805190602001908083835b602083106129f25780518252601f1990920191602091820191016129d3565b5181516020939093036101000a60001901801990911692169190911790526b202533432f7465787425334560a01b920191825250600c01604a6159b48239604a01603b6158488239603b0184805190602001908083835b60208310612a685780518252601f199092019160209182019101612a49565b5181516020939093036101000a60001901801990911692169190911790526a2533432f7465787425334560a81b920191825250600b0160606151fe823960600183805190602001908083835b60208310612ad35780518252601f199092019160209182019101612ab4565b5181516020939093036101000a60001901801990911692169190911790526a2533432f7465787425334560a81b920191825250600b016076615b58823960760182805190602001908083835b60208310612b3e5780518252601f199092019160209182019101612b1f565b5181516020939093036101000a60001901801990911692169190911790526b2ab739bab83837b93a32b21760a11b920191825250692533432f73766725334560b01b600c82015260408051808303600919018152601690920190529650505060028c10159350612bce9250505057612bbe8b612bb98361163f565b610e4e565b9950505050505050505050610e49565b604051806020016040528060008152509950505050505050505050610e49565b600b5481565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b612c2a61372c565b6001600160a01b0316612c3b612235565b6001600160a01b031614612c96576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116612cdb5760405162461bcd60e51b81526004018080602001828103825260268152602001806151d86026913960400191505060405180910390fd5b600a546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600a80546001600160a01b0319166001600160a01b0392909216919091179055565b60106020526000908152604090205460ff1681565b60125481565b600f6020526000908152604090205481565b606081612d8957506040805180820190915260018152600360fc1b6020820152610e49565b8160005b8115612da157600101600a82049150612d8d565b60608167ffffffffffffffff81118015612dba57600080fd5b506040519080825280601f01601f191660200182016040528015612de5576020820181803683370190505b50905060001982015b8515612e3357600a860660300160f81b82828060019003935081518110612e1157fe5b60200101906001600160f81b031916908160001a905350600a86049550612dee565b50949350505050565b60608082905060006003825181612e4f57fe5b06905060006003828103066003845160020181612e6857fe5b0460040203905060608167ffffffffffffffff81118015612e8857600080fd5b506040519080825280601f01601f191660200182016040528015612eb3576020820181803683370190505b5090506000805b85518260030111612fbd57612f21868381518110612ed457fe5b602001015160f81c60f81b60f81c60ff16878460010181518110612ef457fe5b602001015160f81c60f81b60f81c60ff16888560020181518110612f1457fe5b016020015160f81c614137565b868581518110612f2d57fe5b60200101878660010181518110612f4057fe5b60200101888760020181518110612f5357fe5b60200101898860030181518110612f6657fe5b6001600160f81b0319861660001a9101602001536001600160f81b0319851660001a90536001600160f81b0319851660001a90536001600160f81b0319851660001a90535050506003929092019150600401612eba565b84156130a7576000868688510381518110612fd457fe5b016020015160f81c9050600060028714156130045787600189510381518110612ff957fe5b016020015160f81c90505b60008060008061301c8660ff168660ff166000614137565b93509350935093508389888151811061303157fe5b60200101906001600160f81b031916908160001a9053508289886001018151811061305857fe5b60200101906001600160f81b031916908160001a9053508a600214156130a0578189886002018151811061308857fe5b60200101906001600160f81b031916908160001a9053505b5050505050505b50909695505050505050565b6000828152600f6020908152604080832054601e5482516370a0823160e01b81523060048201529251919385936001600160a01b03909216926370a08231926024808201939291829003018186803b15801561310e57600080fd5b505afa158015613122573d6000803e3d6000fd5b505050506040513d602081101561313857600080fd5b50516014549091506000908383028161314d57fe5b6000888152600f6020526040812055601480548690039055601e5491900491506001600160a01b0316632e1a7d4d6127108781038402046040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156131ba57600080fd5b505af11580156131ce573d6000803e3d6000fd5b50506022546040805163a9059cbb60e01b81523060048201526127108a8103870204602482015290516001600160a01b03909216935063a9059cbb92506044808201926020929091908290030181600087803b15801561322d57600080fd5b505af1158015613241573d6000803e3d6000fd5b505050506040513d602081101561325757600080fd5b5050601d80546127108784020401905561326f61423a565b6127108581038202049695505050505050565b60408051600280825260608083018452600093849391929060208301908036833701905050905086816000815181106132b757fe5b60200260200101906001600160a01b031690816001600160a01b031681525050846001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b15801561331057600080fd5b505afa158015613324573d6000803e3d6000fd5b505050506040513d602081101561333a57600080fd5b505181518290600190811061334b57fe5b60200260200101906001600160a01b031690816001600160a01b031681525050600080866001600160a01b031663d06ca61f8b856040518363ffffffff1660e01b81526004018083815260200180602001828103825283818151815260200191508051906020019060200280838360005b838110156133d45781810151838201526020016133bc565b50505050905001935050505060006040518083038186803b1580156133f857600080fd5b505afa15801561340c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561343557600080fd5b8101908080516040519392919084600160201b82111561345457600080fd5b90830190602082018581111561346957600080fd5b82518660208202830111600160201b8211171561348557600080fd5b82525081516020918201928201910280838360005b838110156134b257818101518382015260200161349a565b505050509050016040525050506000815181106134cb57fe5b6020026020010151905061271086612710038202816134e657fe5b049150506060866001600160a01b03166318cbafe58b84868c426040518663ffffffff1660e01b81526004018086815260200185815260200180602001846001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b83811015613570578181015183820152602001613558565b505050509050019650505050505050600060405180830381600087803b15801561359957600080fd5b505af11580156135ad573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156135d657600080fd5b8101908080516040519392919084600160201b8211156135f557600080fd5b90830190602082018581111561360a57600080fd5b82518660208202830111600160201b8211171561362657600080fd5b82525081516020918201928201910280838360005b8381101561365357818101518382015260200161363b565b5050505090500160405250505090508060008151811061366f57fe5b602002602001015160001415801561369c57508060018151811061368f57fe5b6020026020010151600014155b6136e4576040805162461bcd60e51b815260206004820152601460248201527339bbb0b822bc30b1ba22aa24103330b4b632b21760611b604482015290519081900360640190fd5b806000815181106136f157fe5b60200260200101518160018151811061370657fe5b6020026020010151945094505050509550959350505050565b60006110ee600283614323565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061376582611e50565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006137a98261371f565b6137e45760405162461bcd60e51b815260040180806020018281038252602c81526020018061530d602c913960400191505060405180910390fd5b60006137ef83611e50565b9050806001600160a01b0316846001600160a01b0316148061382a5750836001600160a01b031661381f84611364565b6001600160a01b0316145b8061383a575061383a8185612bf4565b949350505050565b61384b8261371f565b6138865760405162461bcd60e51b815260040180806020018281038252602c815260200180615651602c913960400191505060405180910390fd5b6000828152600860209081526040909120825161149c92840190614d68565b60006110ee8261432f565b826001600160a01b03166138c382611e50565b6001600160a01b0316146139085760405162461bcd60e51b81526004018080602001828103825260298152602001806156f06029913960400191505060405180910390fd5b6001600160a01b03821661394d5760405162461bcd60e51b815260040180806020018281038252602481526020018061529a6024913960400191505060405180910390fd5b61395883838361149c565b613963600082613730565b6001600160a01b03831660009081526001602052604090206139859082614333565b506001600160a01b03821660009081526001602052604090206139a8908261433f565b506139b56002828461434b565b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006116388383614361565b60145460009081805b600b54811015613a9b5760008181526010602052604090205460ff16151560011415613a9357613a40816143c5565b6000828152600f60205260409020549092508211613a5f576000613a71565b6000818152600f602052604090205482035b9350601a54841115613a93576000818152600f60205260409020829055918301915b600101613a11565b505060145550565b611509828260405180602001604052806000815250614467565b604080516002808252606080830184526000938493919290602083019080368337019050509050846001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b158015613b1d57600080fd5b505afa158015613b31573d6000803e3d6000fd5b505050506040513d6020811015613b4757600080fd5b505181518290600090613b5657fe5b60200260200101906001600160a01b031690816001600160a01b0316815250508681600181518110613b8457fe5b60200260200101906001600160a01b031690816001600160a01b031681525050600080866001600160a01b031663d06ca61f8b856040518363ffffffff1660e01b81526004018083815260200180602001828103825283818151815260200191508051906020019060200280838360005b83811015613c0d578181015183820152602001613bf5565b50505050905001935050505060006040518083038186803b158015613c3157600080fd5b505afa158015613c45573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015613c6e57600080fd5b8101908080516040519392919084600160201b821115613c8d57600080fd5b908301906020820185811115613ca257600080fd5b82518660208202830111600160201b82111715613cbe57600080fd5b82525081516020918201928201910280838360005b83811015613ceb578181015183820152602001613cd3565b50505050905001604052505050600081518110613d0457fe5b602002602001015190506127108661271003820281613d1f57fe5b049150506060866001600160a01b0316637ff36ab58b84868c42610168016040518663ffffffff1660e01b81526004018085815260200180602001846001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b83811015613da7578181015183820152602001613d8f565b50505050905001955050505050506000604051808303818588803b158015613dce57600080fd5b505af1158015613de2573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f1916820160405260208110156135d657600080fd5b602254601e546040805163095ea7b360e01b81526001600160a01b039283166004820152602481018590529051919092169163095ea7b39160448083019260209291908290030181600087803b158015613e6557600080fd5b505af1158015613e79573d6000803e3d6000fd5b505050506040513d6020811015613e8f57600080fd5b5050601e546040805163b6b55f2560e01b81526004810184905290516001600160a01b039092169163b6b55f259160248082019260009290919082900301818387803b158015613ede57600080fd5b505af1158015613ef2573d6000803e3d6000fd5b5050505050565b6000808080613f0886866144b9565b9097909650945050505050565b600061383a848484614534565b613f2d8484846138b0565b613f39848484846145fe565b6125605760405162461bcd60e51b815260040180806020018281038252603281526020018061517e6032913960400191505060405180910390fd5b606080613f8c84600a0a8681613f8657fe5b04612d64565b90506060613fad848603600a0a86600a0a8881613fa557fe5b0681613f8657fe5b905081816040516020018083805190602001908083835b60208310613fe35780518252601f199092019160209182019101613fc4565b6001836020036101000a03801982511681845116808217855250505050505090500180601760f91b81525060010182805190602001908083835b6020831061403c5780518252601f19909201916020918201910161401d565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052925050509392505050565b601e54604080516370a0823160e01b8152306004820152905160009260019284926001600160a01b03909216916370a0823191602480820192602092909190829003018186803b1580156140cf57600080fd5b505afa1580156140e3573d6000803e3d6000fd5b505050506040513d60208110156140f957600080fd5b50516000858152600f6020526040902054601454919250901561412b5760145481848402028161412557fe5b0461412e565b60005b95945050505050565b60408051606081018252818152600091829182918291601089901b600889901b17871791603f601284901c811692600c85901c821692600686901c831692861691906153fa6020830139848151811061418c57fe5b602001015160f81c60f81b98506040518060600160405280604081526020016153fa6040913983815181106141bd57fe5b602001015160f81c60f81b97506040518060600160405280604081526020016153fa6040913982815181106141ee57fe5b602001015160f81c60f81b96506040518060600160405280604081526020016153fa60409139818151811061421f57fe5b602001015160f81c60f81b9550505050505093509350935093565b601d80546000909155601b54811115611e4d57614255614766565b601c5460408051712932b632b0b9b4b73390383937b334ba399760711b815290516000926001600160a01b031691849160128083019286929190829003018185875af1925050503d80600081146142c8576040519150601f19603f3d011682016040523d82523d6000602084013e6142cd565b606091505b5050905080611509576040805162461bcd60e51b815260206004820152601a60248201527f436f756c64206e6f742072656c656173652070726f666974732e000000000000604482015290519081900360640190fd5b600061163883836148e9565b5490565b60006116388383614901565b600061163883836149c7565b600061383a84846001600160a01b038516614a11565b815460009082106143a35760405162461bcd60e51b815260040180806020018281038252602281526020018061500f6022913960400191505060405180910390fd5b8260000182815481106143b257fe5b9060005260206000200154905092915050565b6000818152600f6020908152604080832054601e5482516370a0823160e01b81523060048201529251919385936001600160a01b03909216926370a08231926024808201939291829003018186803b15801561442057600080fd5b505afa158015614434573d6000803e3d6000fd5b505050506040513d602081101561444a57600080fd5b50516014549091506000901561412b576014548284028161412557fe5b6144718383614aa8565b61447e60008484846145fe565b61149c5760405162461bcd60e51b815260040180806020018281038252603281526020018061517e6032913960400191505060405180910390fd5b8154600090819083106144fd5760405162461bcd60e51b81526004018080602001828103825260228152602001806155c26022913960400191505060405180910390fd5b600084600001848154811061450e57fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b600082815260018401602052604081205482816145cf5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561459457818101518382015260200161457c565b50505050905090810190601f1680156145c15780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b508460000160018203815481106145e257fe5b9060005260206000209060020201600101549150509392505050565b6000614612846001600160a01b0316614bd6565b61461e5750600161383a565b606061472c630a85bd0160e11b61463361372c565b88878760405160240180856001600160a01b03168152602001846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561469a578181015183820152602001614682565b50505050905090810190601f1680156146c75780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b03838183161783525050505060405180606001604052806032815260200161517e603291396001600160a01b0388169190614bdc565b9050600081806020019051602081101561474557600080fd5b50516001600160e01b031916630a85bd0160e11b1492505050949350505050565b601e54604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156147b157600080fd5b505afa1580156147c5573d6000803e3d6000fd5b505050506040513d60208110156147db57600080fd5b5051601454601d549192506000918302816147f257fe5b601d805460148054919091039055600090819055601e5460408051632e1a7d4d60e01b8152949093046004850181905292519294506001600160a01b031692632e1a7d4d926024808301939282900301818387803b15801561485357600080fd5b505af1158015614867573d6000803e3d6000fd5b50506022546040805163a9059cbb60e01b81523360048201526024810186905290516001600160a01b03909216935063a9059cbb92506044808201926020929091908290030181600087803b1580156148bf57600080fd5b505af11580156148d3573d6000803e3d6000fd5b505050506040513d602081101561256057600080fd5b60009081526001919091016020526040902054151590565b600081815260018301602052604081205480156149bd578354600019808301919081019060009087908390811061493457fe5b906000526020600020015490508087600001848154811061495157fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061498157fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506110ee565b60009150506110ee565b60006149d383836148e9565b614a09575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556110ee565b5060006110ee565b600082815260018401602052604081205480614a76575050604080518082018252838152602080820184815286546001818101895560008981528481209551600290930290950191825591519082015586548684528188019092529290912055611638565b82856000016001830381548110614a8957fe5b9060005260206000209060020201600101819055506000915050611638565b6001600160a01b038216614b03576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b614b0c8161371f565b15614b5e576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b614b6a6000838361149c565b6001600160a01b0382166000908152600160205260409020614b8c908261433f565b50614b996002828461434b565b5060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b3b151590565b606061383a848460008585614bf085614bd6565b614c41576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310614c805780518252601f199092019160209182019101614c61565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114614ce2576040519150601f19603f3d011682016040523d82523d6000602084013e614ce7565b606091505b5091509150614cf7828286614d02565b979650505050505050565b60608315614d11575081611638565b825115614d215782518084602001fd5b60405162461bcd60e51b815260206004820181815284516024840152845185939192839260440191908501908083836000831561459457818101518382015260200161457c565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10614da957805160ff1916838001178555614dd6565b82800160010185558215614dd6579182015b82811115614dd6578251825591602001919060010190614dbb565b50614de2929150614de6565b5090565b5b80821115614de25760008155600101614de756fe25334372656374207374796c65203d20276f7061636974793a302e363b6d69782d626c656e642d6d6f64653a6e6f726d616c3b66696c6c3a6e6f6e653b7374726f6b653a2532333062393130303b7374726f6b652d77696474683a31353b7374726f6b652d6c696e656a6f696e3a6d697465723b7374726f6b652d6d697465726c696d69743a343b7374726f6b652d6461736861727261793a6e6f6e653b7374726f6b652d6f7061636974793a313b7061696e742d6f726465723a6e6f726d616c27206964203d20277265637439323627207769647468203d20273331352720686569676874203d2027333135272078203d20273137272079203d2027313727202f2533452025334372656374207374796c65203d20276f7061636974793a302e33333b6d69782d626c656e642d6d6f64653a6e6f726d616c3b66696c6c3a6e6f6e653b7374726f6b653a2532333062393130303b7374726f6b652d77696474683a312e38323439363b7374726f6b652d6c696e656a6f696e3a6d697465723b7374726f6b652d6d697465726c696d69743a343b7374726f6b652d6461736861727261793a6e6f6e653b7374726f6b652d6f7061636974793a313b7061696e742d6f726465723a6e6f726d616c27206964203d2027726563743932362d3427207769647468203d20273238382720686569676874203d2027323838272078203d20273331272079203d2027333127202f253345456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64732533437465787420783d2733352720793d273630272020666f6e742d7765696768743d27626f6c64272066696c6c3d2762726f776e27253345537472696b652050726963653a2533432f746578742533452533437465787420783d2733352720793d273735272020666f6e742d7765696768743d27626f6c64272066696c6c3d2762726f776e272533455553444320496e7665737465643a2533432f7465787425334525334373766720786d6c6e733d27687474703a2f2f7777772e77332e6f72672f323030302f737667272077696474683d2733353027206865696768743d273335302725334520253343726563742077696474683d2733353027206865696768743d2733353027207374796c653d2766696c6c3a726762283235352c3235352c323535293b7374726f6b652d77696474683a333b7374726f6b653a72676228302c302c302927202f2533454552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e74657250657263656e742058206d75737420636f6e666f726d20746f3a203130203c3d2058203c203130304f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573732533437465787420783d273530252720793d2732332720746578742d616e63686f723d276d6964646c652720666f6e742d7765696768743d27626f6c642720666f6e742d73697a653d27312e31656d272066696c6c3d277768697465272533452533437465787420783d273137352720793d2737352720666f6e742d7765696768743d276e6f726d616c272066696c6c3d2762726f776e27253345244552433732313a207472616e7366657220746f20746865207a65726f206164647265737327207374726f6b653d2727207374726f6b652d77696474683d2730272066696c6c3d27677265656e27202f253345616c726561647920696e2070726f63657373206f6620627579696e67206469702e4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e253343636972636c65207374796c653d2766696c6c3a2532336666666666663b7374726f6b653a2532333030303030303b7374726f6b652d77696474683a343b7374726f6b652d6c696e656a6f696e3a726f756e643b7374726f6b652d6d697465726c696d69743a343b7374726f6b652d6461736861727261793a6e6f6e653b7374726f6b652d6f7061636974793a302e3332272069643d27706174683834362d35272063783d27313735272063793d273230302720723d27383027202f2533454142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392d5f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373253343636972636c65207374796c653d2766696c6c3a2532336666666666663b7374726f6b653a2532333030343562623b7374726f6b652d77696474683a312e33383b7374726f6b652d6c696e656a6f696e3a726f756e643b7374726f6b652d6f7061636974793a313b7374726f6b652d6d697465726c696d69743a343b7374726f6b652d6461736861727261793a6e6f6e65272069643d2770617468383436272063783d27313735272063793d273230302720723d2731303027202f253345204552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e2533437465787420783d273137352720793d2734352720666f6e742d7765696768743d276e6f726d616c272066696c6c3d2762726f776e2725334524456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a20224469702056616c7565222c202276616c7565223a204552433732314d657461646174613a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e7b226465736372697074696f6e223a2022546865204e4654206c696d6974206f726465722074686174206561726e73206d6f6e657921222533437465787420783d273137352720793d2736302720666f6e742d7765696768743d276e6f726d616c272066696c6c3d2762726f776e27253345244552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e253343636972636c65207374796c653d2766696c6c3a2532336666666666663b7374726f6b653a2532333030343562623b7374726f6b652d77696474683a312e33383b7374726f6b652d6c696e656a6f696e3a726f756e643b7374726f6b652d6f7061636974793a313b7374726f6b652d6d697465726c696d69743a343b7374726f6b652d6461736861727261793a6e6f6e65272063783d27313735272063793d273230302720723d2731303027202f253345204552433732313a20617070726f76616c20746f2063757272656e74206f776e65722c202265787465726e616c5f75726c223a202268747470733a2f2f77656275797468656469702e636f6d222533437465787420783d273137352720793d2739302720666f6e742d7765696768743d276e6f726d616c272066696c6c3d2762726f776e2725334525334372656374207374796c653d276f7061636974793a302e33333b66696c6c3a2532333135373730303b66696c6c2d6f7061636974793a302e33333b7374726f6b653a2532333062393130303b7374726f6b652d77696474683a313b7374726f6b652d6c696e656361703a726f756e643b7374726f6b652d6c696e656a6f696e3a726f756e643b7374726f6b652d6d697465726c696d69743a343b7374726f6b652d6461736861727261793a6e6f6e653b7374726f6b652d6f7061636974793a313b7061696e742d6f726465723a6e6f726d616c272077696474683d2733353027206865696768743d273335302720783d27302720793d273027202f2533454552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665642533437465787420783d2733352720793d2739302720666f6e742d7765696768743d27626f6c64272066696c6c3d2762726f776e27253345456e657267793a2533432f746578742533452533437465787420783d2733352720793d2734352720666f6e742d7765696768743d27626f6c64272066696c6c3d2762726f776e2725334543757272656e742050726963653a2533432f7465787425334525334370617468207374796c653d2766696c6c3a6e6f6e653b7374726f6b653a2532336666666666663b7374726f6b652d77696474683a31353b7374726f6b652d6c696e656361703a726f756e643b7374726f6b652d6c696e656a6f696e3a726f756e643b7374726f6b652d6d697465726c696d69743a343b7374726f6b652d6f7061636974793a312720643d276d203133392c3231382032302e342c32332e372035362e392c2d35362e3627202f253345202533437465787420783d2735352720793d27333138272066696c6c3d2762726f776e27253345436f6e67726174756c6174696f6e732120596f7520626f7567687420746865206469702e202533432f746578742533452533437465787420783d273530252720793d273333382720746578742d616e63686f723d276d6964646c652720666f6e742d7765696768743d27626f6c642720666f6e742d73697a653d27312e31656d272066696c6c3d2777686974652725334520455448455245554d202533432f74657874253345253343636972636c65207374796c653d2766696c6c3a2532336666666666663b7374726f6b653a2532333030303030303b7374726f6b652d77696474683a343b7374726f6b652d6c696e656a6f696e3a726f756e643b7374726f6b652d6d697465726c696d69743a343b7374726f6b652d6461736861727261793a6e6f6e653b7374726f6b652d6f7061636974793a302e3332272063783d27313735272063793d273230302720723d27383027202f2533452c202261747472696275746573223a205b7b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a2022446970204c6576656c222c202276616c7565223a20a2646970667358221220a5fc0d345f779207057de6e9ce38c2c99baf14e2cafe95a5fda80ddaf5b5531664736f6c634300060c0033",
  "bytecodeSha1": "308ffc03c04d8766e371a49001740513bf76398f",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "BuyTheDipNFT",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "283": [
            1297,
            1320,
            true
          ],
          "284": [
            2099,
            2121,
            true
          ]
        }
      },
      "1": {},
      "10": {},
      "11": {
        "EnumerableMap._at": {
          "277": [
            5045,
            5072,
            true
          ]
        },
        "EnumerableMap._get": {
          "278": [
            6570,
            6583,
            true
          ]
        },
        "EnumerableMap._set": {
          "279": [
            2077,
            2090,
            false
          ]
        }
      },
      "12": {
        "EnumerableSet._add": {
          "282": [
            1724,
            1745,
            false
          ]
        },
        "EnumerableSet._at": {
          "280": [
            4546,
            4572,
            true
          ]
        },
        "EnumerableSet._remove": {
          "281": [
            2449,
            2464,
            false
          ]
        }
      },
      "13": {},
      "16": {},
      "17": {},
      "2": {},
      "20": {
        "BuyTheDipNFT.buyTheDip": {
          "217": [
            28589,
            28636,
            true
          ],
          "218": [
            29234,
            29265,
            false
          ]
        },
        "BuyTheDipNFT.createCollectible": {
          "223": [
            22228,
            22265,
            true
          ],
          "224": [
            22315,
            22332,
            true
          ],
          "225": [
            23541,
            23582,
            false
          ],
          "226": [
            23875,
            23887,
            false
          ]
        },
        "BuyTheDipNFT.destroyAndRefund": {
          "232": [
            27185,
            27216,
            true
          ],
          "233": [
            27255,
            27302,
            false
          ]
        },
        "BuyTheDipNFT.formatTokenURI": {
          "216": [
            40727,
            40757,
            true
          ]
        },
        "BuyTheDipNFT.getAllNFTsByOwner": {
          "229": [
            28128,
            28145,
            false
          ],
          "230": [
            28341,
            28353,
            false
          ],
          "231": [
            28380,
            28397,
            false
          ]
        },
        "BuyTheDipNFT.getLatestPrice": {
          "238": [
            29908,
            29921,
            true
          ]
        },
        "BuyTheDipNFT.getStableCoinBalanceGivenId": {
          "253": [
            47251,
            47269,
            true
          ]
        },
        "BuyTheDipNFT.lendingBalance": {
          "250": [
            47624,
            47642,
            true
          ]
        },
        "BuyTheDipNFT.performUpkeepTest": {
          "220": [
            30777,
            30811,
            false
          ],
          "221": [
            30835,
            30870,
            false
          ],
          "222": [
            30979,
            31012,
            false
          ]
        },
        "BuyTheDipNFT.redip": {
          "234": [
            24753,
            24780,
            true
          ],
          "235": [
            24830,
            24872,
            true
          ],
          "236": [
            25259,
            25292,
            true
          ],
          "237": [
            25500,
            25540,
            false
          ]
        },
        "BuyTheDipNFT.releaseProfits": {
          "251": [
            45226,
            45257,
            false
          ],
          "252": [
            45436,
            45439,
            true
          ]
        },
        "BuyTheDipNFT.setDipLevel": {
          "227": [
            39608,
            39621,
            true
          ],
          "228": [
            39661,
            39684,
            true
          ]
        },
        "BuyTheDipNFT.setEnergy": {
          "239": [
            39341,
            39377,
            true
          ]
        },
        "BuyTheDipNFT.setTokenURI": {
          "219": [
            25754,
            25795,
            true
          ]
        },
        "BuyTheDipNFT.tokenURI": {
          "240": [
            31231,
            31248,
            true
          ],
          "241": [
            31636,
            31650,
            false
          ],
          "242": [
            32130,
            32150,
            false
          ],
          "243": [
            38496,
            38509,
            false
          ]
        },
        "BuyTheDipNFT.uint2str": {
          "244": [
            42660,
            42667,
            false
          ]
        },
        "BuyTheDipNFT.updateAllBalances": {
          "247": [
            26325,
            26357,
            false
          ],
          "248": [
            26599,
            26645,
            true
          ],
          "249": [
            26719,
            26757,
            false
          ]
        },
        "UniswapHelpers._swapExactTokensForETH": {
          "245": [
            2816,
            2831,
            false
          ],
          "246": [
            2835,
            2850,
            true
          ]
        }
      },
      "21": {
        "Base64.encode": {
          "257": [
            890,
            898,
            false
          ],
          "258": [
            1004,
            1012,
            false
          ],
          "259": [
            1229,
            1237,
            false
          ]
        }
      },
      "23": {},
      "26": {},
      "27": {},
      "3": {},
      "4": {
        "ERC721._checkOnERC721Received": {
          "274": [
            15669,
            15684,
            false
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "268": [
            10783,
            10799,
            true
          ]
        },
        "ERC721._mint": {
          "275": [
            12325,
            12341,
            true
          ],
          "276": [
            12396,
            12413,
            true
          ]
        },
        "ERC721._safeMint": {
          "273": [
            11808,
            11862,
            true
          ]
        },
        "ERC721._safeTransfer": {
          "272": [
            9970,
            10018,
            true
          ]
        },
        "ERC721._setTokenURI": {
          "269": [
            14537,
            14553,
            true
          ]
        },
        "ERC721._transfer": {
          "270": [
            13804,
            13835,
            true
          ],
          "271": [
            13917,
            13933,
            true
          ]
        },
        "ERC721.approve": {
          "261": [
            6903,
            6914,
            true
          ],
          "262": [
            6971,
            6992,
            true
          ],
          "263": [
            6996,
            7040,
            true
          ]
        },
        "ERC721.balanceOf": {
          "265": [
            4104,
            4123,
            true
          ]
        },
        "ERC721.getApproved": {
          "260": [
            7325,
            7341,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "267": [
            8798,
            8839,
            true
          ]
        },
        "ERC721.setApprovalForAll": {
          "266": [
            7608,
            7632,
            true
          ]
        },
        "ERC721.transferFrom": {
          "264": [
            8245,
            8286,
            true
          ]
        }
      },
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {
        "Address._verifyCallResult": {
          "255": [
            7234,
            7241,
            false
          ],
          "256": [
            7375,
            7396,
            false
          ]
        },
        "Address.functionCallWithValue": {
          "254": [
            4858,
            4876,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable.owner": {
          "78": [
            1150,
            1163
          ]
        },
        "Ownable.renounceOwnership": {
          "65": [
            1781,
            1826
          ],
          "66": [
            1836,
            1855
          ]
        },
        "Ownable.transferOwnership": {
          "98": [
            2091,
            2164
          ],
          "99": [
            2174,
            2217
          ],
          "100": [
            2227,
            2244
          ]
        }
      },
      "1": {
        "ERC165.supportsInterface": {
          "1": [
            1066,
            1106
          ]
        }
      },
      "10": {
        "Context._msgSender": {
          "128": [
            678,
            695
          ]
        }
      },
      "11": {
        "EnumerableMap._at": {
          "178": [
            5037,
            5111
          ],
          "179": [
            5176,
            5209
          ]
        },
        "EnumerableMap._contains": {
          "188": [
            4365,
            4394
          ]
        },
        "EnumerableMap._get": {
          "180": [
            6562,
            6598
          ],
          "181": [
            6644,
            6684
          ]
        },
        "EnumerableMap._length": {
          "170": [
            4566,
            4592
          ]
        },
        "EnumerableMap._set": {
          "199": [
            2143,
            2200
          ],
          "200": [
            2335,
            2374
          ],
          "201": [
            2388,
            2399
          ],
          "202": [
            2430,
            2471
          ],
          "203": [
            2485,
            2497
          ]
        },
        "EnumerableMap.contains": {
          "169": [
            7688,
            7730
          ]
        },
        "EnumerableMap.get": {
          "157": [
            9648,
            9726
          ]
        },
        "EnumerableMap.length": {
          "135": [
            7908,
            7934
          ]
        },
        "EnumerableMap.set": {
          "173": [
            7132,
            7203
          ]
        }
      },
      "12": {
        "EnumerableSet._add": {
          "195": [
            1761,
            1784
          ],
          "196": [
            1919,
            1959
          ],
          "197": [
            1973,
            1984
          ],
          "198": [
            2015,
            2027
          ]
        },
        "EnumerableSet._at": {
          "174": [
            4538,
            4611
          ],
          "175": [
            4621,
            4646
          ]
        },
        "EnumerableSet._remove": {
          "189": [
            3274,
            3312
          ],
          "190": [
            3378,
            3421
          ],
          "191": [
            3527,
            3544
          ],
          "192": [
            3612,
            3638
          ],
          "193": [
            3653,
            3664
          ],
          "194": [
            3695,
            3707
          ]
        },
        "EnumerableSet.add": {
          "172": [
            8151,
            8190
          ]
        },
        "EnumerableSet.at": {
          "144": [
            9340,
            9378
          ]
        },
        "EnumerableSet.remove": {
          "171": [
            8451,
            8493
          ]
        }
      },
      "13": {},
      "16": {},
      "17": {},
      "2": {},
      "20": {
        "BuyTheDipNFT.<receive>": {
          "0": [
            25993,
            26029
          ]
        },
        "BuyTheDipNFT.buyTheDip": {
          "3": [
            28581,
            28661
          ],
          "4": [
            28877,
            28940
          ],
          "5": [
            29113,
            29169
          ],
          "6": [
            29179,
            29220
          ],
          "7": [
            29269,
            29301
          ],
          "8": [
            29314,
            29446
          ],
          "9": [
            29534,
            29567
          ]
        },
        "BuyTheDipNFT.checkUpkeep": {
          "62": [
            30129,
            30222
          ]
        },
        "BuyTheDipNFT.createCollectible": {
          "30": [
            22219,
            22293
          ],
          "31": [
            22307,
            22377
          ],
          "32": [
            22426,
            22445
          ],
          "33": [
            22460,
            22495
          ],
          "34": [
            22577,
            22608
          ],
          "35": [
            22622,
            22654
          ],
          "36": [
            22669,
            22701
          ],
          "37": [
            22715,
            22790
          ],
          "38": [
            22804,
            22848
          ],
          "39": [
            23096,
            23182
          ],
          "40": [
            23196,
            23275
          ],
          "41": [
            23290,
            23361
          ],
          "42": [
            23434,
            23480
          ],
          "43": [
            23601,
            23642
          ],
          "44": [
            23671,
            23708
          ],
          "45": [
            23756,
            23797
          ],
          "46": [
            23813,
            23857
          ],
          "47": [
            24354,
            24373
          ]
        },
        "BuyTheDipNFT.destroyAndRefund": {
          "57": [
            27177,
            27241
          ],
          "58": [
            27317,
            27336
          ],
          "59": [
            27551,
            27614
          ]
        },
        "BuyTheDipNFT.formatTokenURI": {
          "2": [
            39994,
            41163
          ]
        },
        "BuyTheDipNFT.getAllNFTsByOwner": {
          "51": [
            28164,
            28173
          ],
          "52": [
            28107,
            28110
          ],
          "53": [
            28356,
            28361
          ],
          "54": [
            28416,
            28430
          ],
          "55": [
            28320,
            28323
          ],
          "56": [
            28465,
            28477
          ]
        },
        "BuyTheDipNFT.getLatestPrice": {
          "79": [
            29900,
            29944
          ],
          "80": [
            29954,
            29975
          ]
        },
        "BuyTheDipNFT.lendStableCoin": {
          "155": [
            46949,
            46986
          ],
          "156": [
            46992,
            47014
          ]
        },
        "BuyTheDipNFT.lendingBalance": {
          "161": [
            47617,
            47697
          ]
        },
        "BuyTheDipNFT.performUpkeepTest": {
          "19": [
            30543,
            30574
          ],
          "20": [
            30894,
            30906
          ],
          "21": [
            31036,
            31069
          ],
          "22": [
            30755,
            30758
          ]
        },
        "BuyTheDipNFT.redip": {
          "67": [
            24744,
            24812
          ],
          "68": [
            24822,
            24910
          ],
          "69": [
            24921,
            24940
          ],
          "70": [
            24951,
            25043
          ],
          "71": [
            25053,
            25095
          ],
          "72": [
            25106,
            25241
          ],
          "73": [
            25251,
            25321
          ],
          "74": [
            25332,
            25377
          ],
          "75": [
            25388,
            25436
          ],
          "76": [
            25446,
            25486
          ],
          "77": [
            25555,
            25595
          ]
        },
        "BuyTheDipNFT.releaseProfits": {
          "166": [
            45185,
            45213
          ],
          "167": [
            45271,
            45299
          ],
          "168": [
            45428,
            45470
          ]
        },
        "BuyTheDipNFT.retrieveLentStablecoins": {
          "115": [
            44584,
            44617
          ],
          "116": [
            44627,
            44669
          ],
          "117": [
            44719,
            44776
          ],
          "118": [
            44786,
            44857
          ],
          "119": [
            44907,
            44966
          ],
          "120": [
            44977,
            44993
          ],
          "121": [
            45004,
            45052
          ]
        },
        "BuyTheDipNFT.setDipLevel": {
          "48": [
            39583,
            39643
          ],
          "49": [
            39653,
            39704
          ],
          "50": [
            39775,
            39814
          ]
        },
        "BuyTheDipNFT.setEnergy": {
          "85": [
            39333,
            39403
          ],
          "86": [
            39451,
            39486
          ]
        },
        "BuyTheDipNFT.setTokenURI": {
          "16": [
            25733,
            25870
          ],
          "17": [
            25880,
            25912
          ]
        },
        "BuyTheDipNFT.svgToImageURI": {
          "26": [
            38854,
            38885
          ],
          "27": [
            38899,
            38943
          ],
          "28": [
            39144,
            39201
          ]
        },
        "BuyTheDipNFT.tokenURI": {
          "89": [
            31223,
            31300
          ],
          "90": [
            31666,
            31689
          ],
          "91": [
            31728,
            31901
          ],
          "92": [
            32165,
            33485
          ],
          "93": [
            33546,
            34743
          ],
          "94": [
            36663,
            38283
          ],
          "95": [
            38524,
            38575
          ],
          "96": [
            38614,
            38623
          ]
        },
        "BuyTheDipNFT.uint2str": {
          "101": [
            42683,
            42693
          ],
          "102": [
            42781,
            42786
          ],
          "103": [
            42800,
            42807
          ],
          "104": [
            42927,
            42966
          ],
          "105": [
            42980,
            42988
          ],
          "106": [
            43008,
            43027
          ],
          "160": [
            42503,
            42554
          ]
        },
        "BuyTheDipNFT.updateAllBalances": {
          "145": [
            26376,
            26430
          ],
          "146": [
            26584,
            26698
          ],
          "147": [
            26781,
            26827
          ],
          "148": [
            26849,
            26874
          ],
          "149": [
            26304,
            26307
          ],
          "150": [
            26926,
            26953
          ]
        },
        "BuyTheDipNFT.withdrawProfitsFromLending": {
          "184": [
            46633,
            46693
          ],
          "185": [
            46742,
            46770
          ],
          "186": [
            46781,
            46810
          ],
          "187": [
            46820,
            46860
          ]
        },
        "UniswapHelpers._swapEthForTokens": {
          "152": [
            3629,
            3653
          ],
          "153": [
            3663,
            3693
          ],
          "154": [
            4938,
            5001
          ]
        },
        "UniswapHelpers._swapExactTokensForETH": {
          "122": [
            1305,
            1335
          ],
          "123": [
            1416,
            1440
          ],
          "124": [
            2478,
            2541
          ],
          "125": [
            2808,
            2875
          ],
          "126": [
            2885,
            2916
          ]
        }
      },
      "21": {
        "Base64.encode": {
          "107": [
            676,
            839
          ],
          "108": [
            653,
            659
          ],
          "109": [
            856,
            862
          ],
          "110": [
            1033,
            1065
          ],
          "111": [
            1171,
            1182
          ],
          "112": [
            1197,
            1210
          ],
          "113": [
            1256,
            1269
          ],
          "114": [
            1308,
            1326
          ]
        },
        "Base64.encode3": {
          "162": [
            1704,
            1727
          ],
          "163": [
            1738,
            1761
          ],
          "164": [
            1772,
            1795
          ],
          "165": [
            1806,
            1829
          ]
        }
      },
      "23": {},
      "26": {},
      "27": {},
      "3": {},
      "4": {
        "ERC721._approve": {
          "129": [
            16184,
            16213
          ],
          "130": [
            16223,
            16274
          ]
        },
        "ERC721._checkOnERC721Received": {
          "182": [
            15700,
            15711
          ],
          "183": [
            16071,
            16106
          ]
        },
        "ERC721._exists": {
          "127": [
            10464,
            10501
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "131": [
            10775,
            10848
          ],
          "132": [
            10907,
            11010
          ]
        },
        "ERC721._mint": {
          "204": [
            12317,
            12378
          ],
          "205": [
            12388,
            12446
          ],
          "206": [
            12457,
            12502
          ],
          "207": [
            12513,
            12543
          ],
          "208": [
            12554,
            12583
          ],
          "209": [
            12594,
            12632
          ]
        },
        "ERC721._safeMint": {
          "151": [
            11423,
            11449
          ],
          "176": [
            11772,
            11790
          ],
          "177": [
            11800,
            11917
          ]
        },
        "ERC721._safeTransfer": {
          "158": [
            9924,
            9952
          ],
          "159": [
            9962,
            10073
          ]
        },
        "ERC721._setTokenURI": {
          "133": [
            14529,
            14602
          ],
          "134": [
            14612,
            14643
          ]
        },
        "ERC721._transfer": {
          "136": [
            13796,
            13881
          ],
          "137": [
            13909,
            13974
          ],
          "138": [
            13985,
            14024
          ],
          "139": [
            14086,
            14115
          ],
          "140": [
            14126,
            14161
          ],
          "141": [
            14171,
            14201
          ],
          "142": [
            14212,
            14241
          ],
          "143": [
            14252,
            14284
          ]
        },
        "ERC721.approve": {
          "13": [
            6895,
            6952
          ],
          "14": [
            6963,
            7122
          ],
          "15": [
            7133,
            7154
          ]
        },
        "ERC721.balanceOf": {
          "63": [
            4096,
            4170
          ],
          "64": [
            4180,
            4216
          ]
        },
        "ERC721.baseURI": {
          "61": [
            5928,
            5943
          ]
        },
        "ERC721.getApproved": {
          "11": [
            7317,
            7390
          ],
          "12": [
            7401,
            7432
          ]
        },
        "ERC721.isApprovedForAll": {
          "97": [
            7975,
            8017
          ]
        },
        "ERC721.name": {
          "10": [
            4596,
            4608
          ]
        },
        "ERC721.ownerOf": {
          "60": [
            4371,
            4448
          ]
        },
        "ERC721.safeTransferFrom": {
          "29": [
            8555,
            8594
          ],
          "87": [
            8790,
            8893
          ],
          "88": [
            8903,
            8942
          ]
        },
        "ERC721.setApprovalForAll": {
          "82": [
            7600,
            7662
          ],
          "83": [
            7673,
            7726
          ],
          "84": [
            7736,
            7789
          ]
        },
        "ERC721.symbol": {
          "81": [
            4760,
            4774
          ]
        },
        "ERC721.tokenOfOwnerByIndex": {
          "25": [
            6145,
            6182
          ]
        },
        "ERC721.totalSupply": {
          "18": [
            6433,
            6461
          ]
        },
        "ERC721.transferFrom": {
          "23": [
            8237,
            8340
          ],
          "24": [
            8351,
            8379
          ]
        }
      },
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {
        "Address._verifyCallResult": {
          "214": [
            7257,
            7274
          ],
          "215": [
            7765,
            7785
          ]
        },
        "Address.functionCall": {
          "211": [
            3708,
            3767
          ]
        },
        "Address.functionCallWithValue": {
          "212": [
            4850,
            4910
          ],
          "213": [
            5065,
            5124
          ]
        },
        "Address.isContract": {
          "210": [
            1117,
            1132
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Address",
    "smartcontractkit/chainlink-brownie-contracts@1.1.1/AggregatorV3Interface",
    "Base64",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Context",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/ERC721",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/EnumerableMap",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/EnumerableSet",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC165",
    "IERC20",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC721",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC721Enumerable",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/IERC721Receiver",
    "IUniswapV2Router01",
    "IUniswapV2Router02",
    "IyUSDC",
    "smartcontractkit/chainlink-brownie-contracts@1.1.1/KeeperCompatibleInterface",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/SafeMath",
    "OpenZeppelin/openzeppelin-contracts@3.4.0/Strings",
    "UniswapHelpers"
  ],
  "deployedBytecode": "6080604052600436106102765760003560e01c80634f6ccce71161014f5780638e15f473116100c1578063d082e3811161007a578063d082e38114610d3f578063e985e9c514610d54578063f2fde38b14610d8f578063fb1b0f2914610dc2578063fc4a72fb14610dec578063fd4889c114610e01576102b7565b80638e15f47314610baf57806395d89b4114610bc4578063a22cb46514610bd9578063ae153e3e14610c14578063b88d4fde14610c44578063c87b56dd14610d15576102b7565b80636e04ff0d116101135780636e04ff0d14610a2457806370a0823114610b20578063715018a614610b535780638b772ba414610b685780638d98ebc114610b855780638da5cb5b14610b9a576102b7565b80634f6ccce71461090e5780635d2e11571461093857806360570068146109bb5780636352211e146109e55780636c0360eb14610a0f576102b7565b806323b872dd116101e857806342842e0e116101ac57806342842e0e1461079057806343413e8a146107d35780634585e33b146107f65780634661720a1461087157806347b6b4911461089b578063498a4af3146108db576102b7565b806323b872dd146106395780632f745c591461067c57806330d871c6146106b5578063351c7d3514610766578063355c89731461077b576102b7565b8063095ea7b31161023a578063095ea7b3146104b85780630a537537146104f1578063162094c41461052d57806318160ddd146105e557806318ff04ee146105fa5780632223c5f11461060f576102b7565b806301ffc9a7146102bc5780630419e3141461030457806304276b2f1461043157806306fdde031461045d578063081812fc14610472576102b7565b366102b7576040805133815234602082015281517f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874929181900390910190a1005b600080fd5b3480156102c857600080fd5b506102f0600480360360208110156102df57600080fd5b50356001600160e01b031916610e2b565b604080519115158252519081900360200190f35b34801561031057600080fd5b506103bc6004803603604081101561032757600080fd5b81359190810190604081016020820135600160201b81111561034857600080fd5b82018360208201111561035a57600080fd5b803590602001918460018302840111600160201b8311171561037b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610e4e945050505050565b6040805160208082528351818301528351919283929083019185019080838360005b838110156103f65781810151838201526020016103de565b50505050905090810190601f1680156104235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561043d57600080fd5b5061045b6004803603602081101561045457600080fd5b50356110f4565b005b34801561046957600080fd5b506103bc6112ce565b34801561047e57600080fd5b5061049c6004803603602081101561049557600080fd5b5035611364565b604080516001600160a01b039092168252519081900360200190f35b3480156104c457600080fd5b5061045b600480360360408110156104db57600080fd5b506001600160a01b0381351690602001356113c6565b3480156104fd57600080fd5b5061051b6004803603602081101561051457600080fd5b50356114a1565b60408051918252519081900360200190f35b34801561053957600080fd5b5061045b6004803603604081101561055057600080fd5b81359190810190604081016020820135600160201b81111561057157600080fd5b82018360208201111561058357600080fd5b803590602001918460018302840111600160201b831117156105a457600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506114b3945050505050565b3480156105f157600080fd5b5061051b61150d565b34801561060657600080fd5b5061045b61151e565b34801561061b57600080fd5b5061051b6004803603602081101561063257600080fd5b50356115ad565b34801561064557600080fd5b5061045b6004803603606081101561065c57600080fd5b506001600160a01b038135811691602081013590911690604001356115bf565b34801561068857600080fd5b5061051b6004803603604081101561069f57600080fd5b506001600160a01b038135169060200135611616565b3480156106c157600080fd5b506103bc600480360360208110156106d857600080fd5b810190602081018135600160201b8111156106f257600080fd5b82018360208201111561070457600080fd5b803590602001918460018302840111600160201b8311171561072557600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061163f945050505050565b34801561077257600080fd5b5061049c6117fd565b34801561078757600080fd5b5061049c61180c565b34801561079c57600080fd5b5061045b600480360360608110156107b357600080fd5b506001600160a01b0381358116916020810135909116906040013561181b565b61051b600480360360208110156107e957600080fd5b503563ffffffff16611836565b34801561080257600080fd5b5061045b6004803603602081101561081957600080fd5b810190602081018135600160201b81111561083357600080fd5b82018360208201111561084557600080fd5b803590602001918460018302840111600160201b8311171561086657600080fd5b509092509050611509565b34801561087d57600080fd5b5061051b6004803603602081101561089457600080fd5b5035611aac565b3480156108a757600080fd5b506108c5600480360360208110156108be57600080fd5b5035611abe565b6040805160ff9092168252519081900360200190f35b3480156108e757600080fd5b5061045b600480360360408110156108fe57600080fd5b508035906020013560ff16611ad3565b34801561091a57600080fd5b5061051b6004803603602081101561093157600080fd5b5035611bfd565b34801561094457600080fd5b5061096b6004803603602081101561095b57600080fd5b50356001600160a01b0316611c13565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156109a757818101518382015260200161098f565b505050509050019250505060405180910390f35b3480156109c757600080fd5b5061045b600480360360208110156109de57600080fd5b5035611d03565b3480156109f157600080fd5b5061049c60048036036020811015610a0857600080fd5b5035611e50565b348015610a1b57600080fd5b506103bc611e78565b348015610a3057600080fd5b50610a9f60048036036020811015610a4757600080fd5b810190602081018135600160201b811115610a6157600080fd5b820183602082011115610a7357600080fd5b803590602001918460018302840111600160201b83111715610a9457600080fd5b509092509050611ed9565b60405180831515815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610ae4578181015183820152602001610acc565b50505050905090810190601f168015610b115780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b348015610b2c57600080fd5b5061051b60048036036020811015610b4357600080fd5b50356001600160a01b0316611f22565b348015610b5f57600080fd5b5061045b611f8a565b61051b60048036036020811015610b7e57600080fd5b5035612048565b348015610b9157600080fd5b5061051b61222f565b348015610ba657600080fd5b5061049c612235565b348015610bbb57600080fd5b5061051b612244565b348015610bd057600080fd5b506103bc61233b565b348015610be557600080fd5b5061045b60048036036040811015610bfc57600080fd5b506001600160a01b038135169060200135151561239c565b348015610c2057600080fd5b5061045b60048036036040811015610c3757600080fd5b50803590602001356124a1565b348015610c5057600080fd5b5061045b60048036036080811015610c6757600080fd5b6001600160a01b03823581169260208101359091169160408201359190810190608081016060820135600160201b811115610ca157600080fd5b820183602082011115610cb357600080fd5b803590602001918460018302840111600160201b83111715610cd457600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061250e945050505050565b348015610d2157600080fd5b506103bc60048036036020811015610d3857600080fd5b5035612566565b348015610d4b57600080fd5b5061051b612bee565b348015610d6057600080fd5b506102f060048036036040811015610d7757600080fd5b506001600160a01b0381358116916020013516612bf4565b348015610d9b57600080fd5b5061045b60048036036020811015610db257600080fd5b50356001600160a01b0316612c22565b348015610dce57600080fd5b506102f060048036036020811015610de557600080fd5b5035612d37565b348015610df857600080fd5b5061051b612d4c565b348015610e0d57600080fd5b5061051b60048036036020811015610e2457600080fd5b5035612d52565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b606060016000848152600c602052604090205461105c90849060ff1615610e8e57604051806040016040528060018152602001603160f81b815250610ea9565b604051806040016040528060018152602001600360fc1b8152505b6000878152600d6020526040902054610ec190612d64565b60405160200180603761567d8239603701602b61581d8239602b01806b16101134b6b0b3b2911d101160a11b815250600c0184805190602001908083835b60208310610f1e5780518252601f199092019160209182019101610eff565b5181516020939093036101000a6000190180199091169216919091179052601160f91b920191825250741610113730b6b2911d1011213abcaa3432a234b81160591b60018201526016016050615c80823960500183805190602001908083835b60208310610f9d5780518252601f199092019160209182019101610f7e565b5181516020939093036101000a600019018019909116921691909117905261207d60f01b9201918252506002016041615610823960410182805190602001908083835b60208310610fff5780518252601f199092019160209182019101610fe0565b5181516020939093036101000a600019018019909116921691909117905261207d60f01b920191825250605d60f81b6002820152607d60f81b600382015260408051808303601b19018152600490920190529350612e3c92505050565b60405160200180807f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000815250601d0182805190602001908083835b602083106110b65780518252601f199092019160209182019101611097565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040529150505b92915050565b6110fc612244565b6000828152600d60205260409020541115611155576040805162461bcd60e51b8152602060048201526014602482015273141c9a58d94818589bdd9948191a5c13195d995b60621b604482015290519081900360640190fd5b60004790506000611168836018546130b3565b602154601f546040805163095ea7b360e01b81526001600160a01b03928316600482015260248101859052905193945091169163095ea7b3916044808201926020929091908290030181600087803b1580156111c357600080fd5b505af11580156111d7573d6000803e3d6000fd5b505050506040513d60208110156111ed57600080fd5b505060215460009081906112269084906001600160a01b031661120f88611e50565b601f546013546001600160a01b0390911690613282565b6040805182815242602082015281519395509193507f4bcdd9b8b0cadbbafa70adc1d3944dfb4731760c7d447e4c7da9f6f5645f8c6792918290030190a16000858152601060209081526040808320805460ff19169055600c909152902054600760ff90911610156112b5576000858152600c60205260409020805460ff8082166001011660ff199091161790555b5050506000918252506011602052604090206127109055565b60068054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561135a5780601f1061132f5761010080835404028352916020019161135a565b820191906000526020600020905b81548152906001019060200180831161133d57829003601f168201915b5050505050905090565b600061136f8261371f565b6113aa5760405162461bcd60e51b815260040180806020018281038252602c8152602001806155e4602c913960400191505060405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006113d182611e50565b9050806001600160a01b0316836001600160a01b031614156114245760405162461bcd60e51b81526004018080602001828103825260218152602001806157fc6021913960400191505060405180910390fd5b806001600160a01b031661143661372c565b6001600160a01b0316148061145757506114578161145261372c565b612bf4565b6114925760405162461bcd60e51b815260040180806020018281038252603881526020018061543a6038913960400191505060405180910390fd5b61149c8383613730565b505050565b600d6020526000908152604090205481565b6114c46114be61372c565b8361379e565b6114ff5760405162461bcd60e51b81526004018080602001828103825260318152602001806159836031913960400191505060405180910390fd5b6115098282613842565b5050565b600061151960026138a5565b905090565b42601555600061152c612244565b905060005b600b548110156115095760008181526010602052604090205460ff1615156001141561157a576000818152600d6020526040902054821061157557611575816110f4565b6115a5565b6012546000828152600d602052604090205410156115a5576000818152600d60205260409020546012555b600101611531565b60116020526000908152604090205481565b6115d06115ca61372c565b8261379e565b61160b5760405162461bcd60e51b81526004018080602001828103825260318152602001806159836031913960400191505060405180910390fd5b61149c8383836138b0565b6001600160a01b038216600090815260016020526040812061163890836139fc565b9392505050565b604080518082018252601a81527f646174613a696d6167652f7376672b786d6c3b6261736536342c0000000000006020918201528151808301835260138082527219185d184e9a5b5859d94bdcdd99cade1b5b0b606a1b8284019081529351606094600094849388939091019182918083835b602083106116d15780518252601f1990920191602091820191016116b2565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b602083106117195780518252601f1990920191602091820191016116fa565b6001836020036101000a0380198251168184511680821785525050505050509050019250505060405160208183030381529060405292505050610e49565b602083106117765780518252601f199092019160209182019101611757565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b602083106117be5780518252601f19909201916020918201910161179f565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529350505050919050565b6024546001600160a01b031681565b601c546001600160a01b031681565b61149c8383836040518060200160405280600081525061250e565b600060165460195434011015611893576040805162461bcd60e51b815260206004820152601760248201527f4e6f7420656e6f756768206e617469766520636f696e2e000000000000000000604482015290519081900360640190fd5b60648263ffffffff16106118d85760405162461bcd60e51b81526004018080602001828103825260288152602001806151b06028913960400191505060405180910390fd5b6118e0613a08565b601954601d80549091019055600b8054600181019091556119013382613aa3565b6000818152600c60205260409020805460ff191690556064611921612244565b8460640363ffffffff16028161193357fe5b6000838152600d6020908152604080832094909304909355600e909252812063ffffffff85169055602154601f546013546119819234926001600160a01b0391821692309290911690613abd565b91505060195434018134028161199357fe5b6000848152600f602052604090209190049055601954348101908202816119b657fe5b601d80549290910490910190556000828152600f6020526040902054611a1e576040805162461bcd60e51b815260206004820152601860248201527722b93937b910902737903a37b5b2b739903137bab3b43a1760411b604482015290519081900360640190fd5b6000828152600f6020526040902054611a3690613e0c565b6012546000838152600d60205260409020541115611a61576000828152600d60205260409020546012555b60148054820190556000828152601060205260409020805460ff19166001179055611a9482611a8f81612566565b613842565b8160021415611aa557611aa561151e565b5050919050565b600e6020526000908152604090205481565b600c6020526000908152604090205460ff1681565b611adb61372c565b6001600160a01b0316611aec612235565b6001600160a01b031614611b47576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60088160ff1610611b93576040805162461bcd60e51b8152602060048201526011602482015270125b9d985b1a5908111a5c0813195d995b607a1b604482015290519081900360640190fd5b600b548210611bdb576040805162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081d1bdad95b9259608a1b604482015290519081900360640190fd5b6000918252600c6020526040909120805460ff191660ff909216919091179055565b600080611c0b600284613ef9565b509392505050565b60606000805b600b54811015611c5457836001600160a01b0316611c3682611e50565b6001600160a01b03161415611c4c576001820191505b600101611c19565b5060608167ffffffffffffffff81118015611c6e57600080fd5b50604051908082528060200260200182016040528015611c98578160200160208202803683370190505b5090506000805b600b54811015611cf957838210611cb557611cf9565b856001600160a01b0316611cc882611e50565b6001600160a01b03161415611cf15780838381518110611ce457fe5b6020026020010181815250505b600101611c9f565b5090949350505050565b611d0c81611e50565b6001600160a01b0316336001600160a01b031614611d68576040805162461bcd60e51b815260206004820152601460248201527326bab9ba103132903a37b5b2b71037bbb732b91760611b604482015290519081900360640190fd5b611d70612244565b6000828152600d602052604090205411611d9257611d8d816110f4565b611e4d565b6000611da0826017546130b3565b602154601f546040805163095ea7b360e01b81526001600160a01b03928316600482015260248101859052905193945091169163095ea7b3916044808201926020929091908290030181600087803b158015611dfb57600080fd5b505af1158015611e0f573d6000803e3d6000fd5b505050506040513d6020811015611e2557600080fd5b50506021546000908190611e479084906001600160a01b031661120f87611e50565b50505050505b50565b60006110ee8260405180606001604052806029815260200161555d6029913960029190613f15565b60098054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561135a5780601f1061132f5761010080835404028352916020019161135a565b600060607f00000000000000000000000000000000000000000000000000000000000000006015544203118015611f195750611f13612244565b60125411155b91509250929050565b60006001600160a01b038216611f695760405162461bcd60e51b815260040180806020018281038252602a815260200180615472602a913960400191505060405180910390fd5b6001600160a01b03821660009081526001602052604090206110ee906138a5565b611f9261372c565b6001600160a01b0316611fa3612235565b6001600160a01b031614611ffe576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600a546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600a80546001600160a01b0319169055565b60006016543410156120a1576040805162461bcd60e51b815260206004820152601b60248201527f4e6f7420456e6f75676820424e422d2d6f722077686174657665720000000000604482015290519081900360640190fd5b60008281526010602052604090205460ff16156120ef5760405162461bcd60e51b81526004018080602001828103825260218152602001806152ec6021913960400191505060405180910390fd5b6120f7613a08565b6064612101612244565b6000848152600e6020526040902054606403028161211b57fe5b6000848152600d60205260409020919004905561213b82611a8f81612566565b602154601f546013546121619234926001600160a01b0391821692309290911690613abd565b6000848152600f60205260409020819055151590506121c2576040805162461bcd60e51b815260206004820152601860248201527722b93937b910902737903a37b5b2b739903137bab3b43a1760411b604482015290519081900360640190fd5b6000828152600f60205260409020546121da90613e0c565b6000828152600f602090815260408083205460148054909101905560108252808320805460ff19166001179055601254600d909252909120541115610e49576000918252600d60205260409091205460125590565b60145481565b600a546001600160a01b031690565b600080600080600080602360009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561229b57600080fd5b505afa1580156122af573d6000803e3d6000fd5b505050506040513d60a08110156122c557600080fd5b5080516020820151604083015160608401516080909401519298509096509450909250905081612331576040805162461bcd60e51b8152602060048201526012602482015271526f756e64206e6f7420636f6d706c65746560701b604482015290519081900360640190fd5b5091935050505090565b60078054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561135a5780601f1061132f5761010080835404028352916020019161135a565b6123a461372c565b6001600160a01b0316826001600160a01b0316141561240a576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b806005600061241761372c565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff19169215159290921790915561245b61372c565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b6000828152601160205260409020548111156124fc576040805162461bcd60e51b815260206004820152601560248201527443616e277420696e63726561736520656e6572677960581b604482015290519081900360640190fd5b60009182526011602052604090912055565b6125196114be61372c565b6125545760405162461bcd60e51b81526004018080602001828103825260318152602001806159836031913960400191505060405180910390fd5b61256084848484613f22565b50505050565b60606125718261371f565b6125ac5760405162461bcd60e51b815260040180806020018281038252602f815260200180615719602f913960400191505060405180910390fd5b600082815260106020908152604080832054600c835281842054600d9093529083205460ff918216939290911691604e906125e5612244565b90506000856125f5575081612643565b6000888152600e602052604090205460649081039085028161261357fe5b04821161263d576064828584036064028161262a57fe5b0460640384028161263757fe5b04612640565b60005b90505b60008881526011602052604090205460606001881515141561271d5761266883612d64565b6040516020018060c161549c823960c1018061533960c1913960c101807f253343636972636c652063783d27313735272063793d273230302720723d2700815250601f0182805190602001908083835b602083106126d75780518252601f1990920191602091820191016126b8565b6001836020036101000a038019825116818451168082178552505050505050905001806152be602e9139602e0191505060405160208183030381529060405290506127ea565b61272683612d64565b6040516020018060b4615748823960b40160b2615bce823960b201807f253343636972636c652063783d27313735272063793d273230302720723d2700815250601f0182805190602001908083835b602083106127945780518252601f199092019160209182019101612775565b6001836020036101000a038019825116818451168082178552505050505050905001806152be602e9139602e0160b3615a4f823960b3016056615b02823960560191505060405160208183030381529060405290505b60606128006127f7612244565b60086002613f74565b61280d8860086002613f74565b6040516020018060aa6150d4823960aa01610100615883823961010001610213614dfc82396102130160516159fe8239605101603c6155868239603c0183805190602001908083835b602083106128755780518252601f199092019160209182019101612856565b5181516020939093036101000a60001901801990911692169190911790526a2533432f7465787425334560a81b920191825250600b0160516150318239605101603c6156b48239603c0182805190602001908083835b602083106128ea5780518252601f1990920191602091820191016128cb565b5181516020939093036101000a60001901801990911692169190911790526a2533432f7465787425334560a81b920191825250600b01605261508282396052019250505060405160208183030381529060405290508061295561294c8d61407c565b60066002613f74565b61295e85612d64565b6129678e612d64565b856040516020018086805190602001908083835b6020831061299a5780518252601f19909201916020918201910161297b565b6001836020036101000a0380198251168184511680821785525050505050509050018061525e603c9139603c0185805190602001908083835b602083106129f25780518252601f1990920191602091820191016129d3565b5181516020939093036101000a60001901801990911692169190911790526b202533432f7465787425334560a01b920191825250600c01604a6159b48239604a01603b6158488239603b0184805190602001908083835b60208310612a685780518252601f199092019160209182019101612a49565b5181516020939093036101000a60001901801990911692169190911790526a2533432f7465787425334560a81b920191825250600b0160606151fe823960600183805190602001908083835b60208310612ad35780518252601f199092019160209182019101612ab4565b5181516020939093036101000a60001901801990911692169190911790526a2533432f7465787425334560a81b920191825250600b016076615b58823960760182805190602001908083835b60208310612b3e5780518252601f199092019160209182019101612b1f565b5181516020939093036101000a60001901801990911692169190911790526b2ab739bab83837b93a32b21760a11b920191825250692533432f73766725334560b01b600c82015260408051808303600919018152601690920190529650505060028c10159350612bce9250505057612bbe8b612bb98361163f565b610e4e565b9950505050505050505050610e49565b604051806020016040528060008152509950505050505050505050610e49565b600b5481565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b612c2a61372c565b6001600160a01b0316612c3b612235565b6001600160a01b031614612c96576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116612cdb5760405162461bcd60e51b81526004018080602001828103825260268152602001806151d86026913960400191505060405180910390fd5b600a546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600a80546001600160a01b0319166001600160a01b0392909216919091179055565b60106020526000908152604090205460ff1681565b60125481565b600f6020526000908152604090205481565b606081612d8957506040805180820190915260018152600360fc1b6020820152610e49565b8160005b8115612da157600101600a82049150612d8d565b60608167ffffffffffffffff81118015612dba57600080fd5b506040519080825280601f01601f191660200182016040528015612de5576020820181803683370190505b50905060001982015b8515612e3357600a860660300160f81b82828060019003935081518110612e1157fe5b60200101906001600160f81b031916908160001a905350600a86049550612dee565b50949350505050565b60608082905060006003825181612e4f57fe5b06905060006003828103066003845160020181612e6857fe5b0460040203905060608167ffffffffffffffff81118015612e8857600080fd5b506040519080825280601f01601f191660200182016040528015612eb3576020820181803683370190505b5090506000805b85518260030111612fbd57612f21868381518110612ed457fe5b602001015160f81c60f81b60f81c60ff16878460010181518110612ef457fe5b602001015160f81c60f81b60f81c60ff16888560020181518110612f1457fe5b016020015160f81c614137565b868581518110612f2d57fe5b60200101878660010181518110612f4057fe5b60200101888760020181518110612f5357fe5b60200101898860030181518110612f6657fe5b6001600160f81b0319861660001a9101602001536001600160f81b0319851660001a90536001600160f81b0319851660001a90536001600160f81b0319851660001a90535050506003929092019150600401612eba565b84156130a7576000868688510381518110612fd457fe5b016020015160f81c9050600060028714156130045787600189510381518110612ff957fe5b016020015160f81c90505b60008060008061301c8660ff168660ff166000614137565b93509350935093508389888151811061303157fe5b60200101906001600160f81b031916908160001a9053508289886001018151811061305857fe5b60200101906001600160f81b031916908160001a9053508a600214156130a0578189886002018151811061308857fe5b60200101906001600160f81b031916908160001a9053505b5050505050505b50909695505050505050565b6000828152600f6020908152604080832054601e5482516370a0823160e01b81523060048201529251919385936001600160a01b03909216926370a08231926024808201939291829003018186803b15801561310e57600080fd5b505afa158015613122573d6000803e3d6000fd5b505050506040513d602081101561313857600080fd5b50516014549091506000908383028161314d57fe5b6000888152600f6020526040812055601480548690039055601e5491900491506001600160a01b0316632e1a7d4d6127108781038402046040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156131ba57600080fd5b505af11580156131ce573d6000803e3d6000fd5b50506022546040805163a9059cbb60e01b81523060048201526127108a8103870204602482015290516001600160a01b03909216935063a9059cbb92506044808201926020929091908290030181600087803b15801561322d57600080fd5b505af1158015613241573d6000803e3d6000fd5b505050506040513d602081101561325757600080fd5b5050601d80546127108784020401905561326f61423a565b6127108581038202049695505050505050565b60408051600280825260608083018452600093849391929060208301908036833701905050905086816000815181106132b757fe5b60200260200101906001600160a01b031690816001600160a01b031681525050846001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b15801561331057600080fd5b505afa158015613324573d6000803e3d6000fd5b505050506040513d602081101561333a57600080fd5b505181518290600190811061334b57fe5b60200260200101906001600160a01b031690816001600160a01b031681525050600080866001600160a01b031663d06ca61f8b856040518363ffffffff1660e01b81526004018083815260200180602001828103825283818151815260200191508051906020019060200280838360005b838110156133d45781810151838201526020016133bc565b50505050905001935050505060006040518083038186803b1580156133f857600080fd5b505afa15801561340c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561343557600080fd5b8101908080516040519392919084600160201b82111561345457600080fd5b90830190602082018581111561346957600080fd5b82518660208202830111600160201b8211171561348557600080fd5b82525081516020918201928201910280838360005b838110156134b257818101518382015260200161349a565b505050509050016040525050506000815181106134cb57fe5b6020026020010151905061271086612710038202816134e657fe5b049150506060866001600160a01b03166318cbafe58b84868c426040518663ffffffff1660e01b81526004018086815260200185815260200180602001846001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b83811015613570578181015183820152602001613558565b505050509050019650505050505050600060405180830381600087803b15801561359957600080fd5b505af11580156135ad573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156135d657600080fd5b8101908080516040519392919084600160201b8211156135f557600080fd5b90830190602082018581111561360a57600080fd5b82518660208202830111600160201b8211171561362657600080fd5b82525081516020918201928201910280838360005b8381101561365357818101518382015260200161363b565b5050505090500160405250505090508060008151811061366f57fe5b602002602001015160001415801561369c57508060018151811061368f57fe5b6020026020010151600014155b6136e4576040805162461bcd60e51b815260206004820152601460248201527339bbb0b822bc30b1ba22aa24103330b4b632b21760611b604482015290519081900360640190fd5b806000815181106136f157fe5b60200260200101518160018151811061370657fe5b6020026020010151945094505050509550959350505050565b60006110ee600283614323565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061376582611e50565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006137a98261371f565b6137e45760405162461bcd60e51b815260040180806020018281038252602c81526020018061530d602c913960400191505060405180910390fd5b60006137ef83611e50565b9050806001600160a01b0316846001600160a01b0316148061382a5750836001600160a01b031661381f84611364565b6001600160a01b0316145b8061383a575061383a8185612bf4565b949350505050565b61384b8261371f565b6138865760405162461bcd60e51b815260040180806020018281038252602c815260200180615651602c913960400191505060405180910390fd5b6000828152600860209081526040909120825161149c92840190614d68565b60006110ee8261432f565b826001600160a01b03166138c382611e50565b6001600160a01b0316146139085760405162461bcd60e51b81526004018080602001828103825260298152602001806156f06029913960400191505060405180910390fd5b6001600160a01b03821661394d5760405162461bcd60e51b815260040180806020018281038252602481526020018061529a6024913960400191505060405180910390fd5b61395883838361149c565b613963600082613730565b6001600160a01b03831660009081526001602052604090206139859082614333565b506001600160a01b03821660009081526001602052604090206139a8908261433f565b506139b56002828461434b565b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006116388383614361565b60145460009081805b600b54811015613a9b5760008181526010602052604090205460ff16151560011415613a9357613a40816143c5565b6000828152600f60205260409020549092508211613a5f576000613a71565b6000818152600f602052604090205482035b9350601a54841115613a93576000818152600f60205260409020829055918301915b600101613a11565b505060145550565b611509828260405180602001604052806000815250614467565b604080516002808252606080830184526000938493919290602083019080368337019050509050846001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b158015613b1d57600080fd5b505afa158015613b31573d6000803e3d6000fd5b505050506040513d6020811015613b4757600080fd5b505181518290600090613b5657fe5b60200260200101906001600160a01b031690816001600160a01b0316815250508681600181518110613b8457fe5b60200260200101906001600160a01b031690816001600160a01b031681525050600080866001600160a01b031663d06ca61f8b856040518363ffffffff1660e01b81526004018083815260200180602001828103825283818151815260200191508051906020019060200280838360005b83811015613c0d578181015183820152602001613bf5565b50505050905001935050505060006040518083038186803b158015613c3157600080fd5b505afa158015613c45573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015613c6e57600080fd5b8101908080516040519392919084600160201b821115613c8d57600080fd5b908301906020820185811115613ca257600080fd5b82518660208202830111600160201b82111715613cbe57600080fd5b82525081516020918201928201910280838360005b83811015613ceb578181015183820152602001613cd3565b50505050905001604052505050600081518110613d0457fe5b602002602001015190506127108661271003820281613d1f57fe5b049150506060866001600160a01b0316637ff36ab58b84868c42610168016040518663ffffffff1660e01b81526004018085815260200180602001846001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b83811015613da7578181015183820152602001613d8f565b50505050905001955050505050506000604051808303818588803b158015613dce57600080fd5b505af1158015613de2573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f1916820160405260208110156135d657600080fd5b602254601e546040805163095ea7b360e01b81526001600160a01b039283166004820152602481018590529051919092169163095ea7b39160448083019260209291908290030181600087803b158015613e6557600080fd5b505af1158015613e79573d6000803e3d6000fd5b505050506040513d6020811015613e8f57600080fd5b5050601e546040805163b6b55f2560e01b81526004810184905290516001600160a01b039092169163b6b55f259160248082019260009290919082900301818387803b158015613ede57600080fd5b505af1158015613ef2573d6000803e3d6000fd5b5050505050565b6000808080613f0886866144b9565b9097909650945050505050565b600061383a848484614534565b613f2d8484846138b0565b613f39848484846145fe565b6125605760405162461bcd60e51b815260040180806020018281038252603281526020018061517e6032913960400191505060405180910390fd5b606080613f8c84600a0a8681613f8657fe5b04612d64565b90506060613fad848603600a0a86600a0a8881613fa557fe5b0681613f8657fe5b905081816040516020018083805190602001908083835b60208310613fe35780518252601f199092019160209182019101613fc4565b6001836020036101000a03801982511681845116808217855250505050505090500180601760f91b81525060010182805190602001908083835b6020831061403c5780518252601f19909201916020918201910161401d565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052925050509392505050565b601e54604080516370a0823160e01b8152306004820152905160009260019284926001600160a01b03909216916370a0823191602480820192602092909190829003018186803b1580156140cf57600080fd5b505afa1580156140e3573d6000803e3d6000fd5b505050506040513d60208110156140f957600080fd5b50516000858152600f6020526040902054601454919250901561412b5760145481848402028161412557fe5b0461412e565b60005b95945050505050565b60408051606081018252818152600091829182918291601089901b600889901b17871791603f601284901c811692600c85901c821692600686901c831692861691906153fa6020830139848151811061418c57fe5b602001015160f81c60f81b98506040518060600160405280604081526020016153fa6040913983815181106141bd57fe5b602001015160f81c60f81b97506040518060600160405280604081526020016153fa6040913982815181106141ee57fe5b602001015160f81c60f81b96506040518060600160405280604081526020016153fa60409139818151811061421f57fe5b602001015160f81c60f81b9550505050505093509350935093565b601d80546000909155601b54811115611e4d57614255614766565b601c5460408051712932b632b0b9b4b73390383937b334ba399760711b815290516000926001600160a01b031691849160128083019286929190829003018185875af1925050503d80600081146142c8576040519150601f19603f3d011682016040523d82523d6000602084013e6142cd565b606091505b5050905080611509576040805162461bcd60e51b815260206004820152601a60248201527f436f756c64206e6f742072656c656173652070726f666974732e000000000000604482015290519081900360640190fd5b600061163883836148e9565b5490565b60006116388383614901565b600061163883836149c7565b600061383a84846001600160a01b038516614a11565b815460009082106143a35760405162461bcd60e51b815260040180806020018281038252602281526020018061500f6022913960400191505060405180910390fd5b8260000182815481106143b257fe5b9060005260206000200154905092915050565b6000818152600f6020908152604080832054601e5482516370a0823160e01b81523060048201529251919385936001600160a01b03909216926370a08231926024808201939291829003018186803b15801561442057600080fd5b505afa158015614434573d6000803e3d6000fd5b505050506040513d602081101561444a57600080fd5b50516014549091506000901561412b576014548284028161412557fe5b6144718383614aa8565b61447e60008484846145fe565b61149c5760405162461bcd60e51b815260040180806020018281038252603281526020018061517e6032913960400191505060405180910390fd5b8154600090819083106144fd5760405162461bcd60e51b81526004018080602001828103825260228152602001806155c26022913960400191505060405180910390fd5b600084600001848154811061450e57fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b600082815260018401602052604081205482816145cf5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561459457818101518382015260200161457c565b50505050905090810190601f1680156145c15780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b508460000160018203815481106145e257fe5b9060005260206000209060020201600101549150509392505050565b6000614612846001600160a01b0316614bd6565b61461e5750600161383a565b606061472c630a85bd0160e11b61463361372c565b88878760405160240180856001600160a01b03168152602001846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561469a578181015183820152602001614682565b50505050905090810190601f1680156146c75780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b03838183161783525050505060405180606001604052806032815260200161517e603291396001600160a01b0388169190614bdc565b9050600081806020019051602081101561474557600080fd5b50516001600160e01b031916630a85bd0160e11b1492505050949350505050565b601e54604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156147b157600080fd5b505afa1580156147c5573d6000803e3d6000fd5b505050506040513d60208110156147db57600080fd5b5051601454601d549192506000918302816147f257fe5b601d805460148054919091039055600090819055601e5460408051632e1a7d4d60e01b8152949093046004850181905292519294506001600160a01b031692632e1a7d4d926024808301939282900301818387803b15801561485357600080fd5b505af1158015614867573d6000803e3d6000fd5b50506022546040805163a9059cbb60e01b81523360048201526024810186905290516001600160a01b03909216935063a9059cbb92506044808201926020929091908290030181600087803b1580156148bf57600080fd5b505af11580156148d3573d6000803e3d6000fd5b505050506040513d602081101561256057600080fd5b60009081526001919091016020526040902054151590565b600081815260018301602052604081205480156149bd578354600019808301919081019060009087908390811061493457fe5b906000526020600020015490508087600001848154811061495157fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061498157fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506110ee565b60009150506110ee565b60006149d383836148e9565b614a09575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556110ee565b5060006110ee565b600082815260018401602052604081205480614a76575050604080518082018252838152602080820184815286546001818101895560008981528481209551600290930290950191825591519082015586548684528188019092529290912055611638565b82856000016001830381548110614a8957fe5b9060005260206000209060020201600101819055506000915050611638565b6001600160a01b038216614b03576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b614b0c8161371f565b15614b5e576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b614b6a6000838361149c565b6001600160a01b0382166000908152600160205260409020614b8c908261433f565b50614b996002828461434b565b5060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b3b151590565b606061383a848460008585614bf085614bd6565b614c41576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310614c805780518252601f199092019160209182019101614c61565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114614ce2576040519150601f19603f3d011682016040523d82523d6000602084013e614ce7565b606091505b5091509150614cf7828286614d02565b979650505050505050565b60608315614d11575081611638565b825115614d215782518084602001fd5b60405162461bcd60e51b815260206004820181815284516024840152845185939192839260440191908501908083836000831561459457818101518382015260200161457c565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10614da957805160ff1916838001178555614dd6565b82800160010185558215614dd6579182015b82811115614dd6578251825591602001919060010190614dbb565b50614de2929150614de6565b5090565b5b80821115614de25760008155600101614de756fe25334372656374207374796c65203d20276f7061636974793a302e363b6d69782d626c656e642d6d6f64653a6e6f726d616c3b66696c6c3a6e6f6e653b7374726f6b653a2532333062393130303b7374726f6b652d77696474683a31353b7374726f6b652d6c696e656a6f696e3a6d697465723b7374726f6b652d6d697465726c696d69743a343b7374726f6b652d6461736861727261793a6e6f6e653b7374726f6b652d6f7061636974793a313b7061696e742d6f726465723a6e6f726d616c27206964203d20277265637439323627207769647468203d20273331352720686569676874203d2027333135272078203d20273137272079203d2027313727202f2533452025334372656374207374796c65203d20276f7061636974793a302e33333b6d69782d626c656e642d6d6f64653a6e6f726d616c3b66696c6c3a6e6f6e653b7374726f6b653a2532333062393130303b7374726f6b652d77696474683a312e38323439363b7374726f6b652d6c696e656a6f696e3a6d697465723b7374726f6b652d6d697465726c696d69743a343b7374726f6b652d6461736861727261793a6e6f6e653b7374726f6b652d6f7061636974793a313b7061696e742d6f726465723a6e6f726d616c27206964203d2027726563743932362d3427207769647468203d20273238382720686569676874203d2027323838272078203d20273331272079203d2027333127202f253345456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64732533437465787420783d2733352720793d273630272020666f6e742d7765696768743d27626f6c64272066696c6c3d2762726f776e27253345537472696b652050726963653a2533432f746578742533452533437465787420783d2733352720793d273735272020666f6e742d7765696768743d27626f6c64272066696c6c3d2762726f776e272533455553444320496e7665737465643a2533432f7465787425334525334373766720786d6c6e733d27687474703a2f2f7777772e77332e6f72672f323030302f737667272077696474683d2733353027206865696768743d273335302725334520253343726563742077696474683d2733353027206865696768743d2733353027207374796c653d2766696c6c3a726762283235352c3235352c323535293b7374726f6b652d77696474683a333b7374726f6b653a72676228302c302c302927202f2533454552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e74657250657263656e742058206d75737420636f6e666f726d20746f3a203130203c3d2058203c203130304f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573732533437465787420783d273530252720793d2732332720746578742d616e63686f723d276d6964646c652720666f6e742d7765696768743d27626f6c642720666f6e742d73697a653d27312e31656d272066696c6c3d277768697465272533452533437465787420783d273137352720793d2737352720666f6e742d7765696768743d276e6f726d616c272066696c6c3d2762726f776e27253345244552433732313a207472616e7366657220746f20746865207a65726f206164647265737327207374726f6b653d2727207374726f6b652d77696474683d2730272066696c6c3d27677265656e27202f253345616c726561647920696e2070726f63657373206f6620627579696e67206469702e4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e253343636972636c65207374796c653d2766696c6c3a2532336666666666663b7374726f6b653a2532333030303030303b7374726f6b652d77696474683a343b7374726f6b652d6c696e656a6f696e3a726f756e643b7374726f6b652d6d697465726c696d69743a343b7374726f6b652d6461736861727261793a6e6f6e653b7374726f6b652d6f7061636974793a302e3332272069643d27706174683834362d35272063783d27313735272063793d273230302720723d27383027202f2533454142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392d5f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373253343636972636c65207374796c653d2766696c6c3a2532336666666666663b7374726f6b653a2532333030343562623b7374726f6b652d77696474683a312e33383b7374726f6b652d6c696e656a6f696e3a726f756e643b7374726f6b652d6f7061636974793a313b7374726f6b652d6d697465726c696d69743a343b7374726f6b652d6461736861727261793a6e6f6e65272069643d2770617468383436272063783d27313735272063793d273230302720723d2731303027202f253345204552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e2533437465787420783d273137352720793d2734352720666f6e742d7765696768743d276e6f726d616c272066696c6c3d2762726f776e2725334524456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e2c207b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a20224469702056616c7565222c202276616c7565223a204552433732314d657461646174613a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e7b226465736372697074696f6e223a2022546865204e4654206c696d6974206f726465722074686174206561726e73206d6f6e657921222533437465787420783d273137352720793d2736302720666f6e742d7765696768743d276e6f726d616c272066696c6c3d2762726f776e27253345244552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e253343636972636c65207374796c653d2766696c6c3a2532336666666666663b7374726f6b653a2532333030343562623b7374726f6b652d77696474683a312e33383b7374726f6b652d6c696e656a6f696e3a726f756e643b7374726f6b652d6f7061636974793a313b7374726f6b652d6d697465726c696d69743a343b7374726f6b652d6461736861727261793a6e6f6e65272063783d27313735272063793d273230302720723d2731303027202f253345204552433732313a20617070726f76616c20746f2063757272656e74206f776e65722c202265787465726e616c5f75726c223a202268747470733a2f2f77656275797468656469702e636f6d222533437465787420783d273137352720793d2739302720666f6e742d7765696768743d276e6f726d616c272066696c6c3d2762726f776e2725334525334372656374207374796c653d276f7061636974793a302e33333b66696c6c3a2532333135373730303b66696c6c2d6f7061636974793a302e33333b7374726f6b653a2532333062393130303b7374726f6b652d77696474683a313b7374726f6b652d6c696e656361703a726f756e643b7374726f6b652d6c696e656a6f696e3a726f756e643b7374726f6b652d6d697465726c696d69743a343b7374726f6b652d6461736861727261793a6e6f6e653b7374726f6b652d6f7061636974793a313b7061696e742d6f726465723a6e6f726d616c272077696474683d2733353027206865696768743d273335302720783d27302720793d273027202f2533454552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665642533437465787420783d2733352720793d2739302720666f6e742d7765696768743d27626f6c64272066696c6c3d2762726f776e27253345456e657267793a2533432f746578742533452533437465787420783d2733352720793d2734352720666f6e742d7765696768743d27626f6c64272066696c6c3d2762726f776e2725334543757272656e742050726963653a2533432f7465787425334525334370617468207374796c653d2766696c6c3a6e6f6e653b7374726f6b653a2532336666666666663b7374726f6b652d77696474683a31353b7374726f6b652d6c696e656361703a726f756e643b7374726f6b652d6c696e656a6f696e3a726f756e643b7374726f6b652d6d697465726c696d69743a343b7374726f6b652d6f7061636974793a312720643d276d203133392c3231382032302e342c32332e372035362e392c2d35362e3627202f253345202533437465787420783d2735352720793d27333138272066696c6c3d2762726f776e27253345436f6e67726174756c6174696f6e732120596f7520626f7567687420746865206469702e202533432f746578742533452533437465787420783d273530252720793d273333382720746578742d616e63686f723d276d6964646c652720666f6e742d7765696768743d27626f6c642720666f6e742d73697a653d27312e31656d272066696c6c3d2777686974652725334520455448455245554d202533432f74657874253345253343636972636c65207374796c653d2766696c6c3a2532336666666666663b7374726f6b653a2532333030303030303b7374726f6b652d77696474683a343b7374726f6b652d6c696e656a6f696e3a726f756e643b7374726f6b652d6d697465726c696d69743a343b7374726f6b652d6461736861727261793a6e6f6e653b7374726f6b652d6f7061636974793a302e3332272063783d27313735272063793d273230302720723d27383027202f2533452c202261747472696275746573223a205b7b22646973706c61795f74797065223a20226e756d626572222c202274726169745f74797065223a2022446970204c6576656c222c202276616c7565223a20a2646970667358221220a5fc0d345f779207057de6e9ce38c2c99baf14e2cafe95a5fda80ddaf5b5531664736f6c634300060c0033",
  "deployedSourceMap": "16451:31254:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25998:31;;;26007:10;25998:31;;26019:9;25998:31;;;;;;;;;;;;;;;;;16451:31254;;;;;965:148:1;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;965:148:1;-1:-1:-1;;;;;;965:148:1;;:::i;:::-;;;;;;;;;;;;;;;;;;39828:2357:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;39828:2357:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;39828:2357:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;39828:2357:20;;-1:-1:-1;39828:2357:20;;-1:-1:-1;;;;;39828:2357:20:i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28491:1083;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;28491:1083:20;;:::i;:::-;;4517:98:4;;;;;;;;;;;;;:::i;7222:217::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7222:217:4;;:::i;:::-;;;;-1:-1:-1;;;;;7222:217:4;;;;;;;;;;;;;;6766:395;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6766:395:4;;;;;;;;:::i;16689:52:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16689:52:20;;:::i;:::-;;;;;;;;;;;;;;;;25653:266;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;25653:266:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;25653:266:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;25653:266:20;;-1:-1:-1;25653:266:20;;-1:-1:-1;;;;;25653:266:20:i;6260:208:4:-;;;;;;;;;;;;;:::i;30497:621:20:-;;;;;;;;;;;;;:::i;17020:50::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17020:50:20;;:::i;8086:300:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8086:300:4;;;;;;;;;;;;;;;;;:::i;6029:160::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6029:160:4;;;;;;;;:::i;38647:561:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;38647:561:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;38647:561:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;38647:561:20;;-1:-1:-1;38647:561:20;;-1:-1:-1;;;;;38647:561:20:i;20771:19::-;;;;;;;;;;;;;:::i;17785:29::-;;;;;;;;;;;;;:::i;8452:149:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8452:149:4;;;;;;;;;;;;;;;;;:::i;22118:2330:20:-;;;;;;;;;;;;;;;;-1:-1:-1;22118:2330:20;;;;:::i;30393:98::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;30393:98:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;30393:98:20;;;;;;;;;;-1:-1:-1;30393:98:20;;-1:-1:-1;30393:98:20;-1:-1:-1;30393:98:20;:::i;16763:54::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16763:54:20;;:::i;16591:50::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16591:50:20;;:::i;:::-;;;;;;;;;;;;;;;;;;;39500:321;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;39500:321:20;;;;;;;;;:::i;6540:169:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6540:169:4;;:::i;27960:524:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27960:524:20;-1:-1:-1;;;;;27960:524:20;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27116:681;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27116:681:20;;:::i;4280:175:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4280:175:4;;:::i;5855:95::-;;;;;;;;;;;;;:::i;29988:353:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;29988:353:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;29988:353:20;;;;;;;;;;-1:-1:-1;29988:353:20;;-1:-1:-1;29988:353:20;-1:-1:-1;29988:353:20;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4005:218:4;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4005:218:4;-1:-1:-1;;;;;4005:218:4;;:::i;1717:145:0:-;;;;;;;;;;;;;:::i;24574:1073:20:-;;;;;;;;;;;;;;;;-1:-1:-1;24574:1073:20;;:::i;17258:34::-;;;;;;;;;;;;;:::i;1085:85:0:-;;;;;;;;;;;;;:::i;29581:401:20:-;;;;;;;;;;;;;:::i;4679:102:4:-;;;;;;;;;;;;;:::i;7506:290::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7506:290:4;;;;;;;;;;:::i;39214:279:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;39214:279:20;;;;;;;:::i;8667:282:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8667:282:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8667:282:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8667:282:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8667:282:4;;-1:-1:-1;8667:282:4;;-1:-1:-1;;;;;8667:282:4:i;31124:7516:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;31124:7516:20;;:::i;16526:27::-;;;;;;;;;;;;;:::i;7862:162:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7862:162:4;;;;;;;;;;:::i;2011:240:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2011:240:0;-1:-1:-1;;;;;2011:240:0;;:::i;16927:55:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16927:55:20;;:::i;17137:39::-;;;;;;;;;;;;;:::i;16839:54::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16839:54:20;;:::i;965:148:1:-;-1:-1:-1;;;;;;1073:33:1;;1050:4;1073:33;;;;;;;;;;;;;965:148;;;;:::o;39828:2357:20:-;39915:13;39954:4;40727:27;;;;:17;:27;;;;;;40116:1015;;40461:8;;40727:27;;:30;:41;;;;;;;;;;;;;;;-1:-1:-1;;;40727:41:20;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;40727:41:20;;;;40924:27;;;;:17;:27;;;;;;40910:43;;:8;:43::i;:::-;40191:892;;;;;;;;;;;;;;;;;;-1:-1:-1;;;40191:892:20;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;40191:892:20;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;40191:892:20;;;;;;;;;;;;;;-1:-1:-1;;;40191:892:20;;;;;-1:-1:-1;;;;40191:892:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;40191:892:20;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;40191:892:20;;;;;;;;;;;;;;-1:-1:-1;;;40191:892:20;;;;;-1:-1:-1;40191:892:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;40191:892:20;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;40191:892:20;;;;;;;;;;;;;;-1:-1:-1;;;40191:892:20;;;;;-1:-1:-1;;;;40191:892:20;;;;-1:-1:-1;;;40191:892:20;;;;;;;;;;-1:-1:-1;;40191:892:20;;;;;;;;;;-1:-1:-1;40116:13:20;;-1:-1:-1;;;40116:1015:20:i;:::-;40025:1124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;40025:1124:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;39994:1169;;;39828:2357;;;;;:::o;28491:1083::-;28620:16:::1;:14;:16::i;:::-;28589:27;::::0;;;:17:::1;:27;::::0;;;;;:47:::1;;28581:80;;;::::0;;-1:-1:-1;;;28581:80:20;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;28581:80:20;;;;;;;;;;;;;::::1;;28671:22;28696:21;28671:46;;28727:19;28749:61;28773:8;28783:26;;28749:23;:61::i;:::-;28884:17;::::0;28919:6:::1;::::0;28877:63:::1;::::0;;-1:-1:-1;;;28877:63:20;;-1:-1:-1;;;;;28919:6:20;;::::1;28877:63;::::0;::::1;::::0;;;;;;;;;28727:83;;-1:-1:-1;28884:17:20;::::1;::::0;28877:33:::1;::::0;:63;;;;;::::1;::::0;;;;;;;;;28884:17:::1;::::0;28877:63;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;;29043:17:20::1;::::0;28951:15:::1;::::0;;;28992:110:::1;::::0;29030:11;;-1:-1:-1;;;;;29043:17:20::1;29062;29070:8:::0;29062:7:::1;:17::i;:::-;29081:6;::::0;29089:12:::1;::::0;-1:-1:-1;;;;;29081:6:20;;::::1;::::0;28992:37:::1;:110::i;:::-;29118:51;::::0;;;;;29153:15:::1;29118:51;::::0;::::1;::::0;;;28950:152;;-1:-1:-1;28950:152:20;;-1:-1:-1;29118:51:20::1;::::0;;;;;;;::::1;29215:5;29179:33:::0;;;:23:::1;:33;::::0;;;;;;;:41;;-1:-1:-1;;29179:41:20::1;::::0;;29234:17:::1;:27:::0;;;;;;29264:1:::1;29179:41;29234:27:::0;;::::1;:31;29230:74;;;29269:27;::::0;;;:17:::1;:27;::::0;;;;:32;;::::1;::::0;;::::1;29300:1;29269:32;;-1:-1:-1::0;;29269:32:20;;::::1;;::::0;;29230:74:::1;-1:-1:-1::0;;;29419:27:20::1;::::0;;;-1:-1:-1;29314:15:20::1;29419:27;29314:25:::0;29419:27;29314:25;;29411:5:::1;29534:33:::0;;28491:1083::o;4517:98:4:-;4603:5;4596:12;;;;;;;;-1:-1:-1;;4596:12:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4571:13;;4596:12;;4603:5;;4596:12;;4603:5;4596:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4517:98;:::o;7222:217::-;7298:7;7325:16;7333:7;7325;:16::i;:::-;7317:73;;;;-1:-1:-1;;;7317:73:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7408:24:4;;;;:15;:24;;;;;;-1:-1:-1;;;;;7408:24:4;;7222:217::o;6766:395::-;6846:13;6862:23;6877:7;6862:14;:23::i;:::-;6846:39;;6909:5;-1:-1:-1;;;;;6903:11:4;:2;-1:-1:-1;;;;;6903:11:4;;;6895:57;;;;-1:-1:-1;;;6895:57:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6987:5;-1:-1:-1;;;;;6971:21:4;:12;:10;:12::i;:::-;-1:-1:-1;;;;;6971:21:4;;:69;;;;6996:44;7020:5;7027:12;:10;:12::i;:::-;6996:23;:44::i;:::-;6963:159;;;;-1:-1:-1;;;6963:159:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7133:21;7142:2;7146:7;7133:8;:21::i;:::-;6766:395;;;:::o;16689:52:20:-;;;;;;;;;;;;;:::o;25653:266::-;25754:41;25773:12;:10;:12::i;:::-;25787:7;25754:18;:41::i;:::-;25733:137;;;;-1:-1:-1;;;25733:137:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25880:32;25893:7;25902:9;25880:12;:32::i;:::-;25653:266;;:::o;6260:208:4:-;6321:7;6440:21;:12;:19;:21::i;:::-;6433:28;;6260:208;:::o;30497:621:20:-;30559:15;30543:13;:31;30675:19;30697:16;:14;:16::i;:::-;30675:38;;30728:9;30724:388;30742:12;;30740:1;:14;30724:388;;;30777:26;;;;:23;:26;;;;;;;;:34;;:26;:34;30773:329;;;30835:20;;;;:17;:20;;;;;;:35;-1:-1:-1;30831:94:20;;30894:12;30904:1;30894:9;:12::i;:::-;30773:329;;;31002:10;;30979:20;;;;:17;:20;;;;;;:33;30974:114;;;31049:20;;;;:17;:20;;;;;;31036:10;:33;30974:114;30755:3;;30724:388;;17020:50;;;;;;;;;;;;;:::o;8086:300:4:-;8245:41;8264:12;:10;:12::i;:::-;8278:7;8245:18;:41::i;:::-;8237:103;;;;-1:-1:-1;;;8237:103:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8351:28;8361:4;8367:2;8371:7;8351:9;:28::i;6029:160::-;-1:-1:-1;;;;;6152:20:4;;6126:7;6152:20;;;:13;:20;;;;;:30;;6176:5;6152:23;:30::i;:::-;6145:37;6029:160;-1:-1:-1;;;6029:160:4:o;38647:561:20:-;38764:52;;;;;;;;;;;;;;;;;38854:31;;;;;;;;;;;-1:-1:-1;;;38854:31:20;;;;;;38913:29;;38710:13;;-1:-1:-1;;38854:31:20;;38938:3;;38913:29;;;;;;38854:31;38913:29;38854:31;38913:29;;;;;;;;;;-1:-1:-1;;38913:29:20;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;38913:29:20;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;38913:29:20;;;;;;;;;;;;;-1:-1:-1;;38913:29:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;38899:44;;;;;;39158:42;;;;;;;;;;-1:-1:-1;;39158:42:20;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;39158:42:20;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;39158:42:20;;;;;;;;;;;;;-1:-1:-1;;39158:42:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;39144:57;;;;;38647:561;;;:::o;20771:19::-;;;-1:-1:-1;;;;;20771:19:20;;:::o;17785:29::-;;;-1:-1:-1;;;;;17785:29:20;;:::o;8452:149:4:-;8555:39;8572:4;8578:2;8582:7;8555:39;;;;;;;;;;;;:16;:39::i;22118:2330:20:-;22197:7;22251:14;;22240:7;;22228:9;:19;:37;;22219:74;;;;;-1:-1:-1;;;22219:74:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;22329:3;22315:11;:17;;;22307:70;;;;-1:-1:-1;;;22307:70:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22426:19;:17;:19::i;:::-;22488:7;;22460:24;:35;;;;;;;22551:12;;;-1:-1:-1;22592:16:20;;22577:31;;;22622:32;22632:10;22551:12;22622:9;:32::i;:::-;22700:1;22669:28;;;:17;:28;;;;;:32;;-1:-1:-1;;22669:32:20;;;22787:3;22768:16;:14;:16::i;:::-;22753:11;22747:3;:17;22746:38;;;:44;;;;;22715:28;;;;:17;:28;;;;;;;;22746:44;;;;22715:75;;;22804:19;:30;;;;;:44;;;;;23027:17;;23061:6;;23069:12;;22983:99;;23016:9;;-1:-1:-1;;;;;23027:17:20;;;;23054:4;;23061:6;;;;22983:32;:99::i;:::-;22950:132;;;23174:7;;23162:9;:19;23141:18;23129:9;:30;:53;;;;;23096:30;;;;:19;:30;;;;;23129:53;;;23096:86;;23267:7;;23255:9;:19;;;23224:28;;23255:19;23224:51;;;;23196:24;:79;;23224:51;;;;23196:79;;;;;-1:-1:-1;23298:30:20;;;:19;:30;;;;;;23290:71;;;;;-1:-1:-1;;;23290:71:20;;;;;;;;;;;;-1:-1:-1;;;23290:71:20;;;;;;;;;;;;;;;23449:30;;;;:19;:30;;;;;;23434:46;;:14;:46::i;:::-;23572:10;;23541:28;;;;:17;:28;;;;;;:41;23538:119;;;23614:28;;;;:17;:28;;;;;;23601:10;:41;23538:119;23671:15;:37;;;;;;:15;23756:34;;;:23;:34;;;;;:41;;-1:-1:-1;;23756:41:20;-1:-1:-1;23756:41:20;;;23813:44;23780:9;23837:19;23780:9;23837:8;:19::i;:::-;23813:12;:44::i;:::-;23875:9;23886:1;23875:12;23872:516;;;24354:19;:17;:19::i;:::-;22118:2330;;;;;:::o;16763:54::-;;;;;;;;;;;;;:::o;16591:50::-;;;;;;;;;;;;;;;:::o;39500:321::-;1308:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;39620:1:20::1;39608:9;:13;;;39583:60;;;::::0;;-1:-1:-1;;;39583:60:20;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;39583:60:20;;;;;;;;;;;;;::::1;;39672:12;;39661:8;:23;39653:51;;;::::0;;-1:-1:-1;;;39653:51:20;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;39653:51:20;;;;;;;;;;;;;::::1;;39775:27;::::0;;;:17:::1;:27;::::0;;;;;:39;;-1:-1:-1;;39775:39:20::1;;::::0;;::::1;::::0;;;::::1;::::0;;39500:321::o;6540:169:4:-;6615:7;;6656:22;:12;6672:5;6656:15;:22::i;:::-;-1:-1:-1;6634:44:4;6540:169;-1:-1:-1;;;6540:169:4:o;27960:524:20:-;28023:16;28050:13;28080:9;28076:122;28094:12;;28092:1;:14;28076:122;;;28140:5;-1:-1:-1;;;;;28128:17:20;:10;28136:1;28128:7;:10::i;:::-;-1:-1:-1;;;;;28128:17:20;;28125:63;;;28172:1;28164:9;;;;28125:63;28107:3;;28076:122;;;;28208:22;28247:5;28233:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;28233:20:20;;28208:45;;28263:13;28293:9;28289:166;28307:12;;28305:1;:14;28289:166;;;28348:5;28341;:12;28338:26;;28356:5;;28338:26;28392:5;-1:-1:-1;;;;;28380:17:20;:10;28388:1;28380:7;:10::i;:::-;-1:-1:-1;;;;;28380:17:20;;28377:68;;;28429:1;28416:5;28422;28416:12;;;;;;;;;;;;;:14;;;;;28377:68;28320:3;;28289:166;;;-1:-1:-1;28472:5:20;;27960:524;-1:-1:-1;;;;27960:524:20:o;27116:681::-;27199:17;27207:8;27199:7;:17::i;:::-;-1:-1:-1;;;;;27185:31:20;:10;-1:-1:-1;;;;;27185:31:20;;27177:64;;;;;-1:-1:-1;;;27177:64:20;;;;;;;;;;;;-1:-1:-1;;;27177:64:20;;;;;;;;;;;;;;;27286:16;:14;:16::i;:::-;27255:27;;;;:17;:27;;;;;;:47;27251:540;;27317:19;27327:8;27317:9;:19::i;:::-;27251:540;;;27454:19;27476:60;27500:8;27510:25;;27476:23;:60::i;:::-;27558:17;;27593:6;;27551:63;;;-1:-1:-1;;;27551:63:20;;-1:-1:-1;;;;;27593:6:20;;;27551:63;;;;;;;;;;;;27454:82;;-1:-1:-1;27558:17:20;;;27551:33;;:63;;;;;;;;;;;;;;;27558:17;;27551:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;27721:17:20;;27629:15;;;;27670:110;;27708:11;;-1:-1:-1;;;;;27721:17:20;27740;27748:8;27740:7;:17::i;27670:110::-;-1:-1:-1;;;;;27251:540:20;27116:681;:::o;4280:175:4:-;4352:7;4378:70;4395:7;4378:70;;;;;;;;;;;;;;;;;:12;;:70;:16;:70::i;5855:95::-;5935:8;5928:15;;;;;;;;-1:-1:-1;;5928:15:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5903:13;;5928:15;;5935:8;;5928:15;;5935:8;5928:15;;;;;;;;;;;;;;;;;;;;;;;;29988:353:20;30068:17;30087:12;30180:8;30163:13;;30145:15;:31;30144:44;:78;;;;;30206:16;:14;:16::i;:::-;30192:10;;:30;;30144:78;30129:93;;29988:353;;;;;:::o;4005:218:4:-;4077:7;-1:-1:-1;;;;;4104:19:4;;4096:74;;;;-1:-1:-1;;;4096:74:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4187:20:4;;;;;;:13;:20;;;;;:29;;:27;:29::i;1717:145:0:-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1807:6:::1;::::0;1786:40:::1;::::0;1823:1:::1;::::0;-1:-1:-1;;;;;1807:6:0::1;::::0;1786:40:::1;::::0;1823:1;;1786:40:::1;1836:6;:19:::0;;-1:-1:-1;;;;;;1836:19:0::1;::::0;;1717:145::o;24574:1073:20:-;24631:7;24766:14;;24753:9;:27;;24744:68;;;;;-1:-1:-1;;;24744:68:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;24830:33;;;;:23;:33;;;;;;;;:42;24822:88;;;;-1:-1:-1;;;24822:88:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24921:19;:17;:19::i;:::-;25040:3;25021:16;:14;:16::i;:::-;24988:29;;;;:19;:29;;;;;;24982:3;:35;24981:56;:62;;;;;24951:27;;;;:17;:27;;;;;24981:62;;;24951:92;;25053:42;24969:8;25076:18;24969:8;25076;:18::i;25053:42::-;25186:17;;25220:6;;25228:12;;25142:99;;25175:9;;-1:-1:-1;;;;;25186:17:20;;;;25213:4;;25220:6;;;;25142:32;:99::i;:::-;25109:29;;;;:19;:29;;;;;25106:135;;;25259:33;;;-1:-1:-1;25251:70:20;;;;;-1:-1:-1;;;25251:70:20;;;;;;;;;;;;-1:-1:-1;;;25251:70:20;;;;;;;;;;;;;;;25347:29;;;;:19;:29;;;;;;25332:45;;:14;:45::i;:::-;25407:29;;;;:19;:29;;;;;;;;;25388:15;:48;;;;;;;25446:23;:33;;;;;:40;;-1:-1:-1;;25446:40:20;-1:-1:-1;25446:40:20;;;25530:10;;25500:17;:27;;;;;;;:40;25497:109;;;25568:27;;;;:17;:27;;;;;;;25555:10;:40;24574:1073;:::o;17258:34::-;;;;:::o;1085:85:0:-;1157:6;;-1:-1:-1;;;;;1157:6:0;1085:85;:::o;29581:401:20:-;29628:7;29661:14;29689:9;29712:14;29740;29768:22;29803:9;;;;;;;;;-1:-1:-1;;;;;29803:9:20;-1:-1:-1;;;;;29803:25:20;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;29803:27:20;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;29803:27:20;;-1:-1:-1;29803:27:20;-1:-1:-1;29803:27:20;;-1:-1:-1;29803:27:20;-1:-1:-1;29908:13:20;29900:44;;;;;-1:-1:-1;;;29900:44:20;;;;;;;;;;;;-1:-1:-1;;;29900:44:20;;;;;;;;;;;;;;;-1:-1:-1;29969:5:20;;-1:-1:-1;;;;29581:401:20;:::o;4679:102:4:-;4767:7;4760:14;;;;;;;;-1:-1:-1;;4760:14:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4735:13;;4760:14;;4767:7;;4760:14;;4767:7;4760:14;;;;;;;;;;;;;;;;;;;;;;;;7506:290;7620:12;:10;:12::i;:::-;-1:-1:-1;;;;;7608:24:4;:8;-1:-1:-1;;;;;7608:24:4;;;7600:62;;;;;-1:-1:-1;;;7600:62:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;7718:8;7673:18;:32;7692:12;:10;:12::i;:::-;-1:-1:-1;;;;;7673:32:4;;;;;;;;;;;;;;;;;-1:-1:-1;7673:32:4;;;:42;;;;;;;;;;;;:53;;-1:-1:-1;;7673:53:4;;;;;;;;;;;7756:12;:10;:12::i;:::-;-1:-1:-1;;;;;7741:48:4;;7780:8;7741:48;;;;;;;;;;;;;;;;;;;;7506:290;;:::o;39214:279:20:-;39352:25;;;;:15;:25;;;;;;39341:36;;;39333:70;;;;;-1:-1:-1;;;39333:70:20;;;;;;;;;;;;-1:-1:-1;;;39333:70:20;;;;;;;;;;;;;;;39451:25;;;;:15;:25;;;;;;:35;39214:279::o;8667:282:4:-;8798:41;8817:12;:10;:12::i;8798:41::-;8790:103;;;;-1:-1:-1;;;8790:103:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8903:39;8917:4;8923:2;8927:7;8936:5;8903:13;:39::i;:::-;8667:282;;;;:::o;31124:7516:20:-;31198:13;31231:17;31239:8;31231:7;:17::i;:::-;31223:77;;;;-1:-1:-1;;;31223:77:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31311:19;31333:33;;;:23;:33;;;;;;;;;31396:17;:27;;;;;;31464:17;:27;;;;;;;31333:33;;;;;31396:27;;;;;31520:2;;31573:16;:14;:16::i;:::-;31542:48;;31600:21;31636:14;31631:309;;-1:-1:-1;31682:7:20;31631:309;;;31787:29;;;;:19;:29;;;;;;31781:3;:35;;;;31761:18;;31781:35;31761:56;;;;;31745:12;:73;31744:157;;31897:3;31883:12;31869;31854;:27;31849:3;:33;:46;;;;;;31843:3;:52;31834:7;:62;:66;;;;;;31744:157;;;31822:1;31744:157;31728:173;;31631:309;31949:15;31967:25;;;:15;:25;;;;;;32003:23;32146:4;32130:20;;;;32126:2628;;;33396:23;33405:13;33396:8;:23::i;:::-;32184:1300;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;32184:1300:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32165:1320;;32126:2628;;;34090:23;34099:13;34090:8;:23::i;:::-;33565:1177;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;33565:1177:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;33546:1197;;32126:2628;34764:17;36113:41;36130:16;:14;:16::i;:::-;36149:1;36152;36113:8;:41::i;:::-;36374:37;36391:12;36406:1;36409;36374:8;:37::i;:::-;34791:1799;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;34791:1799:20;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;34791:1799:20;;;;;;;;;;;;;;-1:-1:-1;;;34791:1799:20;;;;;-1:-1:-1;34791:1799:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;34791:1799:20;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;34791:1799:20;;;;;;;;;;;;;;-1:-1:-1;;;34791:1799:20;;;;;-1:-1:-1;34791:1799:20;;;;;;;;;;;;;;;;;;;;;;;;34764:1827;;36693:3;36922:40;36931:24;36946:8;36931:14;:24::i;:::-;36957:1;36960;36922:8;:40::i;:::-;37170:17;37179:7;37170:8;:17::i;:::-;37885:27;37902:8;37885;:27::i;:::-;38176:9;36676:1606;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;36676:1606:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;36676:1606:20;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;36676:1606:20;;;;;;;;;;;;;;-1:-1:-1;;;36676:1606:20;;;;;-1:-1:-1;36676:1606:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;36676:1606:20;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;36676:1606:20;;;;;;;;;;;;;;-1:-1:-1;;;36676:1606:20;;;;;-1:-1:-1;36676:1606:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;36676:1606:20;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;36676:1606:20;;;;;;;;;;;;;;-1:-1:-1;;;36676:1606:20;;;;;-1:-1:-1;36676:1606:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;36676:1606:20;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;36676:1606:20;;;;;;;;;;;;;;-1:-1:-1;;;36676:1606:20;;;;;-1:-1:-1;;;;36676:1606:20;;;;;;;;;;-1:-1:-1;;36676:1606:20;;;;;;;;;;-1:-1:-1;;;38508:1:20;38496:13;;38474:160;;-1:-1:-1;38474:160:20;;-1:-1:-1;;;38474:160:20;38531:44;38546:8;38556:18;38570:3;38556:13;:18::i;:::-;38531:14;:44::i;:::-;38524:51;;;;;;;;;;;;;38474:160;38614:9;;;;;;;;;;;;;;;;;;;;;;;;;16526:27;;;;:::o;7862:162:4:-;-1:-1:-1;;;;;7982:25:4;;;7959:4;7982:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;7862:162::o;2011:240:0:-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2099:22:0;::::1;2091:73;;;;-1:-1:-1::0;;;2091:73:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2200:6;::::0;2179:38:::1;::::0;-1:-1:-1;;;;;2179:38:0;;::::1;::::0;2200:6:::1;::::0;2179:38:::1;::::0;2200:6:::1;::::0;2179:38:::1;2227:6;:17:::0;;-1:-1:-1;;;;;;2227:17:0::1;-1:-1:-1::0;;;;;2227:17:0;;;::::1;::::0;;;::::1;::::0;;2011:240::o;16927:55:20:-;;;;;;;;;;;;;;;:::o;17137:39::-;;;;:::o;16839:54::-;;;;;;;;;;;;;:::o;42567:467::-;42617:27;42660:7;42656:48;;-1:-1:-1;42683:10:20;;;;;;;;;;;;-1:-1:-1;;;42683:10:20;;;;;;42656:48;42722:2;42713:6;42752:66;42759:6;;42752:66;;42781:5;;42805:2;42800:7;;;;42752:66;;;42827:17;42857:3;42847:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;42847:14:20;-1:-1:-1;42827:34:20;-1:-1:-1;;;42880:7:20;;42897:102;42904:7;;42897:102;;42962:2;42957;:7;42952:2;:12;42939:27;;42927:4;42932:3;;;;;;;42927:9;;;;;;;;;;;:39;-1:-1:-1;;;;;42927:39:20;;;;;;;;-1:-1:-1;42986:2:20;42980:8;;;;42897:102;;;-1:-1:-1;43022:4:20;42567:467;-1:-1:-1;;;;42567:467:20:o;279:1055:21:-;338:13;366:16;391:4;366:30;;407:11;434:1;421:3;:10;:14;;;;;;;-1:-1:-1;448:18:21;509:1;498:7;;;497:13;488:1;470:3;:10;483:1;470:14;469:20;;;;;;492:1;469:24;:42;448:63;;522:16;551:10;541:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;541:21:21;;522:40;;575:9;599;625:249;641:3;:10;632:1;636;632:5;:19;625:249;;717:122;749:3;753:1;749:6;;;;;;;;;;;;;;;;743:13;;717:122;;781:3;785:1;787;785:3;781:8;;;;;;;;;;;;;;;;775:15;;717:122;;815:3;819:1;821;819:3;815:8;;;;;;;;;;;;;;717:7;:122::i;:::-;677:3;681:1;677:6;;;;;;;;;;;685:3;689:1;691;689:3;685:8;;;;;;;;;;;695:3;699:1;701;699:3;695:8;;;;;;;;;;;705:3;709:1;711;709:3;705:8;;;;;;;;-1:-1:-1;;;;;;676:163:21;;;;;705:8;;;676:163;-1:-1:-1;;;;;;676:163:21;;;;;;-1:-1:-1;;;;;;676:163:21;;;;;;-1:-1:-1;;;;;;676:163:21;;;;;;-1:-1:-1;;;658:1:21;653:6;;;;;-1:-1:-1;861:1:21;856:6;625:249;;;890:8;;886:410;;915:9;933:3;950;937;:10;:16;933:21;;;;;;;;;;;;;;;-1:-1:-1;970:9:21;1011:1;1004:8;;1000:81;;;1045:3;1062:1;1049:3;:10;:14;1045:19;;;;;;;;;;;;;;;-1:-1:-1;1000:81:21;1098:7;1107;1116;1125;1136:20;1144:3;1136:20;;1149:3;1136:20;;1154:1;1136:7;:20::i;:::-;1097:59;;;;;;;;1180:2;1171:3;1175:1;1171:6;;;;;;;;;;;:11;-1:-1:-1;;;;;1171:11:21;;;;;;;;;1208:2;1197:3;1201:1;1203;1201:3;1197:8;;;;;;;;;;;:13;-1:-1:-1;;;;;1197:13:21;;;;;;;;;1229:3;1236:1;1229:8;1225:60;;;1267:2;1256:3;1260:1;1262;1260:3;1256:8;;;;;;;;;;;:13;-1:-1:-1;;;;;1256:13:21;;;;;;;;;1225:60;886:410;;;;;;;-1:-1:-1;1322:3:21;;279:1055;-1:-1:-1;;;;;;279:1055:21:o;44281:776:20:-;44370:7;44406:29;;;:19;:29;;;;;;;;;44469:5;;:30;;-1:-1:-1;;;44469:30:20;;44493:4;44469:30;;;;;;44406:29;;44370:7;;-1:-1:-1;;;;;44469:5:20;;;;:15;;:30;;;;;44406:29;44469:30;;;;;;:5;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;44469:30:20;44558:15;;44469:30;;-1:-1:-1;44509:21:20;;44533:22;;;44558:15;44533:40;;;;44616:1;44584:29;;;:19;:29;;;;;:33;44645:15;;;:24;;;44627:42;;44719:5;;44533:40;;;;-1:-1:-1;;;;;;44719:5:20;:14;44770:5;44749:19;;;44734:35;;:41;44719:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;44786:4:20;;:71;;;-1:-1:-1;;;44786:71:20;;44808:4;44786:71;;;;44851:5;44830:19;;;44815:35;;:41;44786:71;;;;;;-1:-1:-1;;;;;44786:4:20;;;;-1:-1:-1;44786:13:20;;-1:-1:-1;44786:71:20;;;;;;;;;;;;;;;-1:-1:-1;44786:4:20;:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;44907:24:20;:59;;44961:5;44935:25;;;:31;44907:59;;;44977:16;:14;:16::i;:::-;45047:5;45026:19;;;45011:35;;:41;;44281:776;-1:-1:-1;;;;;;44281:776:20:o;1062:1861::-;1279:16;;;1293:1;1279:16;;;1255:21;1279:16;;;;;1227:7;;;;1255:21;;1293:1;1279:16;;;;;;;;;;-1:-1:-1;1279:16:20;1255:40;;1315:20;1305:4;1310:1;1305:7;;;;;;;;;;;;;:30;-1:-1:-1;;;;;1305:30:20;;;-1:-1:-1;;;;;1305:30:20;;;;;1426:7;-1:-1:-1;;;;;1426:12:20;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1426:14:20;1416:7;;:4;;1421:1;;1416:7;;;;;;;;;;;:24;-1:-1:-1;;;;;1416:24:20;;;-1:-1:-1;;;;;1416:24:20;;;;;2316:26;2400:18;2421:7;-1:-1:-1;;;;;2421:21:20;;2443:11;2456:4;2421:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2421:40:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2421:40:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2421:40:20;;;;;;;;;;;;-1:-1:-1;2421:40:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2462:1;2421:43;;;;;;;;;;;;;;2400:64;;2536:5;2521:13;2513:5;:21;2499:10;:36;:42;;;;;;2478:63;;1062:1861;2562:24;2589:7;-1:-1:-1;;;;;2589:29:20;;2632:11;2657:18;2738:4;2756:2;2772:15;2589:208;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2589:208:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2589:208:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2589:208:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2589:208:20;;;;;;;;;;;;-1:-1:-1;2589:208:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2562:235;;2816:7;2824:1;2816:10;;;;;;;;;;;;;;2830:1;2816:15;;:34;;;;;2840:7;2848:1;2840:10;;;;;;;;;;;;;;2835:1;:15;;2816:34;2808:67;;;;;-1:-1:-1;;;2808:67:20;;;;;;;;;;;;-1:-1:-1;;;2808:67:20;;;;;;;;;;;;;;;2893:7;2901:1;2893:10;;;;;;;;;;;;;;2905:7;2913:1;2905:10;;;;;;;;;;;;;;2885:31;;;;;;;1062:1861;;;;;;;;:::o;10383:125:4:-;10448:4;10471:30;:12;10493:7;10471:21;:30::i;598:104:10:-;685:10;598:104;:::o;16119:180:4:-;16184:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;16184:29:4;-1:-1:-1;;;;;16184:29:4;;;;;;;;:24;;16237:23;16184:24;16237:14;:23::i;:::-;-1:-1:-1;;;;;16228:46:4;;;;;;;;;;;16119:180;;:::o;10666:351::-;10759:4;10783:16;10791:7;10783;:16::i;:::-;10775:73;;;;-1:-1:-1;;;10775:73:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10858:13;10874:23;10889:7;10874:14;:23::i;:::-;10858:39;;10926:5;-1:-1:-1;;;;;10915:16:4;:7;-1:-1:-1;;;;;10915:16:4;;:51;;;;10959:7;-1:-1:-1;;;;;10935:31:4;:20;10947:7;10935:11;:20::i;:::-;-1:-1:-1;;;;;10935:31:4;;10915:51;:94;;;;10970:39;10994:5;11001:7;10970:23;:39::i;:::-;10907:103;10666:351;-1:-1:-1;;;;10666:351:4:o;14438:212::-;14537:16;14545:7;14537;:16::i;:::-;14529:73;;;;-1:-1:-1;;;14529:73:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14612:19;;;;:10;:19;;;;;;;;:31;;;;;;;;:::i;7820:121:11:-;7889:7;7915:19;7923:3;7915:7;:19::i;13707:584:4:-;13831:4;-1:-1:-1;;;;;13804:31:4;:23;13819:7;13804:14;:23::i;:::-;-1:-1:-1;;;;;13804:31:4;;13796:85;;;;-1:-1:-1;;;13796:85:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13917:16:4;;13909:65;;;;-1:-1:-1;;;13909:65:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13985:39;14006:4;14012:2;14016:7;13985:20;:39::i;:::-;14086:29;14103:1;14107:7;14086:8;:29::i;:::-;-1:-1:-1;;;;;14126:19:4;;;;;;:13;:19;;;;;:35;;14153:7;14126:26;:35::i;:::-;-1:-1:-1;;;;;;14171:17:4;;;;;;:13;:17;;;;;:30;;14193:7;14171:21;:30::i;:::-;-1:-1:-1;14212:29:4;:12;14229:7;14238:2;14212:16;:29::i;:::-;;14276:7;14272:2;-1:-1:-1;;;;;14257:27:4;14266:4;-1:-1:-1;;;;;14257:27:4;;;;;;;;;;;13707:584;;;:::o;9250:135:12:-;9321:7;9355:22;9359:3;9371:5;9355:3;:22::i;26106:854:20:-;26204:15;;26154:20;;;;26268:649;26291:12;;26287:1;:16;26268:649;;;26325:26;;;;:23;:26;;;;;;;;:32;;:26;:32;26322:585;;;26400:30;26428:1;26400:27;:30::i;:::-;26623:22;;;;:19;:22;;;;;;26376:54;;-1:-1:-1;26599:46:20;;:99;;26697:1;26599:99;;;26672:22;;;;:19;:22;;;;;;26648:46;;26599:99;26584:114;;26734:23;;26719:12;:38;26716:177;;;26781:22;;;;:19;:22;;;;;:46;;;26849:25;;;;26716:177;26304:3;;26268:649;;;-1:-1:-1;;26926:15:20;:27;-1:-1:-1;26106:854:20:o;11348:108:4:-;11423:26;11433:2;11437:7;11423:26;;;;;;;;;;;;:9;:26::i;3394:2154:20:-;3603:16;;;3617:1;3603:16;;;3579:21;3603:16;;;;;3551:7;;;;3579:21;;3617:1;3603:16;;;;;;;;;;-1:-1:-1;3603:16:20;3579:40;;3639:7;-1:-1:-1;;;;;3639:12:20;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3639:14:20;3629:7;;:4;;3634:1;;3629:7;;;;;;;;;:24;-1:-1:-1;;;;;3629:24:20;;;-1:-1:-1;;;;;3629:24:20;;;;;3673:20;3663:4;3668:1;3663:7;;;;;;;;;;;;;:30;-1:-1:-1;;;;;3663:30:20;;;-1:-1:-1;;;;;3663:30:20;;;;;4604:26;4862:18;4883:7;-1:-1:-1;;;;;4883:21:20;;4905:9;4916:4;4883:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4883:38:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4883:38:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4883:38:20;;;;;;;;;;;;-1:-1:-1;4883:38:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4922:1;4883:41;;;;;;;;;;;;;;4862:62;;4996:5;4981:13;4973:5;:21;4959:10;:36;:42;;;;;;4938:63;;3394:2154;5113:24;5140:7;-1:-1:-1;;;;;5140:29:20;;5177:9;5294:18;5326:4;5344:2;5360:15;5378:3;5360:21;5140:282;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5140:282:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5140:282:20;;;;;;;;;;;;;;46893:126;46949:4;;46970:5;;46949:37;;;-1:-1:-1;;;46949:37:20;;-1:-1:-1;;;;;46970:5:20;;;46949:37;;;;;;;;;;;;:4;;;;;:12;;:37;;;;;;;;;;;;;;:4;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;46992:5:20;;:22;;;-1:-1:-1;;;46992:22:20;;;;;;;;;;-1:-1:-1;;;;;46992:5:20;;;;:13;;:22;;;;;:5;;:22;;;;;;;;:5;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46893:126;:::o;8269:233:11:-;8349:7;;;;8408:22;8412:3;8424:5;8408:3;:22::i;:::-;8377:53;;;;-1:-1:-1;8269:233:11;-1:-1:-1;;;;;8269:233:11:o;9522:211::-;9629:7;9679:44;9684:3;9704;9710:12;9679:4;:44::i;9811:269:4:-;9924:28;9934:4;9940:2;9944:7;9924:9;:28::i;:::-;9970:48;9993:4;9999:2;10003:7;10012:5;9970:22;:48::i;:::-;9962:111;;;;-1:-1:-1;;;9962:111:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;42191:370:20;42292:27;42331:19;42353:33;42371:14;42367:2;:18;42362:2;:23;;;;;;42353:8;:33::i;:::-;42331:55;;42396:20;42419:74;42477:14;42460;:31;42455:2;:37;42438:14;42434:2;:18;42429:2;:23;;;;;;42428:64;;;;42419:74;42396:97;;42534:5;42546:6;42517:36;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;42517:36:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;42517:36:20;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;42517:36:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;42503:51;;;;42191:370;;;;;:::o;47351:351::-;47529:5;;:30;;;-1:-1:-1;;;47529:30:20;;47553:4;47529:30;;;;;;47415:7;;47498:1;;47415:7;;-1:-1:-1;;;;;47529:5:20;;;;:15;;:30;;;;;;;;;;;;;;;:5;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;47529:30:20;47565:14;47582:29;;;:19;47529:30;47582:29;;;;;47624:15;;47529:30;;-1:-1:-1;47582:29:20;47624:18;:73;;47682:15;;47673:6;47665:5;47649:13;:21;:30;:48;;;;;;47624:73;;;47645:1;47624:73;47617:80;47351:351;-1:-1:-1;;;;;47351:351:20:o;1342:495:21:-;1709:14;;;;;;;;;;;1444:7;;;;;;;;1517:2;1511:8;;;1530:1;1524:7;;;1510:22;:27;;;1575:2;1569;1564:7;;;1563:14;;;1607:2;1602:7;;;1601:14;;;1646:1;1640:7;;;1639:14;;;1677;;;1709;;;;;;1724:2;1709:18;;;;;;;;;;;;;;;;1704:23;;1743:14;;;;;;;;;;;;;;;;;1758:2;1743:18;;;;;;;;;;;;;;;;1738:23;;1777:14;;;;;;;;;;;;;;;;;1792:2;1777:18;;;;;;;;;;;;;;;;1772:23;;1811:14;;;;;;;;;;;;;;;;;1826:2;1811:18;;;;;;;;;;;;;;;;1806:23;;1342:495;;;;;;;;;;;;:::o;45061:454:20:-;45153:24;;;45136:14;45185:28;;;45235:22;;45226:31;;45221:290;;;45271:28;:26;:28::i;:::-;45359:14;;:57;;;-1:-1:-1;;;45359:57:20;;;;45346:8;;-1:-1:-1;;;;;45359:14:20;;45387:6;;45359:57;;;;;45346:8;;45359:57;;;;;;;45387:6;45359:14;:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;45345:71;;;45436:3;45428:42;;;;;-1:-1:-1;;;45428:42:20;;;;;;;;;;;;;;;;;;;;;;;;;;;7588:149:11;7672:4;7695:35;7705:3;7725;7695:9;:35::i;4491:108::-;4573:19;;4491:108::o;8365:135:12:-;8435:4;8458:35;8466:3;8486:5;8458:7;:35::i;8068:129::-;8135:4;8158:32;8163:3;8183:5;8158:4;:32::i;7027:183:11:-;7116:4;7139:64;7144:3;7164;-1:-1:-1;;;;;7178:23:11;;7139:4;:64::i;4452:201:12:-;4546:18;;4519:7;;4546:26;-1:-1:-1;4538:73:12;;;;-1:-1:-1;;;4538:73:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4628:3;:11;;4640:5;4628:18;;;;;;;;;;;;;;;;4621:25;;4452:201;;;;:::o;47023:323:20:-;47100:7;47132:29;;;:19;:29;;;;;;;;;47191:5;;:30;;-1:-1:-1;;;47191:30:20;;47215:4;47191:30;;;;;;47132:29;;47100:7;;-1:-1:-1;;;;;47191:5:20;;;;:15;;:30;;;;;47132:29;47191:30;;;;;;:5;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;47191:30:20;47251:15;;47191:30;;-1:-1:-1;47227:21:20;;47251:18;:65;;47301:15;;47285:13;47276:6;:22;:40;;;;11677:247:4;11772:18;11778:2;11782:7;11772:5;:18::i;:::-;11808:54;11839:1;11843:2;11847:7;11856:5;11808:22;:54::i;:::-;11800:117;;;;-1:-1:-1;;;11800:117:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4942:274:11;5045:19;;5009:7;;;;5045:27;-1:-1:-1;5037:74:11;;;;-1:-1:-1;;;5037:74:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5122:22;5147:3;:12;;5160:5;5147:19;;;;;;;;;;;;;;;;;;5122:44;;5184:5;:10;;;5196:5;:12;;;5176:33;;;;;4942:274;;;;;:::o;6403:315::-;6497:7;6535:17;;;:12;;;:17;;;;;;6585:12;6570:13;6562:36;;;;-1:-1:-1;;;6562:36:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6651:3;:12;;6675:1;6664:8;:12;6651:26;;;;;;;;;;;;;;;;;;:33;;;6644:40;;;6403:315;;;;;:::o;15524:589:4:-;15644:4;15669:15;:2;-1:-1:-1;;;;;15669:13:4;;:15::i;:::-;15664:58;;-1:-1:-1;15707:4:4;15700:11;;15664:58;15731:23;15757:246;-1:-1:-1;;;15868:12:4;:10;:12::i;:::-;15894:4;15912:7;15933:5;15773:175;;;;;;-1:-1:-1;;;;;15773:175:4;;;;;;-1:-1:-1;;;;;15773:175:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15773:175:4;;;;;;;-1:-1:-1;;;;;15773:175:4;;;;;;;;;;;15757:246;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15757:15:4;;;:246;:15;:246::i;:::-;15731:272;;16013:13;16040:10;16029:32;;;;;;;;;;;;;;;-1:-1:-1;16029:32:4;-1:-1:-1;;;;;;16079:26:4;-1:-1:-1;;;16079:26:4;;-1:-1:-1;;;15524:589:4;;;;;;:::o;46360:528:20:-;46500:5;;:30;;;-1:-1:-1;;;46500:30:20;;46524:4;46500:30;;;;;;46476:21;;-1:-1:-1;;;;;46500:5:20;;:15;;:30;;;;;;;;;;;;;;:5;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;46500:30:20;46607:15;;46564:24;;46500:30;;-1:-1:-1;46540:21:20;;46564:40;;46607:15;46564:58;;;;46669:24;;;46651:15;;;:42;;;;46633:60;;-1:-1:-1;46742:28:20;;;;46781:5;;:29;;;-1:-1:-1;;;46781:29:20;;46564:58;;;;46781:29;;;;;;;;46564:58;;-1:-1:-1;;;;;;46781:5:20;;:14;;:29;;;;;-1:-1:-1;46781:29:20;;;;;-1:-1:-1;46781:5:20;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;46820:4:20;;:40;;;-1:-1:-1;;;46820:40:20;;46834:10;46820:40;;;;;;;;;;;;-1:-1:-1;;;;;46820:4:20;;;;-1:-1:-1;46820:13:20;;-1:-1:-1;46820:40:20;;;;;;;;;;;;;;;:4;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4278:123:11;4349:4;4372:17;;;:12;;;;;:17;;;;;;:22;;;4278:123::o;2212:1512:12:-;2278:4;2415:19;;;:12;;;:19;;;;;;2449:15;;2445:1273;;2878:18;;-1:-1:-1;;2830:14:12;;;;2878:22;;;;2806:21;;2878:3;;:22;;3160;;;;;;;;;;;;;;3140:42;;3303:9;3274:3;:11;;3286:13;3274:26;;;;;;;;;;;;;;;;;;;:38;;;;3378:23;;;3420:1;3378:12;;;:23;;;;;;3404:17;;;3378:43;;3527:17;;3378:3;;3527:17;;;;;;;;;;;;;;;;;;;;;;3619:3;:12;;:19;3632:5;3619:19;;;;;;;;;;;3612:26;;;3660:4;3653:11;;;;;;;;2445:1273;3702:5;3695:12;;;;;1640:404;1703:4;1724:21;1734:3;1739:5;1724:9;:21::i;:::-;1719:319;;-1:-1:-1;1761:23:12;;;;;;;;:11;:23;;;;;;;;;;;;;1941:18;;1919:19;;;:12;;;:19;;;;;;:40;;;;1973:11;;1719:319;-1:-1:-1;2022:5:12;2015:12;;1836:678:11;1912:4;2045:17;;;:12;;;:17;;;;;;2077:13;2073:435;;-1:-1:-1;;2161:38:11;;;;;;;;;;;;;;;;;;2143:57;;;;;;;;:12;:57;;;;;;;;;;;;;;;;;;;;;;;;2355:19;;2335:17;;;:12;;;:17;;;;;;;:39;2388:11;;2073:435;2466:5;2430:3;:12;;2454:1;2443:8;:12;2430:26;;;;;;;;;;;;;;;;;;:33;;:41;;;;2492:5;2485:12;;;;;12246:393:4;-1:-1:-1;;;;;12325:16:4;;12317:61;;;;;-1:-1:-1;;;12317:61:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12397:16;12405:7;12397;:16::i;:::-;12396:17;12388:58;;;;;-1:-1:-1;;;12388:58:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;12457:45;12486:1;12490:2;12494:7;12457:20;:45::i;:::-;-1:-1:-1;;;;;12513:17:4;;;;;;:13;:17;;;;;:30;;12535:7;12513:21;:30::i;:::-;-1:-1:-1;12554:29:4;:12;12571:7;12580:2;12554:16;:29::i;:::-;-1:-1:-1;12599:33:4;;12624:7;;-1:-1:-1;;;;;12599:33:4;;;12616:1;;12599:33;;12616:1;;12599:33;12246:393;;:::o;726:413:9:-;1086:20;1124:8;;;726:413::o;3581:193::-;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3684;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;;-1:-1:-1;;;4850:60:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;4981:12;4995:23;5022:6;-1:-1:-1;;;;;5022:11:9;5042:5;5050:4;5022:33;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5022:33:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:75;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;:::-;5065:59;4608:523;-1:-1:-1;;;;;;;4608:523:9:o;7091:725::-;7206:12;7234:7;7230:580;;;-1:-1:-1;7264:10:9;7257:17;;7230:580;7375:17;;:21;7371:429;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7765:20;;-1:-1:-1;;;7765:20:9;;;;;;;;;;;;;;;;;7772:12;;7765:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID."
      },
      "getAllNFTsByOwner(address)": {
        "details": "Get all NFTs owned by owner",
        "params": {
          "_addy": "-- address to get list of NFTs of"
        },
        "returns": {
          "_0": "-- list of token IDs owned by addy"
        }
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "redip(uint256)": {
        "details": "Buying the dip again on existing NFTs"
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    16451,
    47705
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x276 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F6CCCE7 GT PUSH2 0x14F JUMPI DUP1 PUSH4 0x8E15F473 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xD082E381 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xD082E381 EQ PUSH2 0xD3F JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0xD54 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xD8F JUMPI DUP1 PUSH4 0xFB1B0F29 EQ PUSH2 0xDC2 JUMPI DUP1 PUSH4 0xFC4A72FB EQ PUSH2 0xDEC JUMPI DUP1 PUSH4 0xFD4889C1 EQ PUSH2 0xE01 JUMPI PUSH2 0x2B7 JUMP JUMPDEST DUP1 PUSH4 0x8E15F473 EQ PUSH2 0xBAF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xBC4 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0xBD9 JUMPI DUP1 PUSH4 0xAE153E3E EQ PUSH2 0xC14 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0xC44 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0xD15 JUMPI PUSH2 0x2B7 JUMP JUMPDEST DUP1 PUSH4 0x6E04FF0D GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0xA24 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xB20 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xB53 JUMPI DUP1 PUSH4 0x8B772BA4 EQ PUSH2 0xB68 JUMPI DUP1 PUSH4 0x8D98EBC1 EQ PUSH2 0xB85 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB9A JUMPI PUSH2 0x2B7 JUMP JUMPDEST DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x90E JUMPI DUP1 PUSH4 0x5D2E1157 EQ PUSH2 0x938 JUMPI DUP1 PUSH4 0x60570068 EQ PUSH2 0x9BB JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x9E5 JUMPI DUP1 PUSH4 0x6C0360EB EQ PUSH2 0xA0F JUMPI PUSH2 0x2B7 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x42842E0E GT PUSH2 0x1AC JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x790 JUMPI DUP1 PUSH4 0x43413E8A EQ PUSH2 0x7D3 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x7F6 JUMPI DUP1 PUSH4 0x4661720A EQ PUSH2 0x871 JUMPI DUP1 PUSH4 0x47B6B491 EQ PUSH2 0x89B JUMPI DUP1 PUSH4 0x498A4AF3 EQ PUSH2 0x8DB JUMPI PUSH2 0x2B7 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x639 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x67C JUMPI DUP1 PUSH4 0x30D871C6 EQ PUSH2 0x6B5 JUMPI DUP1 PUSH4 0x351C7D35 EQ PUSH2 0x766 JUMPI DUP1 PUSH4 0x355C8973 EQ PUSH2 0x77B JUMPI PUSH2 0x2B7 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x23A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x4B8 JUMPI DUP1 PUSH4 0xA537537 EQ PUSH2 0x4F1 JUMPI DUP1 PUSH4 0x162094C4 EQ PUSH2 0x52D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x5E5 JUMPI DUP1 PUSH4 0x18FF04EE EQ PUSH2 0x5FA JUMPI DUP1 PUSH4 0x2223C5F1 EQ PUSH2 0x60F JUMPI PUSH2 0x2B7 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x419E314 EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0x4276B2F EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x472 JUMPI PUSH2 0x2B7 JUMP JUMPDEST CALLDATASIZE PUSH2 0x2B7 JUMPI PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE CALLVALUE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH32 0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0xE2B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x35A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x37B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xE4E SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3F6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3DE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x423 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x454 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x10F4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x469 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BC PUSH2 0x12CE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1364 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x13C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x51B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x514 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x14A1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x539 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x550 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x571 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x5A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x14B3 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x51B PUSH2 0x150D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x606 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45B PUSH2 0x151E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x51B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x632 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x15AD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x645 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x65C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x15BF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x688 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x51B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x69F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1616 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x6F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x704 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x163F SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x772 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49C PUSH2 0x17FD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x787 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49C PUSH2 0x180C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x79C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x7B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x181B JUMP JUMPDEST PUSH2 0x51B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x1836 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x802 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x819 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x833 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x845 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x866 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1509 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x87D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x51B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x894 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1AAC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1ABE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x8FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0xFF AND PUSH2 0x1AD3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x91A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x51B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x931 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1BFD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x944 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x96B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x95B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C13 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9A7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x98F JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1D03 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1E50 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BC PUSH2 0x1E78 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA9F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0xA61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xA73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0xA94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1ED9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAE4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xACC JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xB11 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x51B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F22 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45B PUSH2 0x1F8A JUMP JUMPDEST PUSH2 0x51B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2048 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x51B PUSH2 0x222F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49C PUSH2 0x2235 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x51B PUSH2 0x2244 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BC PUSH2 0x233B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xBFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x239C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xC37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x24A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0xC67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0xCA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xCB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0xCD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x250E SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3BC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2566 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x51B PUSH2 0x2BEE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xD77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x2BF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2C22 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2D37 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x51B PUSH2 0x2D4C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x51B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2D52 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x105C SWAP1 DUP5 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xE8E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE POP PUSH2 0xEA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 PUSH1 0xFC SHL DUP2 MSTORE POP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xEC1 SWAP1 PUSH2 0x2D64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 PUSH1 0x37 PUSH2 0x567D DUP3 CODECOPY PUSH1 0x37 ADD PUSH1 0x2B PUSH2 0x581D DUP3 CODECOPY PUSH1 0x2B ADD DUP1 PUSH12 0x16101134B6B0B3B2911D1011 PUSH1 0xA1 SHL DUP2 MSTORE POP PUSH1 0xC ADD DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xF1E JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xEFF JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 SWAP1 SWAP4 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP2 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 MSTORE PUSH1 0x11 PUSH1 0xF9 SHL SWAP3 ADD SWAP2 DUP3 MSTORE POP PUSH21 0x1610113730B6B2911D1011213ABCAA3432A234B811 PUSH1 0x59 SHL PUSH1 0x1 DUP3 ADD MSTORE PUSH1 0x16 ADD PUSH1 0x50 PUSH2 0x5C80 DUP3 CODECOPY PUSH1 0x50 ADD DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xF9D JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xF7E JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 SWAP1 SWAP4 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP2 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 MSTORE PUSH2 0x207D PUSH1 0xF0 SHL SWAP3 ADD SWAP2 DUP3 MSTORE POP PUSH1 0x2 ADD PUSH1 0x41 PUSH2 0x5610 DUP3 CODECOPY PUSH1 0x41 ADD DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xFFF JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xFE0 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 SWAP1 SWAP4 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP2 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 MSTORE PUSH2 0x207D PUSH1 0xF0 SHL SWAP3 ADD SWAP2 DUP3 MSTORE POP PUSH1 0x5D PUSH1 0xF8 SHL PUSH1 0x2 DUP3 ADD MSTORE PUSH1 0x7D PUSH1 0xF8 SHL PUSH1 0x3 DUP3 ADD MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1B NOT ADD DUP2 MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP4 POP PUSH2 0x2E3C SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 DUP2 MSTORE POP PUSH1 0x1D ADD DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x10B6 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1097 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10FC PUSH2 0x2244 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT ISZERO PUSH2 0x1155 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x141C9A58D94818589BDD9948191A5C13195D995B PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 PUSH2 0x1168 DUP4 PUSH1 0x18 SLOAD PUSH2 0x30B3 JUMP JUMPDEST PUSH1 0x21 SLOAD PUSH1 0x1F SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD SWAP4 SWAP5 POP SWAP2 AND SWAP2 PUSH4 0x95EA7B3 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x21 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH2 0x1226 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x120F DUP9 PUSH2 0x1E50 JUMP JUMPDEST PUSH1 0x1F SLOAD PUSH1 0x13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x3282 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD SWAP4 SWAP6 POP SWAP2 SWAP4 POP PUSH32 0x4BCDD9B8B0CADBBAFA70ADC1D3944DFB4731760C7D447E4C7DA9F6F5645F8C67 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0xC SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x7 PUSH1 0xFF SWAP1 SWAP2 AND LT ISZERO PUSH2 0x12B5 JUMPI PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF DUP1 DUP3 AND PUSH1 0x1 ADD AND PUSH1 0xFF NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE JUMPDEST POP POP POP PUSH1 0x0 SWAP2 DUP3 MSTORE POP PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x2710 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x135A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x132F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x135A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x133D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x136F DUP3 PUSH2 0x371F JUMP JUMPDEST PUSH2 0x13AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x55E4 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13D1 DUP3 PUSH2 0x1E50 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1424 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x57FC PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1436 PUSH2 0x372C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1457 JUMPI POP PUSH2 0x1457 DUP2 PUSH2 0x1452 PUSH2 0x372C JUMP JUMPDEST PUSH2 0x2BF4 JUMP JUMPDEST PUSH2 0x1492 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x543A PUSH1 0x38 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x149C DUP4 DUP4 PUSH2 0x3730 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x14C4 PUSH2 0x14BE PUSH2 0x372C JUMP JUMPDEST DUP4 PUSH2 0x379E JUMP JUMPDEST PUSH2 0x14FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x31 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5983 PUSH1 0x31 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1509 DUP3 DUP3 PUSH2 0x3842 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1519 PUSH1 0x2 PUSH2 0x38A5 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST TIMESTAMP PUSH1 0x15 SSTORE PUSH1 0x0 PUSH2 0x152C PUSH2 0x2244 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x1509 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x157A JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 LT PUSH2 0x1575 JUMPI PUSH2 0x1575 DUP2 PUSH2 0x10F4 JUMP JUMPDEST PUSH2 0x15A5 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT ISZERO PUSH2 0x15A5 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x12 SSTORE JUMPDEST PUSH1 0x1 ADD PUSH2 0x1531 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x15D0 PUSH2 0x15CA PUSH2 0x372C JUMP JUMPDEST DUP3 PUSH2 0x379E JUMP JUMPDEST PUSH2 0x160B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x31 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5983 PUSH1 0x31 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x149C DUP4 DUP4 DUP4 PUSH2 0x38B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x1638 SWAP1 DUP4 PUSH2 0x39FC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH32 0x646174613A696D6167652F7376672B786D6C3B6261736536342C000000000000 PUSH1 0x20 SWAP2 DUP3 ADD MSTORE DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE PUSH1 0x13 DUP1 DUP3 MSTORE PUSH19 0x19185D184E9A5B5859D94BDCDD99CADE1B5B0B PUSH1 0x6A SHL DUP3 DUP5 ADD SWAP1 DUP2 MSTORE SWAP4 MLOAD PUSH1 0x60 SWAP5 PUSH1 0x0 SWAP5 DUP5 SWAP4 DUP9 SWAP4 SWAP1 SWAP2 ADD SWAP2 DUP3 SWAP2 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x16D1 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x16B2 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE DUP6 MLOAD SWAP2 SWAP1 SWAP4 ADD SWAP3 DUP6 ADD SWAP2 POP DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1719 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x16FA JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1776 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1757 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE DUP6 MLOAD SWAP2 SWAP1 SWAP4 ADD SWAP3 DUP6 ADD SWAP2 POP DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x17BE JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x179F JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x24 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1C SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x149C DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x250E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x16 SLOAD PUSH1 0x19 SLOAD CALLVALUE ADD LT ISZERO PUSH2 0x1893 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F756768206E617469766520636F696E2E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP3 PUSH4 0xFFFFFFFF AND LT PUSH2 0x18D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x51B0 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18E0 PUSH2 0x3A08 JUMP JUMPDEST PUSH1 0x19 SLOAD PUSH1 0x1D DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH1 0xB DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE PUSH2 0x1901 CALLER DUP3 PUSH2 0x3AA3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x64 PUSH2 0x1921 PUSH2 0x2244 JUMP JUMPDEST DUP5 PUSH1 0x64 SUB PUSH4 0xFFFFFFFF AND MUL DUP2 PUSH2 0x1933 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP4 DIV SWAP1 SWAP4 SSTORE PUSH1 0xE SWAP1 SWAP3 MSTORE DUP2 KECCAK256 PUSH4 0xFFFFFFFF DUP6 AND SWAP1 SSTORE PUSH1 0x21 SLOAD PUSH1 0x1F SLOAD PUSH1 0x13 SLOAD PUSH2 0x1981 SWAP3 CALLVALUE SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 ADDRESS SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH2 0x3ABD JUMP JUMPDEST SWAP2 POP POP PUSH1 0x19 SLOAD CALLVALUE ADD DUP2 CALLVALUE MUL DUP2 PUSH2 0x1993 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 DIV SWAP1 SSTORE PUSH1 0x19 SLOAD CALLVALUE DUP2 ADD SWAP1 DUP3 MUL DUP2 PUSH2 0x19B6 JUMPI INVALID JUMPDEST PUSH1 0x1D DUP1 SLOAD SWAP3 SWAP1 SWAP2 DIV SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1A1E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x22B93937B910902737903A37B5B2B739903137BAB3B43A17 PUSH1 0x41 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1A36 SWAP1 PUSH2 0x3E0C JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT ISZERO PUSH2 0x1A61 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x12 SSTORE JUMPDEST PUSH1 0x14 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1A94 DUP3 PUSH2 0x1A8F DUP2 PUSH2 0x2566 JUMP JUMPDEST PUSH2 0x3842 JUMP JUMPDEST DUP2 PUSH1 0x2 EQ ISZERO PUSH2 0x1AA5 JUMPI PUSH2 0x1AA5 PUSH2 0x151E JUMP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1ADB PUSH2 0x372C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1AEC PUSH2 0x2235 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1B47 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP2 PUSH1 0xFF AND LT PUSH2 0x1B93 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x125B9D985B1A5908111A5C0813195D995B PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD DUP3 LT PUSH2 0x1BDB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x125B9D985B1A59081D1BDAD95B9259 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1C0B PUSH1 0x2 DUP5 PUSH2 0x3EF9 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x1C54 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C36 DUP3 PUSH2 0x1E50 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1C4C JUMPI PUSH1 0x1 DUP3 ADD SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1C19 JUMP JUMPDEST POP PUSH1 0x60 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x1C6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1C98 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x1CF9 JUMPI DUP4 DUP3 LT PUSH2 0x1CB5 JUMPI PUSH2 0x1CF9 JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1CC8 DUP3 PUSH2 0x1E50 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1CF1 JUMPI DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1CE4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1C9F JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1D0C DUP2 PUSH2 0x1E50 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1D68 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x26BAB9BA103132903A37B5B2B71037BBB732B917 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1D70 PUSH2 0x2244 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT PUSH2 0x1D92 JUMPI PUSH2 0x1D8D DUP2 PUSH2 0x10F4 JUMP JUMPDEST PUSH2 0x1E4D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DA0 DUP3 PUSH1 0x17 SLOAD PUSH2 0x30B3 JUMP JUMPDEST PUSH1 0x21 SLOAD PUSH1 0x1F SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD SWAP4 SWAP5 POP SWAP2 AND SWAP2 PUSH4 0x95EA7B3 SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E0F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x21 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH2 0x1E47 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x120F DUP8 PUSH2 0x1E50 JUMP JUMPDEST POP POP POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10EE DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x555D PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x2 SWAP2 SWAP1 PUSH2 0x3F15 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x135A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x132F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x135A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH32 0x0 PUSH1 0x15 SLOAD TIMESTAMP SUB GT DUP1 ISZERO PUSH2 0x1F19 JUMPI POP PUSH2 0x1F13 PUSH2 0x2244 JUMP JUMPDEST PUSH1 0x12 SLOAD GT ISZERO JUMPDEST SWAP2 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1F69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5472 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x10EE SWAP1 PUSH2 0x38A5 JUMP JUMPDEST PUSH2 0x1F92 PUSH2 0x372C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1FA3 PUSH2 0x2235 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1FFE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x16 SLOAD CALLVALUE LT ISZERO PUSH2 0x20A1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420456E6F75676820424E422D2D6F722077686174657665720000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x20EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x52EC PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x20F7 PUSH2 0x3A08 JUMP JUMPDEST PUSH1 0x64 PUSH2 0x2101 PUSH2 0x2244 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x64 SUB MUL DUP2 PUSH2 0x211B JUMPI INVALID JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 DIV SWAP1 SSTORE PUSH2 0x213B DUP3 PUSH2 0x1A8F DUP2 PUSH2 0x2566 JUMP JUMPDEST PUSH1 0x21 SLOAD PUSH1 0x1F SLOAD PUSH1 0x13 SLOAD PUSH2 0x2161 SWAP3 CALLVALUE SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 ADDRESS SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH2 0x3ABD JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE ISZERO ISZERO SWAP1 POP PUSH2 0x21C2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x22B93937B910902737903A37B5B2B739903137BAB3B43A17 PUSH1 0x41 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x21DA SWAP1 PUSH2 0x3E0C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x14 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE PUSH1 0x10 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x12 SLOAD PUSH1 0xD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD GT ISZERO PUSH2 0xE49 JUMPI PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0x12 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x23 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x229B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x22AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x22C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 SWAP1 SWAP5 ADD MLOAD SWAP3 SWAP9 POP SWAP1 SWAP7 POP SWAP5 POP SWAP1 SWAP3 POP SWAP1 POP DUP2 PUSH2 0x2331 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x526F756E64206E6F7420636F6D706C657465 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP2 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x135A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x132F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x135A JUMP JUMPDEST PUSH2 0x23A4 PUSH2 0x372C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x240A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x2417 PUSH2 0x372C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH2 0x245B PUSH2 0x372C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x24FC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x43616E277420696E63726561736520656E65726779 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH2 0x2519 PUSH2 0x14BE PUSH2 0x372C JUMP JUMPDEST PUSH2 0x2554 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x31 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5983 PUSH1 0x31 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2560 DUP5 DUP5 DUP5 DUP5 PUSH2 0x3F22 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2571 DUP3 PUSH2 0x371F JUMP JUMPDEST PUSH2 0x25AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5719 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0xC DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD PUSH1 0xD SWAP1 SWAP4 MSTORE SWAP1 DUP4 KECCAK256 SLOAD PUSH1 0xFF SWAP2 DUP3 AND SWAP4 SWAP3 SWAP1 SWAP2 AND SWAP2 PUSH1 0x4E SWAP1 PUSH2 0x25E5 PUSH2 0x2244 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 PUSH2 0x25F5 JUMPI POP DUP2 PUSH2 0x2643 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x64 SWAP1 DUP2 SUB SWAP1 DUP6 MUL DUP2 PUSH2 0x2613 JUMPI INVALID JUMPDEST DIV DUP3 GT PUSH2 0x263D JUMPI PUSH1 0x64 DUP3 DUP6 DUP5 SUB PUSH1 0x64 MUL DUP2 PUSH2 0x262A JUMPI INVALID JUMPDEST DIV PUSH1 0x64 SUB DUP5 MUL DUP2 PUSH2 0x2637 JUMPI INVALID JUMPDEST DIV PUSH2 0x2640 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 PUSH1 0x1 DUP9 ISZERO ISZERO EQ ISZERO PUSH2 0x271D JUMPI PUSH2 0x2668 DUP4 PUSH2 0x2D64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 PUSH1 0xC1 PUSH2 0x549C DUP3 CODECOPY PUSH1 0xC1 ADD DUP1 PUSH2 0x5339 PUSH1 0xC1 SWAP2 CODECOPY PUSH1 0xC1 ADD DUP1 PUSH32 0x253343636972636C652063783D27313735272063793D273230302720723D2700 DUP2 MSTORE POP PUSH1 0x1F ADD DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x26D7 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x26B8 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD DUP1 PUSH2 0x52BE PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x2E ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x27EA JUMP JUMPDEST PUSH2 0x2726 DUP4 PUSH2 0x2D64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 PUSH1 0xB4 PUSH2 0x5748 DUP3 CODECOPY PUSH1 0xB4 ADD PUSH1 0xB2 PUSH2 0x5BCE DUP3 CODECOPY PUSH1 0xB2 ADD DUP1 PUSH32 0x253343636972636C652063783D27313735272063793D273230302720723D2700 DUP2 MSTORE POP PUSH1 0x1F ADD DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2794 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2775 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD DUP1 PUSH2 0x52BE PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x2E ADD PUSH1 0xB3 PUSH2 0x5A4F DUP3 CODECOPY PUSH1 0xB3 ADD PUSH1 0x56 PUSH2 0x5B02 DUP3 CODECOPY PUSH1 0x56 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP JUMPDEST PUSH1 0x60 PUSH2 0x2800 PUSH2 0x27F7 PUSH2 0x2244 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x2 PUSH2 0x3F74 JUMP JUMPDEST PUSH2 0x280D DUP9 PUSH1 0x8 PUSH1 0x2 PUSH2 0x3F74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 PUSH1 0xAA PUSH2 0x50D4 DUP3 CODECOPY PUSH1 0xAA ADD PUSH2 0x100 PUSH2 0x5883 DUP3 CODECOPY PUSH2 0x100 ADD PUSH2 0x213 PUSH2 0x4DFC DUP3 CODECOPY PUSH2 0x213 ADD PUSH1 0x51 PUSH2 0x59FE DUP3 CODECOPY PUSH1 0x51 ADD PUSH1 0x3C PUSH2 0x5586 DUP3 CODECOPY PUSH1 0x3C ADD DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2875 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2856 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 SWAP1 SWAP4 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP2 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 MSTORE PUSH11 0x2533432F74657874253345 PUSH1 0xA8 SHL SWAP3 ADD SWAP2 DUP3 MSTORE POP PUSH1 0xB ADD PUSH1 0x51 PUSH2 0x5031 DUP3 CODECOPY PUSH1 0x51 ADD PUSH1 0x3C PUSH2 0x56B4 DUP3 CODECOPY PUSH1 0x3C ADD DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x28EA JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x28CB JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 SWAP1 SWAP4 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP2 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 MSTORE PUSH11 0x2533432F74657874253345 PUSH1 0xA8 SHL SWAP3 ADD SWAP2 DUP3 MSTORE POP PUSH1 0xB ADD PUSH1 0x52 PUSH2 0x5082 DUP3 CODECOPY PUSH1 0x52 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH2 0x2955 PUSH2 0x294C DUP14 PUSH2 0x407C JUMP JUMPDEST PUSH1 0x6 PUSH1 0x2 PUSH2 0x3F74 JUMP JUMPDEST PUSH2 0x295E DUP6 PUSH2 0x2D64 JUMP JUMPDEST PUSH2 0x2967 DUP15 PUSH2 0x2D64 JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x299A JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x297B JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD DUP1 PUSH2 0x525E PUSH1 0x3C SWAP2 CODECOPY PUSH1 0x3C ADD DUP6 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x29F2 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x29D3 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 SWAP1 SWAP4 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP2 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 MSTORE PUSH12 0x202533432F74657874253345 PUSH1 0xA0 SHL SWAP3 ADD SWAP2 DUP3 MSTORE POP PUSH1 0xC ADD PUSH1 0x4A PUSH2 0x59B4 DUP3 CODECOPY PUSH1 0x4A ADD PUSH1 0x3B PUSH2 0x5848 DUP3 CODECOPY PUSH1 0x3B ADD DUP5 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2A68 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2A49 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 SWAP1 SWAP4 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP2 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 MSTORE PUSH11 0x2533432F74657874253345 PUSH1 0xA8 SHL SWAP3 ADD SWAP2 DUP3 MSTORE POP PUSH1 0xB ADD PUSH1 0x60 PUSH2 0x51FE DUP3 CODECOPY PUSH1 0x60 ADD DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2AD3 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2AB4 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 SWAP1 SWAP4 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP2 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 MSTORE PUSH11 0x2533432F74657874253345 PUSH1 0xA8 SHL SWAP3 ADD SWAP2 DUP3 MSTORE POP PUSH1 0xB ADD PUSH1 0x76 PUSH2 0x5B58 DUP3 CODECOPY PUSH1 0x76 ADD DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2B3E JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2B1F JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 SWAP1 SWAP4 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP2 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 MSTORE PUSH12 0x2AB739BAB83837B93A32B217 PUSH1 0xA1 SHL SWAP3 ADD SWAP2 DUP3 MSTORE POP PUSH10 0x2533432F737667253345 PUSH1 0xB0 SHL PUSH1 0xC DUP3 ADD MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x9 NOT ADD DUP2 MSTORE PUSH1 0x16 SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP7 POP POP POP PUSH1 0x2 DUP13 LT ISZERO SWAP4 POP PUSH2 0x2BCE SWAP3 POP POP POP JUMPI PUSH2 0x2BBE DUP12 PUSH2 0x2BB9 DUP4 PUSH2 0x163F JUMP JUMPDEST PUSH2 0xE4E JUMP JUMPDEST SWAP10 POP POP POP POP POP POP POP POP POP POP PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP10 POP POP POP POP POP POP POP POP POP POP PUSH2 0xE49 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x2C2A PUSH2 0x372C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2C3B PUSH2 0x2235 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2C96 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2CDB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x51D8 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x2D89 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xE49 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x2DA1 JUMPI PUSH1 0x1 ADD PUSH1 0xA DUP3 DIV SWAP2 POP PUSH2 0x2D8D JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x2DBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2DE5 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 NOT DUP3 ADD JUMPDEST DUP6 ISZERO PUSH2 0x2E33 JUMPI PUSH1 0xA DUP7 MOD PUSH1 0x30 ADD PUSH1 0xF8 SHL DUP3 DUP3 DUP1 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP2 MLOAD DUP2 LT PUSH2 0x2E11 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP7 DIV SWAP6 POP PUSH2 0x2DEE JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP3 MLOAD DUP2 PUSH2 0x2E4F JUMPI INVALID JUMPDEST MOD SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SUB MOD PUSH1 0x3 DUP5 MLOAD PUSH1 0x2 ADD DUP2 PUSH2 0x2E68 JUMPI INVALID JUMPDEST DIV PUSH1 0x4 MUL SUB SWAP1 POP PUSH1 0x60 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x2E88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2EB3 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP6 MLOAD DUP3 PUSH1 0x3 ADD GT PUSH2 0x2FBD JUMPI PUSH2 0x2F21 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2ED4 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH1 0xFF AND DUP8 DUP5 PUSH1 0x1 ADD DUP2 MLOAD DUP2 LT PUSH2 0x2EF4 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH1 0xFF AND DUP9 DUP6 PUSH1 0x2 ADD DUP2 MLOAD DUP2 LT PUSH2 0x2F14 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 SHR PUSH2 0x4137 JUMP JUMPDEST DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x2F2D JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD DUP8 DUP7 PUSH1 0x1 ADD DUP2 MLOAD DUP2 LT PUSH2 0x2F40 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD DUP9 DUP8 PUSH1 0x2 ADD DUP2 MLOAD DUP2 LT PUSH2 0x2F53 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD DUP10 DUP9 PUSH1 0x3 ADD DUP2 MLOAD DUP2 LT PUSH2 0x2F66 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP7 AND PUSH1 0x0 BYTE SWAP2 ADD PUSH1 0x20 ADD MSTORE8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP6 AND PUSH1 0x0 BYTE SWAP1 MSTORE8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP6 AND PUSH1 0x0 BYTE SWAP1 MSTORE8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP6 AND PUSH1 0x0 BYTE SWAP1 MSTORE8 POP POP POP PUSH1 0x3 SWAP3 SWAP1 SWAP3 ADD SWAP2 POP PUSH1 0x4 ADD PUSH2 0x2EBA JUMP JUMPDEST DUP5 ISZERO PUSH2 0x30A7 JUMPI PUSH1 0x0 DUP7 DUP7 DUP9 MLOAD SUB DUP2 MLOAD DUP2 LT PUSH2 0x2FD4 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 SHR SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP8 EQ ISZERO PUSH2 0x3004 JUMPI DUP8 PUSH1 0x1 DUP10 MLOAD SUB DUP2 MLOAD DUP2 LT PUSH2 0x2FF9 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 SHR SWAP1 POP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x301C DUP7 PUSH1 0xFF AND DUP7 PUSH1 0xFF AND PUSH1 0x0 PUSH2 0x4137 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP DUP4 DUP10 DUP9 DUP2 MLOAD DUP2 LT PUSH2 0x3031 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP3 DUP10 DUP9 PUSH1 0x1 ADD DUP2 MLOAD DUP2 LT PUSH2 0x3058 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP11 PUSH1 0x2 EQ ISZERO PUSH2 0x30A0 JUMPI DUP2 DUP10 DUP9 PUSH1 0x2 ADD DUP2 MLOAD DUP2 LT PUSH2 0x3088 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP JUMPDEST POP POP POP POP POP POP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1E SLOAD DUP3 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP3 MLOAD SWAP2 SWAP4 DUP6 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0x70A08231 SWAP3 PUSH1 0x24 DUP1 DUP3 ADD SWAP4 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x310E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3122 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x14 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 DUP4 DUP4 MUL DUP2 PUSH2 0x314D JUMPI INVALID JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x14 DUP1 SLOAD DUP7 SWAP1 SUB SWAP1 SSTORE PUSH1 0x1E SLOAD SWAP2 SWAP1 DIV SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2E1A7D4D PUSH2 0x2710 DUP8 DUP2 SUB DUP5 MUL DIV PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x31BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x31CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x22 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x2710 DUP11 DUP2 SUB DUP8 MUL DIV PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP PUSH4 0xA9059CBB SWAP3 POP PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x322D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3241 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x1D DUP1 SLOAD PUSH2 0x2710 DUP8 DUP5 MUL DIV ADD SWAP1 SSTORE PUSH2 0x326F PUSH2 0x423A JUMP JUMPDEST PUSH2 0x2710 DUP6 DUP2 SUB DUP3 MUL DIV SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE PUSH1 0x0 SWAP4 DUP5 SWAP4 SWAP2 SWAP3 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP7 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x32B7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3324 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x333A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP2 MLOAD DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x334B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD06CA61F DUP12 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x33D4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x33BC JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x33F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x340C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT ISZERO PUSH2 0x3454 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x3469 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT OR ISZERO PUSH2 0x3485 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x34B2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x349A JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x34CB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x2710 DUP7 PUSH2 0x2710 SUB DUP3 MUL DUP2 PUSH2 0x34E6 JUMPI INVALID JUMPDEST DIV SWAP2 POP POP PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18CBAFE5 DUP12 DUP5 DUP7 DUP13 TIMESTAMP PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3570 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3558 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3599 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x35AD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x35D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT ISZERO PUSH2 0x35F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x360A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT OR ISZERO PUSH2 0x3626 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3653 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x363B JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP SWAP1 POP DUP1 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x366F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 EQ ISZERO DUP1 ISZERO PUSH2 0x369C JUMPI POP DUP1 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x368F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 EQ ISZERO JUMPDEST PUSH2 0x36E4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x39BBB0B822BC30B1BA22AA24103330B4B632B217 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x36F1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x3706 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP5 POP SWAP5 POP POP POP POP SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10EE PUSH1 0x2 DUP4 PUSH2 0x4323 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x3765 DUP3 PUSH2 0x1E50 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37A9 DUP3 PUSH2 0x371F JUMP JUMPDEST PUSH2 0x37E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x530D PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x37EF DUP4 PUSH2 0x1E50 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x382A JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x381F DUP5 PUSH2 0x1364 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x383A JUMPI POP PUSH2 0x383A DUP2 DUP6 PUSH2 0x2BF4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x384B DUP3 PUSH2 0x371F JUMP JUMPDEST PUSH2 0x3886 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5651 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD PUSH2 0x149C SWAP3 DUP5 ADD SWAP1 PUSH2 0x4D68 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10EE DUP3 PUSH2 0x432F JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x38C3 DUP3 PUSH2 0x1E50 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3908 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x56F0 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x394D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x529A PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3958 DUP4 DUP4 DUP4 PUSH2 0x149C JUMP JUMPDEST PUSH2 0x3963 PUSH1 0x0 DUP3 PUSH2 0x3730 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x3985 SWAP1 DUP3 PUSH2 0x4333 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x39A8 SWAP1 DUP3 PUSH2 0x433F JUMP JUMPDEST POP PUSH2 0x39B5 PUSH1 0x2 DUP3 DUP5 PUSH2 0x434B JUMP JUMPDEST POP DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1638 DUP4 DUP4 PUSH2 0x4361 JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0x0 SWAP1 DUP2 DUP1 JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x3A9B JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x3A93 JUMPI PUSH2 0x3A40 DUP2 PUSH2 0x43C5 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 POP DUP3 GT PUSH2 0x3A5F JUMPI PUSH1 0x0 PUSH2 0x3A71 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SUB JUMPDEST SWAP4 POP PUSH1 0x1A SLOAD DUP5 GT ISZERO PUSH2 0x3A93 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 SWAP1 SSTORE SWAP2 DUP4 ADD SWAP2 JUMPDEST PUSH1 0x1 ADD PUSH2 0x3A11 JUMP JUMPDEST POP POP PUSH1 0x14 SSTORE POP JUMP JUMPDEST PUSH2 0x1509 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x4467 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE PUSH1 0x0 SWAP4 DUP5 SWAP4 SWAP2 SWAP3 SWAP1 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3B1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3B31 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3B47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP2 MLOAD DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x3B56 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP7 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x3B84 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD06CA61F DUP12 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3C0D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3BF5 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3C31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3C45 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3C6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT ISZERO PUSH2 0x3C8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x3CA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP3 GT OR ISZERO PUSH2 0x3CBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 DUP3 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3CEB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3CD3 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x3D04 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x2710 DUP7 PUSH2 0x2710 SUB DUP3 MUL DUP2 PUSH2 0x3D1F JUMPI INVALID JUMPDEST DIV SWAP2 POP POP PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7FF36AB5 DUP12 DUP5 DUP7 DUP13 TIMESTAMP PUSH2 0x168 ADD PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3DA7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3D8F JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3DCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3DE2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x35D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x22 SLOAD PUSH1 0x1E SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x95EA7B3 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3E65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3E79 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3E8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x1E SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xB6B55F25 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xB6B55F25 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3EDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3EF2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x3F08 DUP7 DUP7 PUSH2 0x44B9 JUMP JUMPDEST SWAP1 SWAP8 SWAP1 SWAP7 POP SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x383A DUP5 DUP5 DUP5 PUSH2 0x4534 JUMP JUMPDEST PUSH2 0x3F2D DUP5 DUP5 DUP5 PUSH2 0x38B0 JUMP JUMPDEST PUSH2 0x3F39 DUP5 DUP5 DUP5 DUP5 PUSH2 0x45FE JUMP JUMPDEST PUSH2 0x2560 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x517E PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP1 PUSH2 0x3F8C DUP5 PUSH1 0xA EXP DUP7 DUP2 PUSH2 0x3F86 JUMPI INVALID JUMPDEST DIV PUSH2 0x2D64 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 PUSH2 0x3FAD DUP5 DUP7 SUB PUSH1 0xA EXP DUP7 PUSH1 0xA EXP DUP9 DUP2 PUSH2 0x3FA5 JUMPI INVALID JUMPDEST MOD DUP2 PUSH2 0x3F86 JUMPI INVALID JUMPDEST SWAP1 POP DUP2 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x3FE3 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x3FC4 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD DUP1 PUSH1 0x17 PUSH1 0xF9 SHL DUP2 MSTORE POP PUSH1 0x1 ADD DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x403C JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x401D JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1E SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 SWAP3 DUP5 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x40CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x40E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x40F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x14 SLOAD SWAP2 SWAP3 POP SWAP1 ISZERO PUSH2 0x412B JUMPI PUSH1 0x14 SLOAD DUP2 DUP5 DUP5 MUL MUL DUP2 PUSH2 0x4125 JUMPI INVALID JUMPDEST DIV PUSH2 0x412E JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE DUP2 DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x10 DUP10 SWAP1 SHL PUSH1 0x8 DUP10 SWAP1 SHL OR DUP8 OR SWAP2 PUSH1 0x3F PUSH1 0x12 DUP5 SWAP1 SHR DUP2 AND SWAP3 PUSH1 0xC DUP6 SWAP1 SHR DUP3 AND SWAP3 PUSH1 0x6 DUP7 SWAP1 SHR DUP4 AND SWAP3 DUP7 AND SWAP2 SWAP1 PUSH2 0x53FA PUSH1 0x20 DUP4 ADD CODECOPY DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x418C JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL SWAP9 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x53FA PUSH1 0x40 SWAP2 CODECOPY DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x41BD JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL SWAP8 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x53FA PUSH1 0x40 SWAP2 CODECOPY DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x41EE JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL SWAP7 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x53FA PUSH1 0x40 SWAP2 CODECOPY DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x421F JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL SWAP6 POP POP POP POP POP POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 JUMP JUMPDEST PUSH1 0x1D DUP1 SLOAD PUSH1 0x0 SWAP1 SWAP2 SSTORE PUSH1 0x1B SLOAD DUP2 GT ISZERO PUSH2 0x1E4D JUMPI PUSH2 0x4255 PUSH2 0x4766 JUMP JUMPDEST PUSH1 0x1C SLOAD PUSH1 0x40 DUP1 MLOAD PUSH18 0x2932B632B0B9B4B73390383937B334BA3997 PUSH1 0x71 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP5 SWAP2 PUSH1 0x12 DUP1 DUP4 ADD SWAP3 DUP7 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x42C8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x42CD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1509 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F756C64206E6F742072656C656173652070726F666974732E000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1638 DUP4 DUP4 PUSH2 0x48E9 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1638 DUP4 DUP4 PUSH2 0x4901 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1638 DUP4 DUP4 PUSH2 0x49C7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x383A DUP5 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x4A11 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP3 LT PUSH2 0x43A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x500F PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x43B2 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1E SLOAD DUP3 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP3 MLOAD SWAP2 SWAP4 DUP6 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0x70A08231 SWAP3 PUSH1 0x24 DUP1 DUP3 ADD SWAP4 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4434 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x444A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x14 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 ISZERO PUSH2 0x412B JUMPI PUSH1 0x14 SLOAD DUP3 DUP5 MUL DUP2 PUSH2 0x4125 JUMPI INVALID JUMPDEST PUSH2 0x4471 DUP4 DUP4 PUSH2 0x4AA8 JUMP JUMPDEST PUSH2 0x447E PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x45FE JUMP JUMPDEST PUSH2 0x149C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x517E PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP4 LT PUSH2 0x44FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x55C2 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x450E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD DUP2 PUSH1 0x1 ADD SLOAD SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 PUSH2 0x45CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4594 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x457C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x45C1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP5 PUSH1 0x0 ADD PUSH1 0x1 DUP3 SUB DUP2 SLOAD DUP2 LT PUSH2 0x45E2 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4612 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4BD6 JUMP JUMPDEST PUSH2 0x461E JUMPI POP PUSH1 0x1 PUSH2 0x383A JUMP JUMPDEST PUSH1 0x60 PUSH2 0x472C PUSH4 0xA85BD01 PUSH1 0xE1 SHL PUSH2 0x4633 PUSH2 0x372C JUMP JUMPDEST DUP9 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x469A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4682 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x46C7 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x517E PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 SWAP1 PUSH2 0x4BDC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1E SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x47B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x47C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x47DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x14 SLOAD PUSH1 0x1D SLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 DUP4 MUL DUP2 PUSH2 0x47F2 JUMPI INVALID JUMPDEST PUSH1 0x1D DUP1 SLOAD PUSH1 0x14 DUP1 SLOAD SWAP2 SWAP1 SWAP2 SUB SWAP1 SSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x1E SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE SWAP5 SWAP1 SWAP4 DIV PUSH1 0x4 DUP6 ADD DUP2 SWAP1 MSTORE SWAP3 MLOAD SWAP3 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH4 0x2E1A7D4D SWAP3 PUSH1 0x24 DUP1 DUP4 ADD SWAP4 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4853 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4867 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x22 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP PUSH4 0xA9059CBB SWAP3 POP PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x48BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x48D3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2560 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x49BD JUMPI DUP4 SLOAD PUSH1 0x0 NOT DUP1 DUP4 ADD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x0 SWAP1 DUP8 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x4934 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x4951 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x1 DUP10 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP5 ADD SWAP1 SSTORE DUP7 SLOAD DUP8 SWAP1 DUP1 PUSH2 0x4981 JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x10EE JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x10EE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49D3 DUP4 DUP4 PUSH2 0x48E9 JUMP JUMPDEST PUSH2 0x4A09 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x10EE JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x10EE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 PUSH2 0x4A76 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP5 DUP2 MSTORE DUP7 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP10 SSTORE PUSH1 0x0 DUP10 DUP2 MSTORE DUP5 DUP2 KECCAK256 SWAP6 MLOAD PUSH1 0x2 SWAP1 SWAP4 MUL SWAP1 SWAP6 ADD SWAP2 DUP3 SSTORE SWAP2 MLOAD SWAP1 DUP3 ADD SSTORE DUP7 SLOAD DUP7 DUP5 MSTORE DUP2 DUP9 ADD SWAP1 SWAP3 MSTORE SWAP3 SWAP1 SWAP2 KECCAK256 SSTORE PUSH2 0x1638 JUMP JUMPDEST DUP3 DUP6 PUSH1 0x0 ADD PUSH1 0x1 DUP4 SUB DUP2 SLOAD DUP2 LT PUSH2 0x4A89 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP2 POP POP PUSH2 0x1638 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4B03 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x4B0C DUP2 PUSH2 0x371F JUMP JUMPDEST ISZERO PUSH2 0x4B5E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x4B6A PUSH1 0x0 DUP4 DUP4 PUSH2 0x149C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x4B8C SWAP1 DUP3 PUSH2 0x433F JUMP JUMPDEST POP PUSH2 0x4B99 PUSH1 0x2 DUP3 DUP5 PUSH2 0x434B JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x383A DUP5 DUP5 PUSH1 0x0 DUP6 DUP6 PUSH2 0x4BF0 DUP6 PUSH2 0x4BD6 JUMP JUMPDEST PUSH2 0x4C41 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x4C80 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x4C61 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4CE2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4CE7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x4CF7 DUP3 DUP3 DUP7 PUSH2 0x4D02 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x4D11 JUMPI POP DUP2 PUSH2 0x1638 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x4D21 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP5 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP5 MLOAD DUP6 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x4594 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x457C JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x4DA9 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x4DD6 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x4DD6 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x4DD6 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x4DBB JUMP JUMPDEST POP PUSH2 0x4DE2 SWAP3 SWAP2 POP PUSH2 0x4DE6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x4DE2 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x4DE7 JUMP INVALID 0x25 CALLER NUMBER PUSH19 0x656374207374796C65203D20276F7061636974 PUSH26 0x3A302E363B6D69782D626C656E642D6D6F64653A6E6F726D616C EXTCODESIZE PUSH7 0x696C6C3A6E6F6E PUSH6 0x3B7374726F6B PUSH6 0x3A2532333062 CODECOPY BALANCE ADDRESS ADDRESS EXTCODESIZE PUSH20 0x74726F6B652D77696474683A31353B7374726F6B PUSH6 0x2D6C696E656A PUSH16 0x696E3A6D697465723B7374726F6B652D PUSH14 0x697465726C696D69743A343B7374 PUSH19 0x6F6B652D6461736861727261793A6E6F6E653B PUSH20 0x74726F6B652D6F7061636974793A313B7061696E PUSH21 0x2D6F726465723A6E6F726D616C27206964203D2027 PUSH19 0x65637439323627207769647468203D20273331 CALLDATALOAD 0x27 KECCAK256 PUSH9 0x6569676874203D2027 CALLER BALANCE CALLDATALOAD 0x27 KECCAK256 PUSH25 0x203D20273137272079203D2027313727202F25334520253343 PUSH19 0x656374207374796C65203D20276F7061636974 PUSH26 0x3A302E33333B6D69782D626C656E642D6D6F64653A6E6F726D61 PUSH13 0x3B66696C6C3A6E6F6E653B7374 PUSH19 0x6F6B653A2532333062393130303B7374726F6B PUSH6 0x2D7769647468 GASPRICE BALANCE 0x2E CODESIZE ORIGIN CALLVALUE CODECOPY CALLDATASIZE EXTCODESIZE PUSH20 0x74726F6B652D6C696E656A6F696E3A6D69746572 EXTCODESIZE PUSH20 0x74726F6B652D6D697465726C696D69743A343B73 PUSH21 0x726F6B652D6461736861727261793A6E6F6E653B73 PUSH21 0x726F6B652D6F7061636974793A313B7061696E742D PUSH16 0x726465723A6E6F726D616C2720696420 RETURNDATASIZE KECCAK256 0x27 PUSH19 0x6563743932362D3427207769647468203D2027 ORIGIN CODESIZE CODESIZE 0x27 KECCAK256 PUSH9 0x6569676874203D2027 ORIGIN CODESIZE CODESIZE 0x27 KECCAK256 PUSH25 0x203D20273331272079203D2027333127202F253345456E756D PUSH6 0x7261626C6553 PUSH6 0x743A20696E64 PUSH6 0x78206F757420 PUSH16 0x6620626F756E64732533437465787420 PUSH25 0x3D2733352720793D273630272020666F6E742D776569676874 RETURNDATASIZE 0x27 PUSH3 0x6F6C64 0x27 KECCAK256 PUSH7 0x696C6C3D276272 PUSH16 0x776E27253345537472696B6520507269 PUSH4 0x653A2533 NUMBER 0x2F PUSH21 0x6578742533452533437465787420783D2733352720 PUSH26 0x3D273735272020666F6E742D7765696768743D27626F6C642720 PUSH7 0x696C6C3D276272 PUSH16 0x776E272533455553444320496E766573 PUSH21 0x65643A2533432F7465787425334525334373766720 PUSH25 0x6D6C6E733D27687474703A2F2F7777772E77332E6F72672F32 ADDRESS ADDRESS ADDRESS 0x2F PUSH20 0x7667272077696474683D27333530272068656967 PUSH9 0x743D27333530272533 GASLIMIT KECCAK256 0x25 CALLER NUMBER PUSH19 0x6563742077696474683D273335302720686569 PUSH8 0x68743D2733353027 KECCAK256 PUSH20 0x74796C653D2766696C6C3A726762283235352C32 CALLDATALOAD CALLDATALOAD 0x2C ORIGIN CALLDATALOAD CALLDATALOAD 0x29 EXTCODESIZE PUSH20 0x74726F6B652D77696474683A333B7374726F6B65 GASPRICE PUSH19 0x676228302C302C302927202F25334545524337 ORIGIN BALANCE GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F206E6F6E20455243373231 MSTORE PUSH6 0x636569766572 KECCAK256 PUSH10 0x6D706C656D656E746572 POP PUSH6 0x7263656E7420 PC KECCAK256 PUSH14 0x75737420636F6E666F726D20746F GASPRICE KECCAK256 BALANCE ADDRESS KECCAK256 EXTCODECOPY RETURNDATASIZE KECCAK256 PC KECCAK256 EXTCODECOPY KECCAK256 BALANCE ADDRESS ADDRESS 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573732533437465787420783D273530252720 PUSH26 0x3D2732332720746578742D616E63686F723D276D6964646C6527 KECCAK256 PUSH7 0x6F6E742D776569 PUSH8 0x68743D27626F6C64 0x27 KECCAK256 PUSH7 0x6F6E742D73697A PUSH6 0x3D27312E3165 PUSH14 0x272066696C6C3D27776869746527 0x25 CALLER GASLIMIT 0x25 CALLER NUMBER PUSH21 0x65787420783D273137352720793D2737352720666F PUSH15 0x742D7765696768743D276E6F726D61 PUSH13 0x272066696C6C3D2762726F776E 0x27 0x25 CALLER GASLIMIT 0x24 GASLIMIT MSTORE NUMBER CALLDATACOPY ORIGIN BALANCE GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 0x27 KECCAK256 PUSH20 0x74726F6B653D2727207374726F6B652D77696474 PUSH9 0x3D2730272066696C6C RETURNDATASIZE 0x27 PUSH8 0x7265656E27202F25 CALLER GASLIMIT PUSH2 0x6C72 PUSH6 0x61647920696E KECCAK256 PUSH17 0x726F63657373206F6620627579696E6720 PUSH5 0x69702E4552 NUMBER CALLDATACOPY ORIGIN BALANCE GASPRICE KECCAK256 PUSH16 0x70657261746F7220717565727920666F PUSH19 0x206E6F6E6578697374656E7420746F6B656E25 CALLER NUMBER PUSH4 0x6972636C PUSH6 0x207374796C65 RETURNDATASIZE 0x27 PUSH7 0x696C6C3A253233 PUSH7 0x66666666663B73 PUSH21 0x726F6B653A2532333030303030303B7374726F6B65 0x2D PUSH24 0x696474683A343B7374726F6B652D6C696E656A6F696E3A72 PUSH16 0x756E643B7374726F6B652D6D69746572 PUSH13 0x696D69743A343B7374726F6B65 0x2D PUSH5 0x6173686172 PUSH19 0x61793A6E6F6E653B7374726F6B652D6F706163 PUSH10 0x74793A302E3332272069 PUSH5 0x3D27706174 PUSH9 0x3834362D3527206378 RETURNDATASIZE 0x27 BALANCE CALLDATACOPY CALLDATALOAD 0x27 KECCAK256 PUSH4 0x793D2732 ADDRESS ADDRESS 0x27 KECCAK256 PUSH19 0x3D27383027202F253345414243444546474849 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392D5F4552433732313A KECCAK256 PUSH2 0x7070 PUSH19 0x6F76652063616C6C6572206973206E6F74206F PUSH24 0x6E6572206E6F7220617070726F76656420666F7220616C6C GASLIMIT MSTORE NUMBER CALLDATACOPY ORIGIN BALANCE GASPRICE KECCAK256 PUSH3 0x616C61 PUSH15 0x636520717565727920666F72207468 PUSH6 0x207A65726F20 PUSH2 0x6464 PUSH19 0x657373253343636972636C65207374796C653D 0x27 PUSH7 0x696C6C3A253233 PUSH7 0x66666666663B73 PUSH21 0x726F6B653A2532333030343562623B7374726F6B65 0x2D PUSH24 0x696474683A312E33383B7374726F6B652D6C696E656A6F69 PUSH15 0x3A726F756E643B7374726F6B652D6F PUSH17 0x61636974793A313B7374726F6B652D6D69 PUSH21 0x65726C696D69743A343B7374726F6B652D64617368 PUSH2 0x7272 PUSH2 0x793A PUSH15 0x6F6E65272069643D27706174683834 CALLDATASIZE 0x27 KECCAK256 PUSH4 0x783D2731 CALLDATACOPY CALLDATALOAD 0x27 KECCAK256 PUSH4 0x793D2732 ADDRESS ADDRESS 0x27 KECCAK256 PUSH19 0x3D2731303027202F253345204552433732313A KECCAK256 PUSH16 0x776E657220717565727920666F72206E PUSH16 0x6E6578697374656E7420746F6B656E25 CALLER NUMBER PUSH21 0x65787420783D273137352720793D2734352720666F PUSH15 0x742D7765696768743D276E6F726D61 PUSH13 0x272066696C6C3D2762726F776E 0x27 0x25 CALLER GASLIMIT 0x24 GASLIMIT PUSH15 0x756D657261626C654D61703A20696E PUSH5 0x6578206F75 PUSH21 0x206F6620626F756E64734552433732313A20617070 PUSH19 0x6F76656420717565727920666F72206E6F6E65 PUSH25 0x697374656E7420746F6B656E2C207B22646973706C61795F74 PUSH26 0x7065223A20226E756D626572222C202274726169745F74797065 0x22 GASPRICE KECCAK256 0x22 DIFFICULTY PUSH10 0x702056616C7565222C20 0x22 PUSH23 0x616C7565223A204552433732314D657461646174613A20 SSTORE MSTORE 0x49 KECCAK256 PUSH20 0x6574206F66206E6F6E6578697374656E7420746F PUSH12 0x656E7B226465736372697074 PUSH10 0x6F6E223A202254686520 0x4E CHAINID SLOAD KECCAK256 PUSH13 0x696D6974206F72646572207468 PUSH2 0x7420 PUSH6 0x61726E73206D PUSH16 0x6E657921222533437465787420783D27 BALANCE CALLDATACOPY CALLDATALOAD 0x27 KECCAK256 PUSH26 0x3D2736302720666F6E742D7765696768743D276E6F726D616C27 KECCAK256 PUSH7 0x696C6C3D276272 PUSH16 0x776E27253345244552433732313A2074 PUSH19 0x616E73666572206F6620746F6B656E20746861 PUSH21 0x206973206E6F74206F776E4552433732314D657461 PUSH5 0x6174613A20 SSTORE MSTORE 0x49 KECCAK256 PUSH18 0x7565727920666F72206E6F6E657869737465 PUSH15 0x7420746F6B656E253343636972636C PUSH6 0x207374796C65 RETURNDATASIZE 0x27 PUSH7 0x696C6C3A253233 PUSH7 0x66666666663B73 PUSH21 0x726F6B653A2532333030343562623B7374726F6B65 0x2D PUSH24 0x696474683A312E33383B7374726F6B652D6C696E656A6F69 PUSH15 0x3A726F756E643B7374726F6B652D6F PUSH17 0x61636974793A313B7374726F6B652D6D69 PUSH21 0x65726C696D69743A343B7374726F6B652D64617368 PUSH2 0x7272 PUSH2 0x793A PUSH15 0x6F6E65272063783D27313735272063 PUSH26 0x3D273230302720723D2731303027202F25334520455243373231 GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F76616C20746F2063757272656E74206F776E PUSH6 0x722C20226578 PUSH21 0x65726E616C5F75726C223A202268747470733A2F2F PUSH24 0x656275797468656469702E636F6D22253343746578742078 RETURNDATASIZE 0x27 BALANCE CALLDATACOPY CALLDATALOAD 0x27 KECCAK256 PUSH26 0x3D2739302720666F6E742D7765696768743D276E6F726D616C27 KECCAK256 PUSH7 0x696C6C3D276272 PUSH16 0x776E2725334525334372656374207374 PUSH26 0x6C653D276F7061636974793A302E33333B66696C6C3A25323331 CALLDATALOAD CALLDATACOPY CALLDATACOPY ADDRESS ADDRESS EXTCODESIZE PUSH7 0x696C6C2D6F7061 PUSH4 0x6974793A ADDRESS 0x2E CALLER CALLER EXTCODESIZE PUSH20 0x74726F6B653A2532333062393130303B7374726F PUSH12 0x652D77696474683A313B7374 PUSH19 0x6F6B652D6C696E656361703A726F756E643B73 PUSH21 0x726F6B652D6C696E656A6F696E3A726F756E643B73 PUSH21 0x726F6B652D6D697465726C696D69743A343B737472 PUSH16 0x6B652D6461736861727261793A6E6F6E PUSH6 0x3B7374726F6B PUSH6 0x2D6F70616369 PUSH21 0x793A313B7061696E742D6F726465723A6E6F726D61 PUSH13 0x272077696474683D2733353027 KECCAK256 PUSH9 0x65696768743D273335 ADDRESS 0x27 KECCAK256 PUSH25 0x3D27302720793D273027202F2533454552433732313A207472 PUSH2 0x6E73 PUSH7 0x65722063616C6C PUSH6 0x72206973206E PUSH16 0x74206F776E6572206E6F722061707072 PUSH16 0x7665642533437465787420783D273335 0x27 KECCAK256 PUSH26 0x3D2739302720666F6E742D7765696768743D27626F6C64272066 PUSH10 0x6C6C3D2762726F776E27 0x25 CALLER GASLIMIT GASLIMIT PUSH15 0x657267793A2533432F746578742533 GASLIMIT 0x25 CALLER NUMBER PUSH21 0x65787420783D2733352720793D2734352720666F6E PUSH21 0x2D7765696768743D27626F6C64272066696C6C3D27 PUSH3 0x726F77 PUSH15 0x2725334543757272656E7420507269 PUSH4 0x653A2533 NUMBER 0x2F PUSH21 0x65787425334525334370617468207374796C653D27 PUSH7 0x696C6C3A6E6F6E PUSH6 0x3B7374726F6B PUSH6 0x3A2532336666 PUSH7 0x6666663B737472 PUSH16 0x6B652D77696474683A31353B7374726F PUSH12 0x652D6C696E656361703A726F PUSH22 0x6E643B7374726F6B652D6C696E656A6F696E3A726F75 PUSH15 0x643B7374726F6B652D6D697465726C PUSH10 0x6D69743A343B7374726F PUSH12 0x652D6F7061636974793A3127 KECCAK256 PUSH5 0x3D276D2031 CALLER CODECOPY 0x2C ORIGIN BALANCE CODESIZE KECCAK256 ORIGIN ADDRESS 0x2E CALLVALUE 0x2C ORIGIN CALLER 0x2E CALLDATACOPY KECCAK256 CALLDATALOAD CALLDATASIZE 0x2E CODECOPY 0x2C 0x2D CALLDATALOAD CALLDATASIZE 0x2E CALLDATASIZE 0x27 KECCAK256 0x2F 0x25 CALLER GASLIMIT KECCAK256 0x25 CALLER NUMBER PUSH21 0x65787420783D2735352720793D2733313827206669 PUSH13 0x6C3D2762726F776E2725334543 PUSH16 0x6E67726174756C6174696F6E73212059 PUSH16 0x7520626F756768742074686520646970 0x2E KECCAK256 0x25 CALLER NUMBER 0x2F PUSH21 0x6578742533452533437465787420783D2735302527 KECCAK256 PUSH26 0x3D273333382720746578742D616E63686F723D276D6964646C65 0x27 KECCAK256 PUSH7 0x6F6E742D776569 PUSH8 0x68743D27626F6C64 0x27 KECCAK256 PUSH7 0x6F6E742D73697A PUSH6 0x3D27312E3165 PUSH14 0x272066696C6C3D27776869746527 0x25 CALLER GASLIMIT KECCAK256 GASLIMIT SLOAD 0x48 GASLIMIT MSTORE GASLIMIT SSTORE 0x4D KECCAK256 0x25 CALLER NUMBER 0x2F PUSH21 0x657874253345253343636972636C65207374796C65 RETURNDATASIZE 0x27 PUSH7 0x696C6C3A253233 PUSH7 0x66666666663B73 PUSH21 0x726F6B653A2532333030303030303B7374726F6B65 0x2D PUSH24 0x696474683A343B7374726F6B652D6C696E656A6F696E3A72 PUSH16 0x756E643B7374726F6B652D6D69746572 PUSH13 0x696D69743A343B7374726F6B65 0x2D PUSH5 0x6173686172 PUSH19 0x61793A6E6F6E653B7374726F6B652D6F706163 PUSH10 0x74793A302E3332272063 PUSH25 0x3D27313735272063793D273230302720723D27383027202F25 CALLER GASLIMIT 0x2C KECCAK256 0x22 PUSH2 0x7474 PUSH19 0x696275746573223A205B7B22646973706C6179 0x5F PUSH21 0x797065223A20226E756D626572222C202274726169 PUSH21 0x5F74797065223A2022446970204C6576656C222C20 0x22 PUSH23 0x616C7565223A20A2646970667358221220A5FC0D345F77 SWAP3 SMOD SDIV PUSH30 0xE6E9CE38C2C99BAF14E2CAFE95A5FDA80DDAF5B5531664736F6C63430006 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "8": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "LT",
      "path": "20"
    },
    "9": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x276"
    },
    "12": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "16": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "SHR",
      "path": "20"
    },
    "19": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "20": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x4F6CCCE7"
    },
    "25": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "GT",
      "path": "20"
    },
    "26": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x14F"
    },
    "29": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "30": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "31": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x8E15F473"
    },
    "36": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "GT",
      "path": "20"
    },
    "37": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xC1"
    },
    "40": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "41": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "42": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xD082E381"
    },
    "47": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "GT",
      "path": "20"
    },
    "48": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7A"
    },
    "51": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "52": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "53": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xD082E381"
    },
    "58": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "59": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xD3F"
    },
    "62": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "63": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "64": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xE985E9C5"
    },
    "69": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "70": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xD54"
    },
    "73": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "74": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "75": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xF2FDE38B"
    },
    "80": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "81": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xD8F"
    },
    "84": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "85": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "86": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFB1B0F29"
    },
    "91": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "92": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xDC2"
    },
    "95": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "96": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "97": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFC4A72FB"
    },
    "102": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "103": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xDEC"
    },
    "106": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "107": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "108": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFD4889C1"
    },
    "113": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "114": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xE01"
    },
    "117": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "118": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2B7"
    },
    "121": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMP",
      "path": "20"
    },
    "122": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "123": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "124": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x8E15F473"
    },
    "129": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "130": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xBAF"
    },
    "133": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "134": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "135": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x95D89B41"
    },
    "140": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "141": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xBC4"
    },
    "144": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "145": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "146": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xA22CB465"
    },
    "151": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "152": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xBD9"
    },
    "155": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "156": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "157": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xAE153E3E"
    },
    "162": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "163": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xC14"
    },
    "166": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "167": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "168": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xB88D4FDE"
    },
    "173": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "174": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xC44"
    },
    "177": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "178": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "179": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xC87B56DD"
    },
    "184": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "185": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xD15"
    },
    "188": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "189": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2B7"
    },
    "192": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMP",
      "path": "20"
    },
    "193": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "194": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "195": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x6E04FF0D"
    },
    "200": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "GT",
      "path": "20"
    },
    "201": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x113"
    },
    "204": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "205": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "206": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x6E04FF0D"
    },
    "211": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "212": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA24"
    },
    "215": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "216": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "217": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x70A08231"
    },
    "222": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "223": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB20"
    },
    "226": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "227": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "228": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x715018A6"
    },
    "233": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "234": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB53"
    },
    "237": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "238": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "239": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x8B772BA4"
    },
    "244": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "245": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB68"
    },
    "248": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "249": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "250": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x8D98EBC1"
    },
    "255": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "256": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB85"
    },
    "259": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "260": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "261": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x8DA5CB5B"
    },
    "266": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "267": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB9A"
    },
    "270": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "271": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2B7"
    },
    "274": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMP",
      "path": "20"
    },
    "275": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "276": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "277": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x4F6CCCE7"
    },
    "282": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "283": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x90E"
    },
    "286": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "287": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "288": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x5D2E1157"
    },
    "293": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "294": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x938"
    },
    "297": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "298": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "299": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x60570068"
    },
    "304": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "305": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x9BB"
    },
    "308": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "309": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "310": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x6352211E"
    },
    "315": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "316": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x9E5"
    },
    "319": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "320": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "321": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x6C0360EB"
    },
    "326": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "327": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA0F"
    },
    "330": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "331": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2B7"
    },
    "334": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMP",
      "path": "20"
    },
    "335": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "336": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "337": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x23B872DD"
    },
    "342": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "GT",
      "path": "20"
    },
    "343": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1E8"
    },
    "346": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "347": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "348": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x42842E0E"
    },
    "353": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "GT",
      "path": "20"
    },
    "354": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1AC"
    },
    "357": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "358": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "359": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x42842E0E"
    },
    "364": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "365": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x790"
    },
    "368": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "369": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "370": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x43413E8A"
    },
    "375": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "376": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7D3"
    },
    "379": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "380": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "381": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x4585E33B"
    },
    "386": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "387": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7F6"
    },
    "390": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "391": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "392": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x4661720A"
    },
    "397": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "398": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x871"
    },
    "401": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "402": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "403": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x47B6B491"
    },
    "408": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "409": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x89B"
    },
    "412": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "413": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "414": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x498A4AF3"
    },
    "419": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "420": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8DB"
    },
    "423": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "424": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2B7"
    },
    "427": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMP",
      "path": "20"
    },
    "428": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "429": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "430": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x23B872DD"
    },
    "435": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "436": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x639"
    },
    "439": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "440": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "441": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x2F745C59"
    },
    "446": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "447": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x67C"
    },
    "450": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "451": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "452": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x30D871C6"
    },
    "457": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "458": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6B5"
    },
    "461": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "462": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "463": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x351C7D35"
    },
    "468": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "469": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x766"
    },
    "472": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "473": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "474": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x355C8973"
    },
    "479": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "480": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x77B"
    },
    "483": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "484": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2B7"
    },
    "487": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMP",
      "path": "20"
    },
    "488": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "489": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "490": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x95EA7B3"
    },
    "495": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "GT",
      "path": "20"
    },
    "496": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x23A"
    },
    "499": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "500": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "501": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x95EA7B3"
    },
    "506": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "507": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4B8"
    },
    "510": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "511": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "512": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xA537537"
    },
    "517": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "518": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4F1"
    },
    "521": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "522": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "523": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x162094C4"
    },
    "528": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "529": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x52D"
    },
    "532": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "533": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "534": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x18160DDD"
    },
    "539": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "540": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5E5"
    },
    "543": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "544": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "545": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x18FF04EE"
    },
    "550": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "551": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5FA"
    },
    "554": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "555": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "556": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x2223C5F1"
    },
    "561": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "562": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x60F"
    },
    "565": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "566": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2B7"
    },
    "569": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMP",
      "path": "20"
    },
    "570": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "571": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "572": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x1FFC9A7"
    },
    "577": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "578": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2BC"
    },
    "581": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "582": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "583": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x419E314"
    },
    "588": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "589": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x304"
    },
    "592": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "593": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "594": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x4276B2F"
    },
    "599": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "600": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x431"
    },
    "603": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "604": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "605": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x6FDDE03"
    },
    "610": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "611": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x45D"
    },
    "614": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "615": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "616": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x81812FC"
    },
    "621": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "EQ",
      "path": "20"
    },
    "622": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x472"
    },
    "625": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "626": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2B7"
    },
    "629": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMP",
      "path": "20"
    },
    "630": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "631": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "632": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2B7"
    },
    "635": {
      "fn": null,
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "636": {
      "fn": "BuyTheDipNFT.<receive>",
      "offset": [
        25998,
        26029
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 0,
      "value": "0x40"
    },
    "638": {
      "fn": "BuyTheDipNFT.<receive>",
      "offset": [
        25998,
        26029
      ],
      "op": "DUP1",
      "path": "20"
    },
    "639": {
      "fn": "BuyTheDipNFT.<receive>",
      "offset": [
        25998,
        26029
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "640": {
      "fn": "BuyTheDipNFT.<receive>",
      "offset": [
        26007,
        26017
      ],
      "op": "CALLER",
      "path": "20"
    },
    "641": {
      "fn": "BuyTheDipNFT.<receive>",
      "offset": [
        25998,
        26029
      ],
      "op": "DUP2",
      "path": "20"
    },
    "642": {
      "fn": "BuyTheDipNFT.<receive>",
      "offset": [
        25998,
        26029
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "643": {
      "fn": "BuyTheDipNFT.<receive>",
      "offset": [
        26019,
        26028
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "644": {
      "fn": "BuyTheDipNFT.<receive>",
      "offset": [
        25998,
        26029
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "646": {
      "fn": "BuyTheDipNFT.<receive>",
      "offset": [
        25998,
        26029
      ],
      "op": "DUP3",
      "path": "20"
    },
    "647": {
      "fn": "BuyTheDipNFT.<receive>",
      "offset": [
        25998,
        26029
      ],
      "op": "ADD",
      "path": "20"
    },
    "648": {
      "fn": "BuyTheDipNFT.<receive>",
      "offset": [
        25998,
        26029
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "649": {
      "fn": "BuyTheDipNFT.<receive>",
      "offset": [
        25998,
        26029
      ],
      "op": "DUP2",
      "path": "20"
    },
    "650": {
      "fn": "BuyTheDipNFT.<receive>",
      "offset": [
        25998,
        26029
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "651": {
      "fn": "BuyTheDipNFT.<receive>",
      "offset": [
        25998,
        26029
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x88A5966D370B9919B20F3E2C13FF65706F196A4E32CC2C12BF57088F88525874"
    },
    "684": {
      "fn": "BuyTheDipNFT.<receive>",
      "offset": [
        25998,
        26029
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "685": {
      "fn": "BuyTheDipNFT.<receive>",
      "offset": [
        25998,
        26029
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "686": {
      "fn": "BuyTheDipNFT.<receive>",
      "offset": [
        25998,
        26029
      ],
      "op": "DUP2",
      "path": "20"
    },
    "687": {
      "fn": "BuyTheDipNFT.<receive>",
      "offset": [
        25998,
        26029
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "688": {
      "fn": "BuyTheDipNFT.<receive>",
      "offset": [
        25998,
        26029
      ],
      "op": "SUB",
      "path": "20"
    },
    "689": {
      "fn": "BuyTheDipNFT.<receive>",
      "offset": [
        25998,
        26029
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "690": {
      "fn": "BuyTheDipNFT.<receive>",
      "offset": [
        25998,
        26029
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "691": {
      "fn": "BuyTheDipNFT.<receive>",
      "offset": [
        25998,
        26029
      ],
      "op": "ADD",
      "path": "20"
    },
    "692": {
      "fn": "BuyTheDipNFT.<receive>",
      "offset": [
        25998,
        26029
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "693": {
      "fn": "BuyTheDipNFT.<receive>",
      "offset": [
        25998,
        26029
      ],
      "op": "LOG1",
      "path": "20"
    },
    "694": {
      "offset": [
        16451,
        47705
      ],
      "op": "STOP",
      "path": "20"
    },
    "695": {
      "fn": "BuyTheDipNFT.<receive>",
      "offset": [
        16451,
        47705
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "696": {
      "fn": "BuyTheDipNFT.<receive>",
      "offset": [
        16451,
        47705
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "698": {
      "fn": "BuyTheDipNFT.<receive>",
      "offset": [
        16451,
        47705
      ],
      "op": "DUP1",
      "path": "20"
    },
    "699": {
      "first_revert": true,
      "fn": "BuyTheDipNFT.<receive>",
      "offset": [
        16451,
        47705
      ],
      "op": "REVERT",
      "path": "20"
    },
    "700": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "701": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "702": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP1",
      "path": "1"
    },
    "703": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "704": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2C8"
    },
    "707": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "708": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "710": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP1",
      "path": "1"
    },
    "711": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "REVERT",
      "path": "1"
    },
    "712": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "713": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "POP",
      "path": "1"
    },
    "714": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2F0"
    },
    "717": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "719": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP1",
      "path": "1"
    },
    "720": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "721": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SUB",
      "path": "1"
    },
    "722": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "724": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP2",
      "path": "1"
    },
    "725": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "LT",
      "path": "1"
    },
    "726": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "727": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2DF"
    },
    "730": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "731": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "733": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP1",
      "path": "1"
    },
    "734": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "REVERT",
      "path": "1"
    },
    "735": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "736": {
      "op": "POP"
    },
    "737": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "738": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "742": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "744": {
      "op": "SHL"
    },
    "745": {
      "op": "SUB"
    },
    "746": {
      "op": "NOT"
    },
    "747": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "AND",
      "path": "1"
    },
    "748": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE2B"
    },
    "751": {
      "fn": "ERC165.supportsInterface",
      "jump": "i",
      "offset": [
        965,
        1113
      ],
      "op": "JUMP",
      "path": "1"
    },
    "752": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "753": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "755": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP1",
      "path": "1"
    },
    "756": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "757": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "758": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "759": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "760": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP3",
      "path": "1"
    },
    "761": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "762": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "763": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "764": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "DUP2",
      "path": "1"
    },
    "765": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "766": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SUB",
      "path": "1"
    },
    "767": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "769": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "ADD",
      "path": "1"
    },
    "770": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "771": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "RETURN",
      "path": "1"
    },
    "772": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "773": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "774": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP1",
      "path": "20"
    },
    "775": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "776": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x310"
    },
    "779": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "780": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "782": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP1",
      "path": "20"
    },
    "783": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "REVERT",
      "path": "20"
    },
    "784": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "785": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "POP",
      "path": "20"
    },
    "786": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3BC"
    },
    "789": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "791": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP1",
      "path": "20"
    },
    "792": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "793": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "SUB",
      "path": "20"
    },
    "794": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "796": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP2",
      "path": "20"
    },
    "797": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "LT",
      "path": "20"
    },
    "798": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "799": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x327"
    },
    "802": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "803": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "805": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP1",
      "path": "20"
    },
    "806": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "REVERT",
      "path": "20"
    },
    "807": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "808": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP2",
      "path": "20"
    },
    "809": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "810": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "811": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "812": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP2",
      "path": "20"
    },
    "813": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "ADD",
      "path": "20"
    },
    "814": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "815": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "817": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP2",
      "path": "20"
    },
    "818": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "ADD",
      "path": "20"
    },
    "819": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "821": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP3",
      "path": "20"
    },
    "822": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "ADD",
      "path": "20"
    },
    "823": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "826": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "828": {
      "op": "SHL"
    },
    "829": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP2",
      "path": "20"
    },
    "830": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "GT",
      "path": "20"
    },
    "831": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "832": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x348"
    },
    "835": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "836": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "838": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP1",
      "path": "20"
    },
    "839": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "REVERT",
      "path": "20"
    },
    "840": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "841": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP3",
      "path": "20"
    },
    "842": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "ADD",
      "path": "20"
    },
    "843": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP4",
      "path": "20"
    },
    "844": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "846": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP3",
      "path": "20"
    },
    "847": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "ADD",
      "path": "20"
    },
    "848": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "GT",
      "path": "20"
    },
    "849": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "850": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x35A"
    },
    "853": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "854": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "856": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP1",
      "path": "20"
    },
    "857": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "REVERT",
      "path": "20"
    },
    "858": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "859": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP1",
      "path": "20"
    },
    "860": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "861": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "862": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "864": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "ADD",
      "path": "20"
    },
    "865": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "866": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP5",
      "path": "20"
    },
    "867": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "869": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP4",
      "path": "20"
    },
    "870": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "MUL",
      "path": "20"
    },
    "871": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP5",
      "path": "20"
    },
    "872": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "ADD",
      "path": "20"
    },
    "873": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "GT",
      "path": "20"
    },
    "874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "876": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "878": {
      "op": "SHL"
    },
    "879": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP4",
      "path": "20"
    },
    "880": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "GT",
      "path": "20"
    },
    "881": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "OR",
      "path": "20"
    },
    "882": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "883": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x37B"
    },
    "886": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "887": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "889": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP1",
      "path": "20"
    },
    "890": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "REVERT",
      "path": "20"
    },
    "891": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "892": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "893": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "894": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP1",
      "path": "20"
    },
    "895": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP1",
      "path": "20"
    },
    "896": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "898": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "ADD",
      "path": "20"
    },
    "899": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "901": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP1",
      "path": "20"
    },
    "902": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "903": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DIV",
      "path": "20"
    },
    "904": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "MUL",
      "path": "20"
    },
    "905": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "907": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "ADD",
      "path": "20"
    },
    "908": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "910": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "911": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "912": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP2",
      "path": "20"
    },
    "913": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "ADD",
      "path": "20"
    },
    "914": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "916": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "917": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP1",
      "path": "20"
    },
    "918": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "919": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "920": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "921": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "922": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP2",
      "path": "20"
    },
    "923": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP2",
      "path": "20"
    },
    "924": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "925": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "927": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "ADD",
      "path": "20"
    },
    "928": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP4",
      "path": "20"
    },
    "929": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP4",
      "path": "20"
    },
    "930": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP1",
      "path": "20"
    },
    "931": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP3",
      "path": "20"
    },
    "932": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP5",
      "path": "20"
    },
    "933": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "CALLDATACOPY",
      "path": "20"
    },
    "934": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "936": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "937": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "ADD",
      "path": "20"
    },
    "938": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "939": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "940": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "941": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "942": {
      "op": "POP"
    },
    "943": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "944": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "945": {
      "op": "POP"
    },
    "946": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xE4E"
    },
    "949": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "950": {
      "op": "POP"
    },
    "951": {
      "op": "POP"
    },
    "952": {
      "op": "POP"
    },
    "953": {
      "op": "POP"
    },
    "954": {
      "op": "POP"
    },
    "955": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "jump": "i",
      "offset": [
        39828,
        42185
      ],
      "op": "JUMP",
      "path": "20"
    },
    "956": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "957": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "959": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP1",
      "path": "20"
    },
    "960": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "961": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "963": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP1",
      "path": "20"
    },
    "964": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP3",
      "path": "20"
    },
    "965": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "966": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP4",
      "path": "20"
    },
    "967": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "968": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP2",
      "path": "20"
    },
    "969": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP4",
      "path": "20"
    },
    "970": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "ADD",
      "path": "20"
    },
    "971": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "972": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP4",
      "path": "20"
    },
    "973": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "974": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "975": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "976": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP4",
      "path": "20"
    },
    "977": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "978": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "979": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP4",
      "path": "20"
    },
    "980": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "ADD",
      "path": "20"
    },
    "981": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "982": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP6",
      "path": "20"
    },
    "983": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "ADD",
      "path": "20"
    },
    "984": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "985": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP1",
      "path": "20"
    },
    "986": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP4",
      "path": "20"
    },
    "987": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP4",
      "path": "20"
    },
    "988": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "990": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "991": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP4",
      "path": "20"
    },
    "992": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP2",
      "path": "20"
    },
    "993": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "LT",
      "path": "20"
    },
    "994": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "995": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3F6"
    },
    "998": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "999": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1000": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1001": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "ADD",
      "path": "20"
    },
    "1002": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1003": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1004": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1005": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "ADD",
      "path": "20"
    },
    "1006": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1007": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1009": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "ADD",
      "path": "20"
    },
    "1010": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3DE"
    },
    "1013": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1014": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1015": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "POP",
      "path": "20"
    },
    "1016": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "POP",
      "path": "20"
    },
    "1017": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "POP",
      "path": "20"
    },
    "1018": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "POP",
      "path": "20"
    },
    "1019": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1020": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "POP",
      "path": "20"
    },
    "1021": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1022": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1023": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "ADD",
      "path": "20"
    },
    "1024": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1025": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "1027": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "AND",
      "path": "20"
    },
    "1028": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1029": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1030": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x423"
    },
    "1033": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1034": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1035": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1036": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "SUB",
      "path": "20"
    },
    "1037": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1038": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1039": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "1041": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1042": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1044": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "SUB",
      "path": "20"
    },
    "1045": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "1048": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "EXP",
      "path": "20"
    },
    "1049": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "SUB",
      "path": "20"
    },
    "1050": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "NOT",
      "path": "20"
    },
    "1051": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "AND",
      "path": "20"
    },
    "1052": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1053": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1054": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1056": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "ADD",
      "path": "20"
    },
    "1057": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1058": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "POP",
      "path": "20"
    },
    "1059": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1060": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "POP",
      "path": "20"
    },
    "1061": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1062": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "POP",
      "path": "20"
    },
    "1063": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "POP",
      "path": "20"
    },
    "1064": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "POP",
      "path": "20"
    },
    "1065": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1067": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1068": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1069": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1070": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "SUB",
      "path": "20"
    },
    "1071": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1072": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "RETURN",
      "path": "20"
    },
    "1073": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28491,
        29574
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1074": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28491,
        29574
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1075": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28491,
        29574
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1076": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28491,
        29574
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1077": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28491,
        29574
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x43D"
    },
    "1080": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28491,
        29574
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1081": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28491,
        29574
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1083": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28491,
        29574
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1084": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28491,
        29574
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1085": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28491,
        29574
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1086": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28491,
        29574
      ],
      "op": "POP",
      "path": "20"
    },
    "1087": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28491,
        29574
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x45B"
    },
    "1090": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28491,
        29574
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1092": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28491,
        29574
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1093": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28491,
        29574
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1094": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28491,
        29574
      ],
      "op": "SUB",
      "path": "20"
    },
    "1095": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28491,
        29574
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1097": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28491,
        29574
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1098": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28491,
        29574
      ],
      "op": "LT",
      "path": "20"
    },
    "1099": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28491,
        29574
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1100": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28491,
        29574
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x454"
    },
    "1103": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28491,
        29574
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1104": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28491,
        29574
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1106": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28491,
        29574
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1107": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28491,
        29574
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1108": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28491,
        29574
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1109": {
      "op": "POP"
    },
    "1110": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28491,
        29574
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "1111": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28491,
        29574
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x10F4"
    },
    "1114": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "jump": "i",
      "offset": [
        28491,
        29574
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1115": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28491,
        29574
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1116": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28491,
        29574
      ],
      "op": "STOP",
      "path": "20"
    },
    "1117": {
      "fn": "ERC721.name",
      "offset": [
        4517,
        4615
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1118": {
      "fn": "ERC721.name",
      "offset": [
        4517,
        4615
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "1119": {
      "fn": "ERC721.name",
      "offset": [
        4517,
        4615
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1120": {
      "fn": "ERC721.name",
      "offset": [
        4517,
        4615
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1121": {
      "fn": "ERC721.name",
      "offset": [
        4517,
        4615
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x469"
    },
    "1124": {
      "fn": "ERC721.name",
      "offset": [
        4517,
        4615
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1125": {
      "fn": "ERC721.name",
      "offset": [
        4517,
        4615
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1127": {
      "fn": "ERC721.name",
      "offset": [
        4517,
        4615
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1128": {
      "fn": "ERC721.name",
      "offset": [
        4517,
        4615
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1129": {
      "fn": "ERC721.name",
      "offset": [
        4517,
        4615
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1130": {
      "fn": "ERC721.name",
      "offset": [
        4517,
        4615
      ],
      "op": "POP",
      "path": "4"
    },
    "1131": {
      "fn": "ERC721.name",
      "offset": [
        4517,
        4615
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3BC"
    },
    "1134": {
      "fn": "ERC721.name",
      "offset": [
        4517,
        4615
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12CE"
    },
    "1137": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        4517,
        4615
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1138": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1139": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "1140": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1141": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1142": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x47E"
    },
    "1145": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1146": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1148": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1149": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1150": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1151": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "POP",
      "path": "4"
    },
    "1152": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x49C"
    },
    "1155": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1157": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1158": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "1159": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "SUB",
      "path": "4"
    },
    "1160": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1162": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1163": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "LT",
      "path": "4"
    },
    "1164": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1165": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x495"
    },
    "1168": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1169": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1171": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1172": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1173": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1174": {
      "op": "POP"
    },
    "1175": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "1176": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1364"
    },
    "1179": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        7222,
        7439
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1180": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1181": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1183": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1184": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1189": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1191": {
      "op": "SHL"
    },
    "1192": {
      "op": "SUB"
    },
    "1193": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1194": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1195": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "AND",
      "path": "4"
    },
    "1196": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1197": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1198": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1199": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1200": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1201": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1202": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "SUB",
      "path": "4"
    },
    "1203": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1205": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "ADD",
      "path": "4"
    },
    "1206": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1207": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "RETURN",
      "path": "4"
    },
    "1208": {
      "fn": "ERC721.approve",
      "offset": [
        6766,
        7161
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1209": {
      "fn": "ERC721.approve",
      "offset": [
        6766,
        7161
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "1210": {
      "fn": "ERC721.approve",
      "offset": [
        6766,
        7161
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1211": {
      "fn": "ERC721.approve",
      "offset": [
        6766,
        7161
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1212": {
      "fn": "ERC721.approve",
      "offset": [
        6766,
        7161
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4C4"
    },
    "1215": {
      "fn": "ERC721.approve",
      "offset": [
        6766,
        7161
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1216": {
      "fn": "ERC721.approve",
      "offset": [
        6766,
        7161
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1218": {
      "fn": "ERC721.approve",
      "offset": [
        6766,
        7161
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1219": {
      "fn": "ERC721.approve",
      "offset": [
        6766,
        7161
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1220": {
      "fn": "ERC721.approve",
      "offset": [
        6766,
        7161
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1221": {
      "fn": "ERC721.approve",
      "offset": [
        6766,
        7161
      ],
      "op": "POP",
      "path": "4"
    },
    "1222": {
      "fn": "ERC721.approve",
      "offset": [
        6766,
        7161
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x45B"
    },
    "1225": {
      "fn": "ERC721.approve",
      "offset": [
        6766,
        7161
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1227": {
      "fn": "ERC721.approve",
      "offset": [
        6766,
        7161
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1228": {
      "fn": "ERC721.approve",
      "offset": [
        6766,
        7161
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "1229": {
      "fn": "ERC721.approve",
      "offset": [
        6766,
        7161
      ],
      "op": "SUB",
      "path": "4"
    },
    "1230": {
      "fn": "ERC721.approve",
      "offset": [
        6766,
        7161
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1232": {
      "fn": "ERC721.approve",
      "offset": [
        6766,
        7161
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1233": {
      "fn": "ERC721.approve",
      "offset": [
        6766,
        7161
      ],
      "op": "LT",
      "path": "4"
    },
    "1234": {
      "fn": "ERC721.approve",
      "offset": [
        6766,
        7161
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1235": {
      "fn": "ERC721.approve",
      "offset": [
        6766,
        7161
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4DB"
    },
    "1238": {
      "fn": "ERC721.approve",
      "offset": [
        6766,
        7161
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1239": {
      "fn": "ERC721.approve",
      "offset": [
        6766,
        7161
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1241": {
      "fn": "ERC721.approve",
      "offset": [
        6766,
        7161
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1242": {
      "fn": "ERC721.approve",
      "offset": [
        6766,
        7161
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1243": {
      "fn": "ERC721.approve",
      "offset": [
        6766,
        7161
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1244": {
      "op": "POP"
    },
    "1245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1249": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1251": {
      "op": "SHL"
    },
    "1252": {
      "op": "SUB"
    },
    "1253": {
      "fn": "ERC721.approve",
      "offset": [
        6766,
        7161
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1254": {
      "fn": "ERC721.approve",
      "offset": [
        6766,
        7161
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "1255": {
      "fn": "ERC721.approve",
      "offset": [
        6766,
        7161
      ],
      "op": "AND",
      "path": "4"
    },
    "1256": {
      "fn": "ERC721.approve",
      "offset": [
        6766,
        7161
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1257": {
      "fn": "ERC721.approve",
      "offset": [
        6766,
        7161
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1259": {
      "fn": "ERC721.approve",
      "offset": [
        6766,
        7161
      ],
      "op": "ADD",
      "path": "4"
    },
    "1260": {
      "fn": "ERC721.approve",
      "offset": [
        6766,
        7161
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "1261": {
      "fn": "ERC721.approve",
      "offset": [
        6766,
        7161
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13C6"
    },
    "1264": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        6766,
        7161
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1265": {
      "offset": [
        16689,
        16741
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1266": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1267": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1268": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1269": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4FD"
    },
    "1272": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1273": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1275": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1276": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1277": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1278": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "POP",
      "path": "20"
    },
    "1279": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x51B"
    },
    "1282": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1284": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1285": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1286": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "SUB",
      "path": "20"
    },
    "1287": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1289": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1290": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "LT",
      "path": "20"
    },
    "1291": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1292": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x514"
    },
    "1295": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1296": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1298": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1299": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1300": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1301": {
      "op": "POP"
    },
    "1302": {
      "offset": [
        16689,
        16741
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "1303": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x14A1"
    },
    "1306": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        16689,
        16741
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1307": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1308": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1310": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1311": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1312": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1313": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1314": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1315": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1316": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1317": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1318": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1319": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "SUB",
      "path": "20"
    },
    "1320": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1322": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "ADD",
      "path": "20"
    },
    "1323": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1324": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "RETURN",
      "path": "20"
    },
    "1325": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1326": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1327": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1328": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1329": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x539"
    },
    "1332": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1333": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1335": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1336": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1337": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1338": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "POP",
      "path": "20"
    },
    "1339": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x45B"
    },
    "1342": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1344": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1345": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1346": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "SUB",
      "path": "20"
    },
    "1347": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1349": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1350": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "LT",
      "path": "20"
    },
    "1351": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1352": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x550"
    },
    "1355": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1356": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1358": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1359": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1360": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1361": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1362": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "1363": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1364": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1365": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1366": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "ADD",
      "path": "20"
    },
    "1367": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1368": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1370": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1371": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "ADD",
      "path": "20"
    },
    "1372": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1374": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1375": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "ADD",
      "path": "20"
    },
    "1376": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "1377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1379": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1381": {
      "op": "SHL"
    },
    "1382": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1383": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "GT",
      "path": "20"
    },
    "1384": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1385": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x571"
    },
    "1388": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1389": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1391": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1392": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1393": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1394": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1395": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "ADD",
      "path": "20"
    },
    "1396": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1397": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1399": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1400": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "ADD",
      "path": "20"
    },
    "1401": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "GT",
      "path": "20"
    },
    "1402": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1403": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x583"
    },
    "1406": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1407": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1409": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1410": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1411": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1412": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1413": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "1414": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1415": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1417": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "ADD",
      "path": "20"
    },
    "1418": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1419": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "DUP5",
      "path": "20"
    },
    "1420": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "1422": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1423": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "MUL",
      "path": "20"
    },
    "1424": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "DUP5",
      "path": "20"
    },
    "1425": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "ADD",
      "path": "20"
    },
    "1426": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "GT",
      "path": "20"
    },
    "1427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1429": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1431": {
      "op": "SHL"
    },
    "1432": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1433": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "GT",
      "path": "20"
    },
    "1434": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "OR",
      "path": "20"
    },
    "1435": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1436": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5A4"
    },
    "1439": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1440": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1442": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1443": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1444": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1445": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1446": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1447": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1448": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1449": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "1451": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "ADD",
      "path": "20"
    },
    "1452": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1454": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1455": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1456": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "DIV",
      "path": "20"
    },
    "1457": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "MUL",
      "path": "20"
    },
    "1458": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1460": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "ADD",
      "path": "20"
    },
    "1461": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1463": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1464": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1465": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1466": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "ADD",
      "path": "20"
    },
    "1467": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1469": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1470": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1471": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "1472": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1473": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1474": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1475": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1476": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1477": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1478": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1480": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "ADD",
      "path": "20"
    },
    "1481": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1482": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1483": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1484": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1485": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "DUP5",
      "path": "20"
    },
    "1486": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "CALLDATACOPY",
      "path": "20"
    },
    "1487": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1489": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1490": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "ADD",
      "path": "20"
    },
    "1491": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1492": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1493": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1494": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1495": {
      "op": "POP"
    },
    "1496": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1497": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "1498": {
      "op": "POP"
    },
    "1499": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x14B3"
    },
    "1502": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "1503": {
      "op": "POP"
    },
    "1504": {
      "op": "POP"
    },
    "1505": {
      "op": "POP"
    },
    "1506": {
      "op": "POP"
    },
    "1507": {
      "op": "POP"
    },
    "1508": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "jump": "i",
      "offset": [
        25653,
        25919
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1509": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6260,
        6468
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1510": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6260,
        6468
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "1511": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6260,
        6468
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1512": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6260,
        6468
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1513": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6260,
        6468
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5F1"
    },
    "1516": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6260,
        6468
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1517": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6260,
        6468
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1519": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6260,
        6468
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1520": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6260,
        6468
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1521": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6260,
        6468
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1522": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6260,
        6468
      ],
      "op": "POP",
      "path": "4"
    },
    "1523": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6260,
        6468
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x51B"
    },
    "1526": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6260,
        6468
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x150D"
    },
    "1529": {
      "fn": "ERC721.totalSupply",
      "jump": "i",
      "offset": [
        6260,
        6468
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1530": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30497,
        31118
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1531": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30497,
        31118
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1532": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30497,
        31118
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1533": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30497,
        31118
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1534": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30497,
        31118
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x606"
    },
    "1537": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30497,
        31118
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1538": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30497,
        31118
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1540": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30497,
        31118
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1541": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30497,
        31118
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1542": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30497,
        31118
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1543": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30497,
        31118
      ],
      "op": "POP",
      "path": "20"
    },
    "1544": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30497,
        31118
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x45B"
    },
    "1547": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30497,
        31118
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x151E"
    },
    "1550": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "jump": "i",
      "offset": [
        30497,
        31118
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1551": {
      "offset": [
        17020,
        17070
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1552": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        17020,
        17070
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1553": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        17020,
        17070
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1554": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        17020,
        17070
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1555": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        17020,
        17070
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x61B"
    },
    "1558": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        17020,
        17070
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1559": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        17020,
        17070
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1561": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        17020,
        17070
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1562": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        17020,
        17070
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1563": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        17020,
        17070
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1564": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        17020,
        17070
      ],
      "op": "POP",
      "path": "20"
    },
    "1565": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        17020,
        17070
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x51B"
    },
    "1568": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        17020,
        17070
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1570": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        17020,
        17070
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1571": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        17020,
        17070
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1572": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        17020,
        17070
      ],
      "op": "SUB",
      "path": "20"
    },
    "1573": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        17020,
        17070
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1575": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        17020,
        17070
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1576": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        17020,
        17070
      ],
      "op": "LT",
      "path": "20"
    },
    "1577": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        17020,
        17070
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1578": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        17020,
        17070
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x632"
    },
    "1581": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        17020,
        17070
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1582": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        17020,
        17070
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1584": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        17020,
        17070
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1585": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        17020,
        17070
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1586": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        17020,
        17070
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1587": {
      "op": "POP"
    },
    "1588": {
      "offset": [
        17020,
        17070
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "1589": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        17020,
        17070
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x15AD"
    },
    "1592": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "jump": "i",
      "offset": [
        17020,
        17070
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1593": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1594": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "1595": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1596": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1597": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x645"
    },
    "1600": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1601": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1603": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1604": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1605": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1606": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "POP",
      "path": "4"
    },
    "1607": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x45B"
    },
    "1610": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1612": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1613": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "1614": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "SUB",
      "path": "4"
    },
    "1615": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "1617": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1618": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "LT",
      "path": "4"
    },
    "1619": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1620": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x65C"
    },
    "1623": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1624": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1626": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1627": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1628": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1629": {
      "op": "POP"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1634": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1636": {
      "op": "SHL"
    },
    "1637": {
      "op": "SUB"
    },
    "1638": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1639": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "1640": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1641": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "AND",
      "path": "4"
    },
    "1642": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1643": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1645": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1646": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "ADD",
      "path": "4"
    },
    "1647": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "1648": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1649": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1650": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "AND",
      "path": "4"
    },
    "1651": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1652": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1654": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "ADD",
      "path": "4"
    },
    "1655": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "1656": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15BF"
    },
    "1659": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        8086,
        8386
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1660": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6029,
        6189
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1661": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6029,
        6189
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "1662": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6029,
        6189
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1663": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6029,
        6189
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1664": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6029,
        6189
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x688"
    },
    "1667": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6029,
        6189
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1668": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6029,
        6189
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1670": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6029,
        6189
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1671": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6029,
        6189
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1672": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6029,
        6189
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1673": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6029,
        6189
      ],
      "op": "POP",
      "path": "4"
    },
    "1674": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6029,
        6189
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x51B"
    },
    "1677": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6029,
        6189
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1679": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6029,
        6189
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1680": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6029,
        6189
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "1681": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6029,
        6189
      ],
      "op": "SUB",
      "path": "4"
    },
    "1682": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6029,
        6189
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1684": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6029,
        6189
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1685": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6029,
        6189
      ],
      "op": "LT",
      "path": "4"
    },
    "1686": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6029,
        6189
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1687": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6029,
        6189
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x69F"
    },
    "1690": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6029,
        6189
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1691": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6029,
        6189
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1693": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6029,
        6189
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1694": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6029,
        6189
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1695": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6029,
        6189
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1696": {
      "op": "POP"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1701": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1703": {
      "op": "SHL"
    },
    "1704": {
      "op": "SUB"
    },
    "1705": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6029,
        6189
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1706": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6029,
        6189
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "1707": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6029,
        6189
      ],
      "op": "AND",
      "path": "4"
    },
    "1708": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6029,
        6189
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1709": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6029,
        6189
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1711": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6029,
        6189
      ],
      "op": "ADD",
      "path": "4"
    },
    "1712": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6029,
        6189
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "1713": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6029,
        6189
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1616"
    },
    "1716": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        6029,
        6189
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1717": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1718": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1719": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1720": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1721": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6C1"
    },
    "1724": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1725": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1727": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1728": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1729": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1730": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "POP",
      "path": "20"
    },
    "1731": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3BC"
    },
    "1734": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "1736": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1737": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "1738": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "SUB",
      "path": "20"
    },
    "1739": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1741": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1742": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "LT",
      "path": "20"
    },
    "1743": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1744": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6D8"
    },
    "1747": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1748": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1750": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1751": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1752": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1753": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1754": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "ADD",
      "path": "20"
    },
    "1755": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1756": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1758": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1759": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "ADD",
      "path": "20"
    },
    "1760": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1761": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "1762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1764": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1766": {
      "op": "SHL"
    },
    "1767": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1768": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "GT",
      "path": "20"
    },
    "1769": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1770": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x6F2"
    },
    "1773": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1774": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1776": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1777": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1778": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1779": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1780": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "ADD",
      "path": "20"
    },
    "1781": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1782": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1784": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1785": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "ADD",
      "path": "20"
    },
    "1786": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "GT",
      "path": "20"
    },
    "1787": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1788": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x704"
    },
    "1791": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1792": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1794": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1795": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1796": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1797": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1798": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "1799": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1800": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1802": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "ADD",
      "path": "20"
    },
    "1803": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1804": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "DUP5",
      "path": "20"
    },
    "1805": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "1807": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1808": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "MUL",
      "path": "20"
    },
    "1809": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "DUP5",
      "path": "20"
    },
    "1810": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "ADD",
      "path": "20"
    },
    "1811": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "GT",
      "path": "20"
    },
    "1812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1814": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1816": {
      "op": "SHL"
    },
    "1817": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1818": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "GT",
      "path": "20"
    },
    "1819": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "OR",
      "path": "20"
    },
    "1820": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1821": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x725"
    },
    "1824": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1825": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1827": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1828": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1829": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1830": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1831": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1832": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1833": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1834": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "1836": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "ADD",
      "path": "20"
    },
    "1837": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1839": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1840": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1841": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "DIV",
      "path": "20"
    },
    "1842": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "MUL",
      "path": "20"
    },
    "1843": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1845": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "ADD",
      "path": "20"
    },
    "1846": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1848": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "1849": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1850": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1851": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "ADD",
      "path": "20"
    },
    "1852": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "1854": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1855": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1856": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "1857": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1858": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1859": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1860": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1861": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "DUP2",
      "path": "20"
    },
    "1862": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1863": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "1865": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "ADD",
      "path": "20"
    },
    "1866": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1867": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "DUP4",
      "path": "20"
    },
    "1868": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1869": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "DUP3",
      "path": "20"
    },
    "1870": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "DUP5",
      "path": "20"
    },
    "1871": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "CALLDATACOPY",
      "path": "20"
    },
    "1872": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1874": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1875": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "ADD",
      "path": "20"
    },
    "1876": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1877": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "1878": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "1879": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "1880": {
      "op": "POP"
    },
    "1881": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "1882": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "1883": {
      "op": "POP"
    },
    "1884": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x163F"
    },
    "1887": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "1888": {
      "op": "POP"
    },
    "1889": {
      "op": "POP"
    },
    "1890": {
      "op": "POP"
    },
    "1891": {
      "op": "POP"
    },
    "1892": {
      "op": "POP"
    },
    "1893": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "jump": "i",
      "offset": [
        38647,
        39208
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1894": {
      "offset": [
        20771,
        20790
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1895": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        20771,
        20790
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1896": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        20771,
        20790
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1897": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        20771,
        20790
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1898": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        20771,
        20790
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x772"
    },
    "1901": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        20771,
        20790
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1902": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        20771,
        20790
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1904": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        20771,
        20790
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1905": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        20771,
        20790
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1906": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        20771,
        20790
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1907": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        20771,
        20790
      ],
      "op": "POP",
      "path": "20"
    },
    "1908": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        20771,
        20790
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x49C"
    },
    "1911": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        20771,
        20790
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x17FD"
    },
    "1914": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "jump": "i",
      "offset": [
        20771,
        20790
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1915": {
      "offset": [
        17785,
        17814
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1916": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        17785,
        17814
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "1917": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        17785,
        17814
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1918": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        17785,
        17814
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "1919": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        17785,
        17814
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x787"
    },
    "1922": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        17785,
        17814
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "1923": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        17785,
        17814
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "1925": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        17785,
        17814
      ],
      "op": "DUP1",
      "path": "20"
    },
    "1926": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        17785,
        17814
      ],
      "op": "REVERT",
      "path": "20"
    },
    "1927": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        17785,
        17814
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "1928": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        17785,
        17814
      ],
      "op": "POP",
      "path": "20"
    },
    "1929": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        17785,
        17814
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x49C"
    },
    "1932": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        17785,
        17814
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x180C"
    },
    "1935": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "jump": "i",
      "offset": [
        17785,
        17814
      ],
      "op": "JUMP",
      "path": "20"
    },
    "1936": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1937": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "1938": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1939": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1940": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x79C"
    },
    "1943": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1944": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1946": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1947": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1948": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1949": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "POP",
      "path": "4"
    },
    "1950": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x45B"
    },
    "1953": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1955": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1956": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "1957": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "SUB",
      "path": "4"
    },
    "1958": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "1960": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1961": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "LT",
      "path": "4"
    },
    "1962": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1963": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7B3"
    },
    "1966": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1967": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1969": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1970": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1971": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1972": {
      "op": "POP"
    },
    "1973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1977": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1979": {
      "op": "SHL"
    },
    "1980": {
      "op": "SUB"
    },
    "1981": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1982": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "1983": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1984": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "AND",
      "path": "4"
    },
    "1985": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1986": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1988": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1989": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "ADD",
      "path": "4"
    },
    "1990": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "1991": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1992": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1993": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "AND",
      "path": "4"
    },
    "1994": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1995": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1997": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "ADD",
      "path": "4"
    },
    "1998": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "1999": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x181B"
    },
    "2002": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        8452,
        8601
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2003": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22118,
        24448
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2004": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22118,
        24448
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x51B"
    },
    "2007": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22118,
        24448
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2009": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22118,
        24448
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2010": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22118,
        24448
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "2011": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22118,
        24448
      ],
      "op": "SUB",
      "path": "20"
    },
    "2012": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22118,
        24448
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2014": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22118,
        24448
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2015": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22118,
        24448
      ],
      "op": "LT",
      "path": "20"
    },
    "2016": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22118,
        24448
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2017": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22118,
        24448
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x7E9"
    },
    "2020": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22118,
        24448
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2021": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22118,
        24448
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2023": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22118,
        24448
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2024": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22118,
        24448
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2025": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22118,
        24448
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2026": {
      "op": "POP"
    },
    "2027": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22118,
        24448
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "2028": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22118,
        24448
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "2033": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22118,
        24448
      ],
      "op": "AND",
      "path": "20"
    },
    "2034": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22118,
        24448
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1836"
    },
    "2037": {
      "fn": "BuyTheDipNFT.createCollectible",
      "jump": "i",
      "offset": [
        22118,
        24448
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2038": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2039": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "2040": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2041": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2042": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x802"
    },
    "2045": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2046": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2048": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2049": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2050": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2051": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "POP",
      "path": "20"
    },
    "2052": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x45B"
    },
    "2055": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2057": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2058": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "2059": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "SUB",
      "path": "20"
    },
    "2060": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2062": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2063": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "LT",
      "path": "20"
    },
    "2064": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2065": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x819"
    },
    "2068": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2069": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2071": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2072": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2073": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2074": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2075": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "ADD",
      "path": "20"
    },
    "2076": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2077": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2079": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2080": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "ADD",
      "path": "20"
    },
    "2081": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2082": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "2083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2085": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2087": {
      "op": "SHL"
    },
    "2088": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2089": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "GT",
      "path": "20"
    },
    "2090": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2091": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x833"
    },
    "2094": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2095": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2097": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2098": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2099": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2100": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2101": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "ADD",
      "path": "20"
    },
    "2102": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2103": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2105": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2106": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "ADD",
      "path": "20"
    },
    "2107": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "GT",
      "path": "20"
    },
    "2108": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2109": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x845"
    },
    "2112": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2113": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2115": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2116": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2117": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2118": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2119": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "2120": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2121": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2123": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "ADD",
      "path": "20"
    },
    "2124": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2125": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "DUP5",
      "path": "20"
    },
    "2126": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "2128": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2129": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "MUL",
      "path": "20"
    },
    "2130": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "DUP5",
      "path": "20"
    },
    "2131": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "ADD",
      "path": "20"
    },
    "2132": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "GT",
      "path": "20"
    },
    "2133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2135": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2137": {
      "op": "SHL"
    },
    "2138": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2139": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "GT",
      "path": "20"
    },
    "2140": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "OR",
      "path": "20"
    },
    "2141": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2142": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x866"
    },
    "2145": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2146": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2148": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2149": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2150": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2151": {
      "op": "POP"
    },
    "2152": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2153": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "2154": {
      "op": "POP"
    },
    "2155": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2156": {
      "op": "POP"
    },
    "2157": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        30393,
        30491
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1509"
    },
    "2160": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "jump": "i",
      "offset": [
        30393,
        30491
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2161": {
      "offset": [
        16763,
        16817
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2162": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16763,
        16817
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "2163": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16763,
        16817
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2164": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16763,
        16817
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2165": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16763,
        16817
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x87D"
    },
    "2168": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16763,
        16817
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2169": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16763,
        16817
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2171": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16763,
        16817
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2172": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16763,
        16817
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2173": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16763,
        16817
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2174": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16763,
        16817
      ],
      "op": "POP",
      "path": "20"
    },
    "2175": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16763,
        16817
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x51B"
    },
    "2178": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16763,
        16817
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2180": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16763,
        16817
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2181": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16763,
        16817
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "2182": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16763,
        16817
      ],
      "op": "SUB",
      "path": "20"
    },
    "2183": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16763,
        16817
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2185": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16763,
        16817
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2186": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16763,
        16817
      ],
      "op": "LT",
      "path": "20"
    },
    "2187": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16763,
        16817
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2188": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16763,
        16817
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x894"
    },
    "2191": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16763,
        16817
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2192": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16763,
        16817
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2194": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16763,
        16817
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2195": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16763,
        16817
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2196": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16763,
        16817
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2197": {
      "op": "POP"
    },
    "2198": {
      "offset": [
        16763,
        16817
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "2199": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16763,
        16817
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1AAC"
    },
    "2202": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "jump": "i",
      "offset": [
        16763,
        16817
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2203": {
      "offset": [
        16591,
        16641
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2204": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "2205": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2206": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2207": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8A7"
    },
    "2210": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2211": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2213": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2214": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2215": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2216": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "POP",
      "path": "20"
    },
    "2217": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8C5"
    },
    "2220": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2222": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2223": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "2224": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "SUB",
      "path": "20"
    },
    "2225": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2227": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2228": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "LT",
      "path": "20"
    },
    "2229": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2230": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8BE"
    },
    "2233": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2234": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2236": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2237": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2238": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2239": {
      "op": "POP"
    },
    "2240": {
      "offset": [
        16591,
        16641
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "2241": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1ABE"
    },
    "2244": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "jump": "i",
      "offset": [
        16591,
        16641
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2245": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2246": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2248": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2249": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2250": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "2252": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2253": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "2254": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "AND",
      "path": "20"
    },
    "2255": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2256": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2257": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2258": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2259": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2260": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2261": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "SUB",
      "path": "20"
    },
    "2262": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2264": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "ADD",
      "path": "20"
    },
    "2265": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2266": {
      "fn": "BuyTheDipNFT.performUpkeep",
      "offset": [
        16591,
        16641
      ],
      "op": "RETURN",
      "path": "20"
    },
    "2267": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39500,
        39821
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2268": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39500,
        39821
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "2269": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39500,
        39821
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2270": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39500,
        39821
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2271": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39500,
        39821
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8E7"
    },
    "2274": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39500,
        39821
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2275": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39500,
        39821
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2277": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39500,
        39821
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2278": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39500,
        39821
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2279": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39500,
        39821
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2280": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39500,
        39821
      ],
      "op": "POP",
      "path": "20"
    },
    "2281": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39500,
        39821
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x45B"
    },
    "2284": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39500,
        39821
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2286": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39500,
        39821
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2287": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39500,
        39821
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "2288": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39500,
        39821
      ],
      "op": "SUB",
      "path": "20"
    },
    "2289": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39500,
        39821
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2291": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39500,
        39821
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2292": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39500,
        39821
      ],
      "op": "LT",
      "path": "20"
    },
    "2293": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39500,
        39821
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2294": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39500,
        39821
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x8FE"
    },
    "2297": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39500,
        39821
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2298": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39500,
        39821
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2300": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39500,
        39821
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2301": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39500,
        39821
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2302": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39500,
        39821
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2303": {
      "op": "POP"
    },
    "2304": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39500,
        39821
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2305": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39500,
        39821
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "2306": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39500,
        39821
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2307": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39500,
        39821
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2309": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39500,
        39821
      ],
      "op": "ADD",
      "path": "20"
    },
    "2310": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39500,
        39821
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "2311": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39500,
        39821
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "2313": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39500,
        39821
      ],
      "op": "AND",
      "path": "20"
    },
    "2314": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39500,
        39821
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1AD3"
    },
    "2317": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "jump": "i",
      "offset": [
        39500,
        39821
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2318": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6540,
        6709
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2319": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6540,
        6709
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "2320": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6540,
        6709
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2321": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6540,
        6709
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2322": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6540,
        6709
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x91A"
    },
    "2325": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6540,
        6709
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2326": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6540,
        6709
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2328": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6540,
        6709
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2329": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6540,
        6709
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2330": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6540,
        6709
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2331": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6540,
        6709
      ],
      "op": "POP",
      "path": "4"
    },
    "2332": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6540,
        6709
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x51B"
    },
    "2335": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6540,
        6709
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2337": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6540,
        6709
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2338": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6540,
        6709
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "2339": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6540,
        6709
      ],
      "op": "SUB",
      "path": "4"
    },
    "2340": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6540,
        6709
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2342": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6540,
        6709
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2343": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6540,
        6709
      ],
      "op": "LT",
      "path": "4"
    },
    "2344": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6540,
        6709
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2345": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6540,
        6709
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x931"
    },
    "2348": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6540,
        6709
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2349": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6540,
        6709
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2351": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6540,
        6709
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2352": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6540,
        6709
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2353": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6540,
        6709
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2354": {
      "op": "POP"
    },
    "2355": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6540,
        6709
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "2356": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6540,
        6709
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1BFD"
    },
    "2359": {
      "fn": "ERC721.tokenByIndex",
      "jump": "i",
      "offset": [
        6540,
        6709
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2360": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2361": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "2362": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2363": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2364": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x944"
    },
    "2367": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2368": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2370": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2371": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2372": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2373": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "POP",
      "path": "20"
    },
    "2374": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x96B"
    },
    "2377": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2379": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2380": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "2381": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "SUB",
      "path": "20"
    },
    "2382": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2384": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2385": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "LT",
      "path": "20"
    },
    "2386": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2387": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x95B"
    },
    "2390": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2391": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2393": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2394": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2395": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2396": {
      "op": "POP"
    },
    "2397": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "2398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2402": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2404": {
      "op": "SHL"
    },
    "2405": {
      "op": "SUB"
    },
    "2406": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "AND",
      "path": "20"
    },
    "2407": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C13"
    },
    "2410": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "jump": "i",
      "offset": [
        27960,
        28484
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2411": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2412": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2414": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2415": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2416": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2418": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2419": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2420": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2421": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2422": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2423": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2424": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2425": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "ADD",
      "path": "20"
    },
    "2426": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2427": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2428": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2429": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2430": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "2431": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2432": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "2433": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2434": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2435": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "ADD",
      "path": "20"
    },
    "2436": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2437": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "DUP6",
      "path": "20"
    },
    "2438": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2439": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "ADD",
      "path": "20"
    },
    "2440": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2441": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "MUL",
      "path": "20"
    },
    "2442": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2443": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2444": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2445": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2447": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2448": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2449": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2450": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "LT",
      "path": "20"
    },
    "2451": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2452": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x9A7"
    },
    "2455": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2456": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2457": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2458": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "ADD",
      "path": "20"
    },
    "2459": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2460": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2461": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2462": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "ADD",
      "path": "20"
    },
    "2463": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2464": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2466": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "ADD",
      "path": "20"
    },
    "2467": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x98F"
    },
    "2470": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2471": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2472": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "POP",
      "path": "20"
    },
    "2473": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "POP",
      "path": "20"
    },
    "2474": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "POP",
      "path": "20"
    },
    "2475": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "POP",
      "path": "20"
    },
    "2476": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2477": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "POP",
      "path": "20"
    },
    "2478": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "ADD",
      "path": "20"
    },
    "2479": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "2480": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "POP",
      "path": "20"
    },
    "2481": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "POP",
      "path": "20"
    },
    "2482": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "POP",
      "path": "20"
    },
    "2483": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2485": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2486": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2487": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2488": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "SUB",
      "path": "20"
    },
    "2489": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2490": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "RETURN",
      "path": "20"
    },
    "2491": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27116,
        27797
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2492": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27116,
        27797
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "2493": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27116,
        27797
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2494": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27116,
        27797
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2495": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27116,
        27797
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x9C7"
    },
    "2498": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27116,
        27797
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2499": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27116,
        27797
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2501": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27116,
        27797
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2502": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27116,
        27797
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2503": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27116,
        27797
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2504": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27116,
        27797
      ],
      "op": "POP",
      "path": "20"
    },
    "2505": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27116,
        27797
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x45B"
    },
    "2508": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27116,
        27797
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2510": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27116,
        27797
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2511": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27116,
        27797
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "2512": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27116,
        27797
      ],
      "op": "SUB",
      "path": "20"
    },
    "2513": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27116,
        27797
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2515": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27116,
        27797
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2516": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27116,
        27797
      ],
      "op": "LT",
      "path": "20"
    },
    "2517": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27116,
        27797
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2518": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27116,
        27797
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x9DE"
    },
    "2521": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27116,
        27797
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2522": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27116,
        27797
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2524": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27116,
        27797
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2525": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27116,
        27797
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2526": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27116,
        27797
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2527": {
      "op": "POP"
    },
    "2528": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27116,
        27797
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "2529": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27116,
        27797
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1D03"
    },
    "2532": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "jump": "i",
      "offset": [
        27116,
        27797
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2533": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4280,
        4455
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2534": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4280,
        4455
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "2535": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4280,
        4455
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2536": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4280,
        4455
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2537": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4280,
        4455
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9F1"
    },
    "2540": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4280,
        4455
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2541": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4280,
        4455
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2543": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4280,
        4455
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2544": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4280,
        4455
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2545": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4280,
        4455
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2546": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4280,
        4455
      ],
      "op": "POP",
      "path": "4"
    },
    "2547": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4280,
        4455
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x49C"
    },
    "2550": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4280,
        4455
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2552": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4280,
        4455
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2553": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4280,
        4455
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "2554": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4280,
        4455
      ],
      "op": "SUB",
      "path": "4"
    },
    "2555": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4280,
        4455
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2557": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4280,
        4455
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2558": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4280,
        4455
      ],
      "op": "LT",
      "path": "4"
    },
    "2559": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4280,
        4455
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2560": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4280,
        4455
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA08"
    },
    "2563": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4280,
        4455
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2564": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4280,
        4455
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2566": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4280,
        4455
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2567": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4280,
        4455
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2568": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4280,
        4455
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2569": {
      "op": "POP"
    },
    "2570": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4280,
        4455
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "2571": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4280,
        4455
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E50"
    },
    "2574": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        4280,
        4455
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2575": {
      "fn": "ERC721.baseURI",
      "offset": [
        5855,
        5950
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2576": {
      "fn": "ERC721.baseURI",
      "offset": [
        5855,
        5950
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "2577": {
      "fn": "ERC721.baseURI",
      "offset": [
        5855,
        5950
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2578": {
      "fn": "ERC721.baseURI",
      "offset": [
        5855,
        5950
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2579": {
      "fn": "ERC721.baseURI",
      "offset": [
        5855,
        5950
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA1B"
    },
    "2582": {
      "fn": "ERC721.baseURI",
      "offset": [
        5855,
        5950
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2583": {
      "fn": "ERC721.baseURI",
      "offset": [
        5855,
        5950
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2585": {
      "fn": "ERC721.baseURI",
      "offset": [
        5855,
        5950
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2586": {
      "fn": "ERC721.baseURI",
      "offset": [
        5855,
        5950
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2587": {
      "fn": "ERC721.baseURI",
      "offset": [
        5855,
        5950
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2588": {
      "fn": "ERC721.baseURI",
      "offset": [
        5855,
        5950
      ],
      "op": "POP",
      "path": "4"
    },
    "2589": {
      "fn": "ERC721.baseURI",
      "offset": [
        5855,
        5950
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3BC"
    },
    "2592": {
      "fn": "ERC721.baseURI",
      "offset": [
        5855,
        5950
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E78"
    },
    "2595": {
      "fn": "ERC721.baseURI",
      "jump": "i",
      "offset": [
        5855,
        5950
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2596": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2597": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "2598": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2599": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2600": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA30"
    },
    "2603": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2604": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2606": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2607": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2608": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2609": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "POP",
      "path": "20"
    },
    "2610": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA9F"
    },
    "2613": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2615": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2616": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "2617": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "SUB",
      "path": "20"
    },
    "2618": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2620": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2621": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "LT",
      "path": "20"
    },
    "2622": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2623": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA47"
    },
    "2626": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2627": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2629": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2630": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2631": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2632": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2633": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "ADD",
      "path": "20"
    },
    "2634": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2635": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2637": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2638": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "ADD",
      "path": "20"
    },
    "2639": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2640": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "2641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2643": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2645": {
      "op": "SHL"
    },
    "2646": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2647": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "GT",
      "path": "20"
    },
    "2648": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2649": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA61"
    },
    "2652": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2653": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2655": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2656": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2657": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2658": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2659": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "ADD",
      "path": "20"
    },
    "2660": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2661": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2663": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2664": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "ADD",
      "path": "20"
    },
    "2665": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "GT",
      "path": "20"
    },
    "2666": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2667": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA73"
    },
    "2670": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2671": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2673": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2674": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2675": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2676": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2677": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "2678": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2679": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2681": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "ADD",
      "path": "20"
    },
    "2682": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2683": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP5",
      "path": "20"
    },
    "2684": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "2686": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2687": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "MUL",
      "path": "20"
    },
    "2688": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP5",
      "path": "20"
    },
    "2689": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "ADD",
      "path": "20"
    },
    "2690": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "GT",
      "path": "20"
    },
    "2691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2693": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2695": {
      "op": "SHL"
    },
    "2696": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2697": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "GT",
      "path": "20"
    },
    "2698": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "OR",
      "path": "20"
    },
    "2699": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2700": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xA94"
    },
    "2703": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2704": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2706": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2707": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2708": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2709": {
      "op": "POP"
    },
    "2710": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2711": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "2712": {
      "op": "POP"
    },
    "2713": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2714": {
      "op": "POP"
    },
    "2715": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1ED9"
    },
    "2718": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "jump": "i",
      "offset": [
        29988,
        30341
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2719": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2720": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2722": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2723": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2724": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2725": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2726": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2727": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2728": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2729": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2731": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "ADD",
      "path": "20"
    },
    "2732": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2733": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2735": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "ADD",
      "path": "20"
    },
    "2736": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2737": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2738": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "SUB",
      "path": "20"
    },
    "2739": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2740": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2741": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2742": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2743": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2744": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2745": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2746": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2747": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2749": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "ADD",
      "path": "20"
    },
    "2750": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2751": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "POP",
      "path": "20"
    },
    "2752": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2753": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2754": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2755": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2757": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "ADD",
      "path": "20"
    },
    "2758": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2759": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2760": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2761": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2762": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2764": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2765": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2766": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2767": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "LT",
      "path": "20"
    },
    "2768": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2769": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xAE4"
    },
    "2772": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2773": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2774": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2775": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "ADD",
      "path": "20"
    },
    "2776": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2777": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2778": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2779": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "ADD",
      "path": "20"
    },
    "2780": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2781": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2783": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "ADD",
      "path": "20"
    },
    "2784": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xACC"
    },
    "2787": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2788": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2789": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "POP",
      "path": "20"
    },
    "2790": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "POP",
      "path": "20"
    },
    "2791": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "POP",
      "path": "20"
    },
    "2792": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "POP",
      "path": "20"
    },
    "2793": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2794": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "POP",
      "path": "20"
    },
    "2795": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2796": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2797": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "ADD",
      "path": "20"
    },
    "2798": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2799": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "2801": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "AND",
      "path": "20"
    },
    "2802": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2803": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2804": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB11"
    },
    "2807": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2808": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2809": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP3",
      "path": "20"
    },
    "2810": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "SUB",
      "path": "20"
    },
    "2811": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2812": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2813": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "2815": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP4",
      "path": "20"
    },
    "2816": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2818": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "SUB",
      "path": "20"
    },
    "2819": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "2822": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "EXP",
      "path": "20"
    },
    "2823": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "SUB",
      "path": "20"
    },
    "2824": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "NOT",
      "path": "20"
    },
    "2825": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "AND",
      "path": "20"
    },
    "2826": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2827": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "2828": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2830": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "ADD",
      "path": "20"
    },
    "2831": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2832": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "POP",
      "path": "20"
    },
    "2833": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2834": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "POP",
      "path": "20"
    },
    "2835": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "2836": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "POP",
      "path": "20"
    },
    "2837": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "POP",
      "path": "20"
    },
    "2838": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "POP",
      "path": "20"
    },
    "2839": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "POP",
      "path": "20"
    },
    "2840": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "2842": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "2843": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2844": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "2845": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "SUB",
      "path": "20"
    },
    "2846": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "2847": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "RETURN",
      "path": "20"
    },
    "2848": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4005,
        4223
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2849": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4005,
        4223
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "2850": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4005,
        4223
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2851": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4005,
        4223
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2852": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4005,
        4223
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB2C"
    },
    "2855": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4005,
        4223
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2856": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4005,
        4223
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2858": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4005,
        4223
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2859": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4005,
        4223
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2860": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4005,
        4223
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2861": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4005,
        4223
      ],
      "op": "POP",
      "path": "4"
    },
    "2862": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4005,
        4223
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x51B"
    },
    "2865": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4005,
        4223
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2867": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4005,
        4223
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2868": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4005,
        4223
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "2869": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4005,
        4223
      ],
      "op": "SUB",
      "path": "4"
    },
    "2870": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4005,
        4223
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2872": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4005,
        4223
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2873": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4005,
        4223
      ],
      "op": "LT",
      "path": "4"
    },
    "2874": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4005,
        4223
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2875": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4005,
        4223
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB43"
    },
    "2878": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4005,
        4223
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2879": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4005,
        4223
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2881": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4005,
        4223
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2882": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4005,
        4223
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2883": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4005,
        4223
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2884": {
      "op": "POP"
    },
    "2885": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4005,
        4223
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "2886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2890": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2892": {
      "op": "SHL"
    },
    "2893": {
      "op": "SUB"
    },
    "2894": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4005,
        4223
      ],
      "op": "AND",
      "path": "4"
    },
    "2895": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4005,
        4223
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F22"
    },
    "2898": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        4005,
        4223
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2899": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2900": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2901": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2902": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2903": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB5F"
    },
    "2906": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2907": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2909": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2910": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2911": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2912": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "POP",
      "path": "0"
    },
    "2913": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x45B"
    },
    "2916": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F8A"
    },
    "2919": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1717,
        1862
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2920": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24574,
        25647
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2921": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24574,
        25647
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x51B"
    },
    "2924": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24574,
        25647
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "2926": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24574,
        25647
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2927": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24574,
        25647
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "2928": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24574,
        25647
      ],
      "op": "SUB",
      "path": "20"
    },
    "2929": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24574,
        25647
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "2931": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24574,
        25647
      ],
      "op": "DUP2",
      "path": "20"
    },
    "2932": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24574,
        25647
      ],
      "op": "LT",
      "path": "20"
    },
    "2933": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24574,
        25647
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2934": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24574,
        25647
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB7E"
    },
    "2937": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24574,
        25647
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2938": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24574,
        25647
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2940": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24574,
        25647
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2941": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24574,
        25647
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2942": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24574,
        25647
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2943": {
      "op": "POP"
    },
    "2944": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24574,
        25647
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "2945": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24574,
        25647
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2048"
    },
    "2948": {
      "fn": "BuyTheDipNFT.redip",
      "jump": "i",
      "offset": [
        24574,
        25647
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2949": {
      "offset": [
        17258,
        17292
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2950": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        17258,
        17292
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "2951": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        17258,
        17292
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2952": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        17258,
        17292
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2953": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        17258,
        17292
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xB91"
    },
    "2956": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        17258,
        17292
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2957": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        17258,
        17292
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "2959": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        17258,
        17292
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2960": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        17258,
        17292
      ],
      "op": "REVERT",
      "path": "20"
    },
    "2961": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        17258,
        17292
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2962": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        17258,
        17292
      ],
      "op": "POP",
      "path": "20"
    },
    "2963": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        17258,
        17292
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x51B"
    },
    "2966": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        17258,
        17292
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x222F"
    },
    "2969": {
      "fn": "BuyTheDipNFT.redip",
      "jump": "i",
      "offset": [
        17258,
        17292
      ],
      "op": "JUMP",
      "path": "20"
    },
    "2970": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2971": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2972": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2973": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2974": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA6"
    },
    "2977": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2978": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2980": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2981": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2982": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2983": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "POP",
      "path": "0"
    },
    "2984": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x49C"
    },
    "2987": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2235"
    },
    "2990": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        1085,
        1170
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2991": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29581,
        29982
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "2992": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29581,
        29982
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "2993": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29581,
        29982
      ],
      "op": "DUP1",
      "path": "20"
    },
    "2994": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29581,
        29982
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "2995": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29581,
        29982
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xBBB"
    },
    "2998": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29581,
        29982
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "2999": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29581,
        29982
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3001": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29581,
        29982
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3002": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29581,
        29982
      ],
      "op": "REVERT",
      "path": "20"
    },
    "3003": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29581,
        29982
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3004": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29581,
        29982
      ],
      "op": "POP",
      "path": "20"
    },
    "3005": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29581,
        29982
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x51B"
    },
    "3008": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29581,
        29982
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2244"
    },
    "3011": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "jump": "i",
      "offset": [
        29581,
        29982
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3012": {
      "fn": "ERC721.symbol",
      "offset": [
        4679,
        4781
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3013": {
      "fn": "ERC721.symbol",
      "offset": [
        4679,
        4781
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "3014": {
      "fn": "ERC721.symbol",
      "offset": [
        4679,
        4781
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3015": {
      "fn": "ERC721.symbol",
      "offset": [
        4679,
        4781
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3016": {
      "fn": "ERC721.symbol",
      "offset": [
        4679,
        4781
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBD0"
    },
    "3019": {
      "fn": "ERC721.symbol",
      "offset": [
        4679,
        4781
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3020": {
      "fn": "ERC721.symbol",
      "offset": [
        4679,
        4781
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3022": {
      "fn": "ERC721.symbol",
      "offset": [
        4679,
        4781
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3023": {
      "fn": "ERC721.symbol",
      "offset": [
        4679,
        4781
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3024": {
      "fn": "ERC721.symbol",
      "offset": [
        4679,
        4781
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3025": {
      "fn": "ERC721.symbol",
      "offset": [
        4679,
        4781
      ],
      "op": "POP",
      "path": "4"
    },
    "3026": {
      "fn": "ERC721.symbol",
      "offset": [
        4679,
        4781
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3BC"
    },
    "3029": {
      "fn": "ERC721.symbol",
      "offset": [
        4679,
        4781
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x233B"
    },
    "3032": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        4679,
        4781
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3033": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7506,
        7796
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3034": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7506,
        7796
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "3035": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7506,
        7796
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3036": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7506,
        7796
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3037": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7506,
        7796
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBE5"
    },
    "3040": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7506,
        7796
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3041": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7506,
        7796
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3043": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7506,
        7796
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3044": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7506,
        7796
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3045": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7506,
        7796
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3046": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7506,
        7796
      ],
      "op": "POP",
      "path": "4"
    },
    "3047": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7506,
        7796
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x45B"
    },
    "3050": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7506,
        7796
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "3052": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7506,
        7796
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3053": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7506,
        7796
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "3054": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7506,
        7796
      ],
      "op": "SUB",
      "path": "4"
    },
    "3055": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7506,
        7796
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3057": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7506,
        7796
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3058": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7506,
        7796
      ],
      "op": "LT",
      "path": "4"
    },
    "3059": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7506,
        7796
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3060": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7506,
        7796
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBFC"
    },
    "3063": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7506,
        7796
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3064": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7506,
        7796
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3066": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7506,
        7796
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3067": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7506,
        7796
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3068": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7506,
        7796
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3069": {
      "op": "POP"
    },
    "3070": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3074": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3076": {
      "op": "SHL"
    },
    "3077": {
      "op": "SUB"
    },
    "3078": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7506,
        7796
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3079": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7506,
        7796
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "3080": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7506,
        7796
      ],
      "op": "AND",
      "path": "4"
    },
    "3081": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7506,
        7796
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3082": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7506,
        7796
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3084": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7506,
        7796
      ],
      "op": "ADD",
      "path": "4"
    },
    "3085": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7506,
        7796
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "3086": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7506,
        7796
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3087": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7506,
        7796
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3088": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7506,
        7796
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x239C"
    },
    "3091": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        7506,
        7796
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3092": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39214,
        39493
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3093": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39214,
        39493
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "3094": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39214,
        39493
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3095": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39214,
        39493
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3096": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39214,
        39493
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xC20"
    },
    "3099": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39214,
        39493
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3100": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39214,
        39493
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3102": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39214,
        39493
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3103": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39214,
        39493
      ],
      "op": "REVERT",
      "path": "20"
    },
    "3104": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39214,
        39493
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3105": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39214,
        39493
      ],
      "op": "POP",
      "path": "20"
    },
    "3106": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39214,
        39493
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x45B"
    },
    "3109": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39214,
        39493
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "3111": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39214,
        39493
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3112": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39214,
        39493
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "3113": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39214,
        39493
      ],
      "op": "SUB",
      "path": "20"
    },
    "3114": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39214,
        39493
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3116": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39214,
        39493
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3117": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39214,
        39493
      ],
      "op": "LT",
      "path": "20"
    },
    "3118": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39214,
        39493
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3119": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39214,
        39493
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xC37"
    },
    "3122": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39214,
        39493
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3123": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39214,
        39493
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3125": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39214,
        39493
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3126": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39214,
        39493
      ],
      "op": "REVERT",
      "path": "20"
    },
    "3127": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39214,
        39493
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3128": {
      "op": "POP"
    },
    "3129": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39214,
        39493
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3130": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39214,
        39493
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "3131": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39214,
        39493
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3132": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39214,
        39493
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3134": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39214,
        39493
      ],
      "op": "ADD",
      "path": "20"
    },
    "3135": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39214,
        39493
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "3136": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39214,
        39493
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x24A1"
    },
    "3139": {
      "fn": "BuyTheDipNFT.setEnergy",
      "jump": "i",
      "offset": [
        39214,
        39493
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3140": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3141": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "3142": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3143": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3144": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC50"
    },
    "3147": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3148": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3150": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3151": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3152": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3153": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "POP",
      "path": "4"
    },
    "3154": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x45B"
    },
    "3157": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "3159": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3160": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "3161": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "SUB",
      "path": "4"
    },
    "3162": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "3164": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3165": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "LT",
      "path": "4"
    },
    "3166": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3167": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC67"
    },
    "3170": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3171": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3173": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3174": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3175": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3180": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3182": {
      "op": "SHL"
    },
    "3183": {
      "op": "SUB"
    },
    "3184": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3185": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "3186": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3187": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "AND",
      "path": "4"
    },
    "3188": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3189": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3191": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3192": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "ADD",
      "path": "4"
    },
    "3193": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "3194": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3195": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3196": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "AND",
      "path": "4"
    },
    "3197": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3198": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3200": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3201": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "ADD",
      "path": "4"
    },
    "3202": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "3203": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3204": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3205": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3206": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "ADD",
      "path": "4"
    },
    "3207": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3208": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "3210": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3211": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "ADD",
      "path": "4"
    },
    "3212": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "3214": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3215": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "ADD",
      "path": "4"
    },
    "3216": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "3217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3219": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3221": {
      "op": "SHL"
    },
    "3222": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3223": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "GT",
      "path": "4"
    },
    "3224": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3225": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCA1"
    },
    "3228": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3229": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3231": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3232": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3233": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3234": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3235": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "ADD",
      "path": "4"
    },
    "3236": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3237": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3239": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3240": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "ADD",
      "path": "4"
    },
    "3241": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "GT",
      "path": "4"
    },
    "3242": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3243": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCB3"
    },
    "3246": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3247": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3249": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3250": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3251": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3252": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3253": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "3254": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3255": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3257": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "ADD",
      "path": "4"
    },
    "3258": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3259": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3260": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "3262": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3263": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "MUL",
      "path": "4"
    },
    "3264": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3265": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "ADD",
      "path": "4"
    },
    "3266": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "GT",
      "path": "4"
    },
    "3267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3269": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3271": {
      "op": "SHL"
    },
    "3272": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3273": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "GT",
      "path": "4"
    },
    "3274": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "OR",
      "path": "4"
    },
    "3275": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3276": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCD4"
    },
    "3279": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3280": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3282": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3283": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3284": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3285": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3286": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3287": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3288": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3289": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "3291": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "ADD",
      "path": "4"
    },
    "3292": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3294": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3295": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3296": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "DIV",
      "path": "4"
    },
    "3297": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "MUL",
      "path": "4"
    },
    "3298": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3300": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "ADD",
      "path": "4"
    },
    "3301": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3303": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3304": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3305": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3306": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "ADD",
      "path": "4"
    },
    "3307": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3309": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3310": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3311": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "3312": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3313": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3314": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3315": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3316": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3317": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3318": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3320": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "ADD",
      "path": "4"
    },
    "3321": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3322": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3323": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3324": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3325": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3326": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "CALLDATACOPY",
      "path": "4"
    },
    "3327": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3329": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3330": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "ADD",
      "path": "4"
    },
    "3331": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3332": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3333": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3334": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3335": {
      "op": "POP"
    },
    "3336": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3337": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "3338": {
      "op": "POP"
    },
    "3339": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x250E"
    },
    "3342": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "3343": {
      "op": "POP"
    },
    "3344": {
      "op": "POP"
    },
    "3345": {
      "op": "POP"
    },
    "3346": {
      "op": "POP"
    },
    "3347": {
      "op": "POP"
    },
    "3348": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        8667,
        8949
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3349": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31124,
        38640
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3350": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31124,
        38640
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "3351": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31124,
        38640
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3352": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31124,
        38640
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3353": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31124,
        38640
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xD21"
    },
    "3356": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31124,
        38640
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3357": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31124,
        38640
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3359": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31124,
        38640
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3360": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31124,
        38640
      ],
      "op": "REVERT",
      "path": "20"
    },
    "3361": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31124,
        38640
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3362": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31124,
        38640
      ],
      "op": "POP",
      "path": "20"
    },
    "3363": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31124,
        38640
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3BC"
    },
    "3366": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31124,
        38640
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "3368": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31124,
        38640
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3369": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31124,
        38640
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "3370": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31124,
        38640
      ],
      "op": "SUB",
      "path": "20"
    },
    "3371": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31124,
        38640
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3373": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31124,
        38640
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3374": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31124,
        38640
      ],
      "op": "LT",
      "path": "20"
    },
    "3375": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31124,
        38640
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3376": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31124,
        38640
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xD38"
    },
    "3379": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31124,
        38640
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3380": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31124,
        38640
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3382": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31124,
        38640
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3383": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31124,
        38640
      ],
      "op": "REVERT",
      "path": "20"
    },
    "3384": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31124,
        38640
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3385": {
      "op": "POP"
    },
    "3386": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31124,
        38640
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "3387": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31124,
        38640
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2566"
    },
    "3390": {
      "fn": "BuyTheDipNFT.tokenURI",
      "jump": "i",
      "offset": [
        31124,
        38640
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3391": {
      "offset": [
        16526,
        16553
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3392": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        16526,
        16553
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "3393": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        16526,
        16553
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3394": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        16526,
        16553
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3395": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        16526,
        16553
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xD4B"
    },
    "3398": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        16526,
        16553
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3399": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        16526,
        16553
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3401": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        16526,
        16553
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3402": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        16526,
        16553
      ],
      "op": "REVERT",
      "path": "20"
    },
    "3403": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        16526,
        16553
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3404": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        16526,
        16553
      ],
      "op": "POP",
      "path": "20"
    },
    "3405": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        16526,
        16553
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x51B"
    },
    "3408": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        16526,
        16553
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2BEE"
    },
    "3411": {
      "fn": "BuyTheDipNFT.tokenURI",
      "jump": "i",
      "offset": [
        16526,
        16553
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3412": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7862,
        8024
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3413": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7862,
        8024
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "3414": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7862,
        8024
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3415": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7862,
        8024
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3416": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7862,
        8024
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD60"
    },
    "3419": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7862,
        8024
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3420": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7862,
        8024
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3422": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7862,
        8024
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3423": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7862,
        8024
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3424": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7862,
        8024
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3425": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7862,
        8024
      ],
      "op": "POP",
      "path": "4"
    },
    "3426": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7862,
        8024
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2F0"
    },
    "3429": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7862,
        8024
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "3431": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7862,
        8024
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3432": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7862,
        8024
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "3433": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7862,
        8024
      ],
      "op": "SUB",
      "path": "4"
    },
    "3434": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7862,
        8024
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3436": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7862,
        8024
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3437": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7862,
        8024
      ],
      "op": "LT",
      "path": "4"
    },
    "3438": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7862,
        8024
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3439": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7862,
        8024
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD77"
    },
    "3442": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7862,
        8024
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3443": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7862,
        8024
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3445": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7862,
        8024
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3446": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7862,
        8024
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3447": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7862,
        8024
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3448": {
      "op": "POP"
    },
    "3449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3453": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3455": {
      "op": "SHL"
    },
    "3456": {
      "op": "SUB"
    },
    "3457": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7862,
        8024
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3458": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7862,
        8024
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "3459": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7862,
        8024
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3460": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7862,
        8024
      ],
      "op": "AND",
      "path": "4"
    },
    "3461": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7862,
        8024
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3462": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7862,
        8024
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3464": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7862,
        8024
      ],
      "op": "ADD",
      "path": "4"
    },
    "3465": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7862,
        8024
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "3466": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7862,
        8024
      ],
      "op": "AND",
      "path": "4"
    },
    "3467": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7862,
        8024
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2BF4"
    },
    "3470": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        7862,
        8024
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3471": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3472": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "3473": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3474": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3475": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD9B"
    },
    "3478": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3479": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3481": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3482": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3483": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3484": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "POP",
      "path": "0"
    },
    "3485": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x45B"
    },
    "3488": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3490": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3491": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "3492": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "SUB",
      "path": "0"
    },
    "3493": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3495": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3496": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "LT",
      "path": "0"
    },
    "3497": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3498": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDB2"
    },
    "3501": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3502": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3504": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3505": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3506": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3507": {
      "op": "POP"
    },
    "3508": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "3509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3513": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3515": {
      "op": "SHL"
    },
    "3516": {
      "op": "SUB"
    },
    "3517": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "AND",
      "path": "0"
    },
    "3518": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C22"
    },
    "3521": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3522": {
      "offset": [
        16927,
        16982
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3523": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16927,
        16982
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "3524": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16927,
        16982
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3525": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16927,
        16982
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3526": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16927,
        16982
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xDCE"
    },
    "3529": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16927,
        16982
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3530": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16927,
        16982
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3532": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16927,
        16982
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3533": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16927,
        16982
      ],
      "op": "REVERT",
      "path": "20"
    },
    "3534": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16927,
        16982
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3535": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16927,
        16982
      ],
      "op": "POP",
      "path": "20"
    },
    "3536": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16927,
        16982
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2F0"
    },
    "3539": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16927,
        16982
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "3541": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16927,
        16982
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3542": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16927,
        16982
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "3543": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16927,
        16982
      ],
      "op": "SUB",
      "path": "20"
    },
    "3544": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16927,
        16982
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3546": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16927,
        16982
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3547": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16927,
        16982
      ],
      "op": "LT",
      "path": "20"
    },
    "3548": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16927,
        16982
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3549": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16927,
        16982
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xDE5"
    },
    "3552": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16927,
        16982
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3553": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16927,
        16982
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3555": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16927,
        16982
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3556": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16927,
        16982
      ],
      "op": "REVERT",
      "path": "20"
    },
    "3557": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16927,
        16982
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3558": {
      "op": "POP"
    },
    "3559": {
      "offset": [
        16927,
        16982
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "3560": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16927,
        16982
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2D37"
    },
    "3563": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        16927,
        16982
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3564": {
      "offset": [
        17137,
        17176
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3565": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        17137,
        17176
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "3566": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        17137,
        17176
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3567": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        17137,
        17176
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3568": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        17137,
        17176
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xDF8"
    },
    "3571": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        17137,
        17176
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3572": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        17137,
        17176
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3574": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        17137,
        17176
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3575": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        17137,
        17176
      ],
      "op": "REVERT",
      "path": "20"
    },
    "3576": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        17137,
        17176
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3577": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        17137,
        17176
      ],
      "op": "POP",
      "path": "20"
    },
    "3578": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        17137,
        17176
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x51B"
    },
    "3581": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        17137,
        17176
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2D4C"
    },
    "3584": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        17137,
        17176
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3585": {
      "offset": [
        16839,
        16893
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3586": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16839,
        16893
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "3587": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16839,
        16893
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3588": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16839,
        16893
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3589": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16839,
        16893
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xE0D"
    },
    "3592": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16839,
        16893
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3593": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16839,
        16893
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3595": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16839,
        16893
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3596": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16839,
        16893
      ],
      "op": "REVERT",
      "path": "20"
    },
    "3597": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16839,
        16893
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3598": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16839,
        16893
      ],
      "op": "POP",
      "path": "20"
    },
    "3599": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16839,
        16893
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x51B"
    },
    "3602": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16839,
        16893
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "3604": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16839,
        16893
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3605": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16839,
        16893
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "3606": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16839,
        16893
      ],
      "op": "SUB",
      "path": "20"
    },
    "3607": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16839,
        16893
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3609": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16839,
        16893
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3610": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16839,
        16893
      ],
      "op": "LT",
      "path": "20"
    },
    "3611": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16839,
        16893
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3612": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16839,
        16893
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xE24"
    },
    "3615": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16839,
        16893
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3616": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16839,
        16893
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3618": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16839,
        16893
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3619": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16839,
        16893
      ],
      "op": "REVERT",
      "path": "20"
    },
    "3620": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16839,
        16893
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3621": {
      "op": "POP"
    },
    "3622": {
      "offset": [
        16839,
        16893
      ],
      "op": "CALLDATALOAD",
      "path": "20"
    },
    "3623": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16839,
        16893
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2D52"
    },
    "3626": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        16839,
        16893
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3627": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3632": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3634": {
      "op": "SHL"
    },
    "3635": {
      "op": "SUB"
    },
    "3636": {
      "op": "NOT"
    },
    "3637": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 1
    },
    "3638": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "AND",
      "path": "1"
    },
    "3639": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1050,
        1054
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3641": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3642": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3643": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3644": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3646": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3647": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3648": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3649": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3651": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3652": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3653": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3654": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "3656": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1073,
        1106
      ],
      "op": "AND",
      "path": "1"
    },
    "3657": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3658": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3659": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3660": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        965,
        1113
      ],
      "op": "POP",
      "path": "1"
    },
    "3661": {
      "fn": "ERC165.supportsInterface",
      "jump": "o",
      "offset": [
        965,
        1113
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3662": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3663": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39915,
        39928
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "3665": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39954,
        39958
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "3667": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40754
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 2,
      "value": "0x0"
    },
    "3669": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40754
      ],
      "op": "DUP5",
      "path": "20"
    },
    "3670": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40754
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3671": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40754
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3672": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40744
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC"
    },
    "3674": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40754
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3676": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40754
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3677": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40754
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3679": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40754
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3680": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40754
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "3681": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40754
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "3682": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40116,
        41131
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x105C"
    },
    "3685": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40116,
        41131
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3686": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40461,
        40469
      ],
      "op": "DUP5",
      "path": "20"
    },
    "3687": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40461,
        40469
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3688": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40754
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "3690": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40754
      ],
      "op": "AND",
      "path": "20"
    },
    "3691": {
      "branch": 216,
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40757
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "3692": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40768
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xE8E"
    },
    "3695": {
      "branch": 216,
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40768
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3696": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40768
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3698": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40768
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3699": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40768
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3700": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40768
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3702": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40768
      ],
      "op": "ADD",
      "path": "20"
    },
    "3703": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40768
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3705": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40768
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3706": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40768
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3707": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40768
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "3709": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40768
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3710": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40768
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3711": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40768
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3713": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40768
      ],
      "op": "ADD",
      "path": "20"
    },
    "3714": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "3716": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3718": {
      "op": "SHL"
    },
    "3719": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40768
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3720": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40768
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3721": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40768
      ],
      "op": "POP",
      "path": "20"
    },
    "3722": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40768
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xEA9"
    },
    "3725": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40768
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3726": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40768
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3727": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40768
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3729": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40768
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3730": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40768
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3731": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40768
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3733": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40768
      ],
      "op": "ADD",
      "path": "20"
    },
    "3734": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40768
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3736": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40768
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3737": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40768
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3738": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40768
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "3740": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40768
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3741": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40768
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3742": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40768
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3744": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40768
      ],
      "op": "ADD",
      "path": "20"
    },
    "3745": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "3747": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "3749": {
      "op": "SHL"
    },
    "3750": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40768
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3751": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40768
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3752": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40768
      ],
      "op": "POP",
      "path": "20"
    },
    "3753": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40727,
        40768
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3754": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40924,
        40951
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "3756": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40924,
        40951
      ],
      "op": "DUP8",
      "path": "20"
    },
    "3757": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40924,
        40951
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3758": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40924,
        40951
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3759": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40924,
        40941
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xD"
    },
    "3761": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40924,
        40951
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3763": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40924,
        40951
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3764": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40924,
        40951
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3766": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40924,
        40951
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3767": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40924,
        40951
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "3768": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40924,
        40951
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "3769": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40910,
        40953
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xEC1"
    },
    "3772": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40910,
        40953
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3773": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40910,
        40918
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2D64"
    },
    "3776": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "jump": "i",
      "offset": [
        40910,
        40953
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3777": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40910,
        40953
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3778": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "3780": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3781": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3783": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "ADD",
      "path": "20"
    },
    "3784": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3785": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x37"
    },
    "3787": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x567D"
    },
    "3790": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3791": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "CODECOPY",
      "path": "20"
    },
    "3792": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x37"
    },
    "3794": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "ADD",
      "path": "20"
    },
    "3795": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2B"
    },
    "3797": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x581D"
    },
    "3800": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3801": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "CODECOPY",
      "path": "20"
    },
    "3802": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2B"
    },
    "3804": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "ADD",
      "path": "20"
    },
    "3805": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3806": {
      "op": "PUSH12",
      "value": "0x16101134B6B0B3B2911D1011"
    },
    "3819": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "3821": {
      "op": "SHL"
    },
    "3822": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3823": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3824": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "POP",
      "path": "20"
    },
    "3825": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC"
    },
    "3827": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "ADD",
      "path": "20"
    },
    "3828": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP5",
      "path": "20"
    },
    "3829": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3830": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3831": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3832": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3834": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "ADD",
      "path": "20"
    },
    "3835": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3836": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3837": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3838": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3839": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3840": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3842": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3843": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "LT",
      "path": "20"
    },
    "3844": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xF1E"
    },
    "3847": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3848": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3849": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3850": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3851": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3852": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3854": {
      "op": "NOT"
    },
    "3855": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3856": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "3857": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "ADD",
      "path": "20"
    },
    "3858": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3859": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3861": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3862": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3863": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "ADD",
      "path": "20"
    },
    "3864": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3865": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "ADD",
      "path": "20"
    },
    "3866": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xEFF"
    },
    "3869": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3870": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3871": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3872": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP2",
      "path": "20"
    },
    "3873": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3874": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3876": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "3877": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3878": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "3879": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SUB",
      "path": "20"
    },
    "3880": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "3883": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "EXP",
      "path": "20"
    },
    "3884": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3886": {
      "op": "NOT"
    },
    "3887": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "ADD",
      "path": "20"
    },
    "3888": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3889": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "NOT",
      "path": "20"
    },
    "3890": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3891": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3892": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "AND",
      "path": "20"
    },
    "3893": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "3894": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "AND",
      "path": "20"
    },
    "3895": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3896": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3897": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3898": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "OR",
      "path": "20"
    },
    "3899": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3900": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3901": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3903": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "3905": {
      "op": "SHL"
    },
    "3906": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "3907": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "ADD",
      "path": "20"
    },
    "3908": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3909": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3910": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3911": {
      "op": "POP"
    },
    "3912": {
      "op": "PUSH21",
      "value": "0x1610113730B6B2911D1011213ABCAA3432A234B811"
    },
    "3934": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "3936": {
      "op": "SHL"
    },
    "3937": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "3939": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3940": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "ADD",
      "path": "20"
    },
    "3941": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3942": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x16"
    },
    "3944": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "ADD",
      "path": "20"
    },
    "3945": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x50"
    },
    "3947": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5C80"
    },
    "3950": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3951": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "CODECOPY",
      "path": "20"
    },
    "3952": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x50"
    },
    "3954": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "ADD",
      "path": "20"
    },
    "3955": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3956": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3957": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3958": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3959": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3961": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "ADD",
      "path": "20"
    },
    "3962": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3963": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3964": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3965": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3966": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3967": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3969": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP4",
      "path": "20"
    },
    "3970": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "LT",
      "path": "20"
    },
    "3971": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xF9D"
    },
    "3974": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "3975": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP1",
      "path": "20"
    },
    "3976": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3977": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3978": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "3979": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3981": {
      "op": "NOT"
    },
    "3982": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "3983": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "3984": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "ADD",
      "path": "20"
    },
    "3985": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3986": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "3988": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3989": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP3",
      "path": "20"
    },
    "3990": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "ADD",
      "path": "20"
    },
    "3991": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "3992": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "ADD",
      "path": "20"
    },
    "3993": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xF7E"
    },
    "3996": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "JUMP",
      "path": "20"
    },
    "3997": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "3998": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "3999": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4000": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4001": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4003": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "4004": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4005": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "4006": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SUB",
      "path": "20"
    },
    "4007": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "4010": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "EXP",
      "path": "20"
    },
    "4011": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4013": {
      "op": "NOT"
    },
    "4014": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "ADD",
      "path": "20"
    },
    "4015": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4016": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "NOT",
      "path": "20"
    },
    "4017": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4018": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4019": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "AND",
      "path": "20"
    },
    "4020": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4021": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "AND",
      "path": "20"
    },
    "4022": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4023": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4024": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4025": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "OR",
      "path": "20"
    },
    "4026": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4027": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4028": {
      "op": "PUSH2",
      "value": "0x207D"
    },
    "4031": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "4033": {
      "op": "SHL"
    },
    "4034": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4035": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "ADD",
      "path": "20"
    },
    "4036": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4037": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4038": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4039": {
      "op": "POP"
    },
    "4040": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "4042": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "ADD",
      "path": "20"
    },
    "4043": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x41"
    },
    "4045": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5610"
    },
    "4048": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4049": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "CODECOPY",
      "path": "20"
    },
    "4050": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x41"
    },
    "4052": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "ADD",
      "path": "20"
    },
    "4053": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4054": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4055": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4056": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4057": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4059": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "ADD",
      "path": "20"
    },
    "4060": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4061": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4062": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4063": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4064": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4065": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4067": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4068": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "LT",
      "path": "20"
    },
    "4069": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xFFF"
    },
    "4072": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4073": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4074": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4075": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4076": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4077": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4079": {
      "op": "NOT"
    },
    "4080": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4081": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4082": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "ADD",
      "path": "20"
    },
    "4083": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4084": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4086": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4087": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4088": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "ADD",
      "path": "20"
    },
    "4089": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4090": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "ADD",
      "path": "20"
    },
    "4091": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xFE0"
    },
    "4094": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4095": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4096": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4097": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4098": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4099": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4101": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "4102": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4103": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "4104": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SUB",
      "path": "20"
    },
    "4105": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "4108": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "EXP",
      "path": "20"
    },
    "4109": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4111": {
      "op": "NOT"
    },
    "4112": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "ADD",
      "path": "20"
    },
    "4113": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4114": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "NOT",
      "path": "20"
    },
    "4115": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4116": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4117": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "AND",
      "path": "20"
    },
    "4118": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4119": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "AND",
      "path": "20"
    },
    "4120": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4121": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4122": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4123": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "OR",
      "path": "20"
    },
    "4124": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4125": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4126": {
      "op": "PUSH2",
      "value": "0x207D"
    },
    "4129": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "4131": {
      "op": "SHL"
    },
    "4132": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4133": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "ADD",
      "path": "20"
    },
    "4134": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4135": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4136": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4137": {
      "op": "POP"
    },
    "4138": {
      "op": "PUSH1",
      "value": "0x5D"
    },
    "4140": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "4142": {
      "op": "SHL"
    },
    "4143": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "4145": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4146": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "ADD",
      "path": "20"
    },
    "4147": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4148": {
      "op": "PUSH1",
      "value": "0x7D"
    },
    "4150": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "4152": {
      "op": "SHL"
    },
    "4153": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3"
    },
    "4155": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4156": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "ADD",
      "path": "20"
    },
    "4157": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4158": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4160": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4161": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4162": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4163": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4164": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SUB",
      "path": "20"
    },
    "4165": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "4167": {
      "op": "NOT"
    },
    "4168": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "ADD",
      "path": "20"
    },
    "4169": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4170": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4171": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4173": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4174": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4175": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "ADD",
      "path": "20"
    },
    "4176": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4177": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4178": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40191,
        41083
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "4179": {
      "op": "POP"
    },
    "4180": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40116,
        40129
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2E3C"
    },
    "4183": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40116,
        40129
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4184": {
      "op": "POP"
    },
    "4185": {
      "op": "POP"
    },
    "4186": {
      "op": "POP"
    },
    "4187": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "jump": "i",
      "offset": [
        40116,
        41131
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4188": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40116,
        41131
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4189": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4191": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4192": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4194": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "ADD",
      "path": "20"
    },
    "4195": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4196": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4197": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000"
    },
    "4230": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4231": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4232": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "POP",
      "path": "20"
    },
    "4233": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1D"
    },
    "4235": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "ADD",
      "path": "20"
    },
    "4236": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4237": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4238": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4239": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4240": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4242": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "ADD",
      "path": "20"
    },
    "4243": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4244": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4245": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4246": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4247": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4248": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4250": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4251": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "LT",
      "path": "20"
    },
    "4252": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x10B6"
    },
    "4255": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4256": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4257": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4258": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4259": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4260": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4262": {
      "op": "NOT"
    },
    "4263": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4264": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4265": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "ADD",
      "path": "20"
    },
    "4266": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4267": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4269": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4270": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4271": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "ADD",
      "path": "20"
    },
    "4272": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4273": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "ADD",
      "path": "20"
    },
    "4274": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1097"
    },
    "4277": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4278": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4279": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "4281": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4282": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4284": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "SUB",
      "path": "20"
    },
    "4285": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "4288": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "EXP",
      "path": "20"
    },
    "4289": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "SUB",
      "path": "20"
    },
    "4290": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4291": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "NOT",
      "path": "20"
    },
    "4292": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4293": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4294": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "AND",
      "path": "20"
    },
    "4295": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4296": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4297": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4298": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "AND",
      "path": "20"
    },
    "4299": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4300": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4301": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "OR",
      "path": "20"
    },
    "4302": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "DUP6",
      "path": "20"
    },
    "4303": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4304": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "POP",
      "path": "20"
    },
    "4305": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "POP",
      "path": "20"
    },
    "4306": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "POP",
      "path": "20"
    },
    "4307": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "POP",
      "path": "20"
    },
    "4308": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "POP",
      "path": "20"
    },
    "4309": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "POP",
      "path": "20"
    },
    "4310": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4311": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "POP",
      "path": "20"
    },
    "4312": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "ADD",
      "path": "20"
    },
    "4313": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4314": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "POP",
      "path": "20"
    },
    "4315": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "POP",
      "path": "20"
    },
    "4316": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4318": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4319": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4321": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4322": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4323": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "SUB",
      "path": "20"
    },
    "4324": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "SUB",
      "path": "20"
    },
    "4325": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4326": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4327": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4328": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4330": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        40025,
        41149
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4331": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39994,
        41163
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4332": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39994,
        41163
      ],
      "op": "POP",
      "path": "20"
    },
    "4333": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39994,
        41163
      ],
      "op": "POP",
      "path": "20"
    },
    "4334": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4335": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4336": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4337": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "POP",
      "path": "20"
    },
    "4338": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "offset": [
        39828,
        42185
      ],
      "op": "POP",
      "path": "20"
    },
    "4339": {
      "fn": "BuyTheDipNFT.formatTokenURI",
      "jump": "o",
      "offset": [
        39828,
        42185
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4340": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28491,
        29574
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4341": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28620,
        28636
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 3,
      "value": "0x10FC"
    },
    "4344": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28620,
        28634
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2244"
    },
    "4347": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "jump": "i",
      "offset": [
        28620,
        28636
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4348": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28620,
        28636
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4349": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28589,
        28616
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4351": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28589,
        28616
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4352": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28589,
        28616
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4353": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28589,
        28616
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4354": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28589,
        28606
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xD"
    },
    "4356": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28589,
        28616
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4358": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28589,
        28616
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4359": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28589,
        28616
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4361": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28589,
        28616
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4362": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28589,
        28616
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4363": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28589,
        28616
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4364": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28589,
        28636
      ],
      "op": "GT",
      "path": "20"
    },
    "4365": {
      "branch": 217,
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28589,
        28636
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4366": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28581,
        28661
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1155"
    },
    "4369": {
      "branch": 217,
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28581,
        28661
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4370": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28581,
        28661
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4372": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28581,
        28661
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4373": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28581,
        28661
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4374": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4378": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4380": {
      "op": "SHL"
    },
    "4381": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28581,
        28661
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4382": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28581,
        28661
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4383": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28581,
        28661
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4385": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28581,
        28661
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4387": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28581,
        28661
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4388": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28581,
        28661
      ],
      "op": "ADD",
      "path": "20"
    },
    "4389": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28581,
        28661
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4390": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28581,
        28661
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x14"
    },
    "4392": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28581,
        28661
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "4394": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28581,
        28661
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4395": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28581,
        28661
      ],
      "op": "ADD",
      "path": "20"
    },
    "4396": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28581,
        28661
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4397": {
      "op": "PUSH20",
      "value": "0x141C9A58D94818589BDD9948191A5C13195D995B"
    },
    "4418": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "4420": {
      "op": "SHL"
    },
    "4421": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28581,
        28661
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "4423": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28581,
        28661
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4424": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28581,
        28661
      ],
      "op": "ADD",
      "path": "20"
    },
    "4425": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28581,
        28661
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4426": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28581,
        28661
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4427": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28581,
        28661
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4428": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28581,
        28661
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4429": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28581,
        28661
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4430": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28581,
        28661
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4431": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28581,
        28661
      ],
      "op": "SUB",
      "path": "20"
    },
    "4432": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28581,
        28661
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "4434": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28581,
        28661
      ],
      "op": "ADD",
      "path": "20"
    },
    "4435": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28581,
        28661
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4436": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28581,
        28661
      ],
      "op": "REVERT",
      "path": "20"
    },
    "4437": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28581,
        28661
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4438": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28671,
        28693
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4440": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28696,
        28717
      ],
      "op": "SELFBALANCE",
      "path": "20"
    },
    "4441": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28671,
        28717
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4442": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28671,
        28717
      ],
      "op": "POP",
      "path": "20"
    },
    "4443": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28727,
        28746
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4445": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28749,
        28810
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1168"
    },
    "4448": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28773,
        28781
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4449": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28783,
        28809
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x18"
    },
    "4451": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28783,
        28809
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4452": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28749,
        28772
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x30B3"
    },
    "4455": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "jump": "i",
      "offset": [
        28749,
        28810
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4456": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28749,
        28810
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4457": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28884,
        28901
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 4,
      "value": "0x21"
    },
    "4459": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28884,
        28901
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4460": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28919,
        28925
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "4462": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28919,
        28925
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4463": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4465": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4466": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4467": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "4472": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4474": {
      "op": "SHL"
    },
    "4475": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4476": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4481": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4483": {
      "op": "SHL"
    },
    "4484": {
      "op": "SUB"
    },
    "4485": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28919,
        28925
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4486": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28919,
        28925
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4487": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28919,
        28925
      ],
      "op": "AND",
      "path": "20"
    },
    "4488": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "4490": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4491": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "ADD",
      "path": "20"
    },
    "4492": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4493": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "4495": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4496": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "ADD",
      "path": "20"
    },
    "4497": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "DUP6",
      "path": "20"
    },
    "4498": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4499": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4500": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4501": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4502": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28727,
        28810
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "4503": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28727,
        28810
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "4504": {
      "op": "POP"
    },
    "4505": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28884,
        28901
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4506": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28884,
        28901
      ],
      "op": "AND",
      "path": "20"
    },
    "4507": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28884,
        28901
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4508": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28910
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x95EA7B3"
    },
    "4513": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28910
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4514": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "4516": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4517": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4518": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "ADD",
      "path": "20"
    },
    "4519": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4520": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4522": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4523": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4524": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4525": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4526": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4527": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4528": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "SUB",
      "path": "20"
    },
    "4529": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "ADD",
      "path": "20"
    },
    "4530": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4531": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28884,
        28901
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4533": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28884,
        28901
      ],
      "op": "DUP8",
      "path": "20"
    },
    "4534": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4535": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "4536": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4537": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4538": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4539": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x11C3"
    },
    "4542": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4543": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4545": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4546": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "REVERT",
      "path": "20"
    },
    "4547": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4548": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "POP",
      "path": "20"
    },
    "4549": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "GAS",
      "path": "20"
    },
    "4550": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "CALL",
      "path": "20"
    },
    "4551": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4552": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4553": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4554": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x11D7"
    },
    "4557": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4558": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "4559": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4561": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4562": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "4563": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "4564": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4566": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "REVERT",
      "path": "20"
    },
    "4567": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4568": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "POP",
      "path": "20"
    },
    "4569": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "POP",
      "path": "20"
    },
    "4570": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "POP",
      "path": "20"
    },
    "4571": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "POP",
      "path": "20"
    },
    "4572": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4574": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4575": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "4576": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4578": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4579": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "LT",
      "path": "20"
    },
    "4580": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4581": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x11ED"
    },
    "4584": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4585": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4587": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4588": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "REVERT",
      "path": "20"
    },
    "4589": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28877,
        28940
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4590": {
      "op": "POP"
    },
    "4591": {
      "op": "POP"
    },
    "4592": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29043,
        29060
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x21"
    },
    "4594": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29043,
        29060
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4595": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28951,
        28966
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "4597": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28951,
        28966
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4598": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28951,
        28966
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4599": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28951,
        28966
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4600": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28992,
        29102
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1226"
    },
    "4603": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28992,
        29102
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4604": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29030,
        29041
      ],
      "op": "DUP5",
      "path": "20"
    },
    "4605": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29030,
        29041
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4610": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4612": {
      "op": "SHL"
    },
    "4613": {
      "op": "SUB"
    },
    "4614": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29043,
        29060
      ],
      "op": "AND",
      "path": "20"
    },
    "4615": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29062,
        29079
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x120F"
    },
    "4618": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29070,
        29078
      ],
      "op": "DUP9",
      "path": "20"
    },
    "4619": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29062,
        29069
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1E50"
    },
    "4622": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "jump": "i",
      "offset": [
        29062,
        29079
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4623": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29062,
        29079
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4624": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29081,
        29087
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "4626": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29081,
        29087
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4627": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29089,
        29101
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x13"
    },
    "4629": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29089,
        29101
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4634": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4636": {
      "op": "SHL"
    },
    "4637": {
      "op": "SUB"
    },
    "4638": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29081,
        29087
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4639": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29081,
        29087
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4640": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29081,
        29087
      ],
      "op": "AND",
      "path": "20"
    },
    "4641": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29081,
        29087
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4642": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28992,
        29029
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3282"
    },
    "4645": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "jump": "i",
      "offset": [
        28992,
        29102
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4646": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28992,
        29102
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4647": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29118,
        29169
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 5,
      "value": "0x40"
    },
    "4649": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29118,
        29169
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4650": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29118,
        29169
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4651": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29118,
        29169
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4652": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29118,
        29169
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4653": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29118,
        29169
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4654": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29153,
        29168
      ],
      "op": "TIMESTAMP",
      "path": "20"
    },
    "4655": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29118,
        29169
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4657": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29118,
        29169
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4658": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29118,
        29169
      ],
      "op": "ADD",
      "path": "20"
    },
    "4659": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29118,
        29169
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4660": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29118,
        29169
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4661": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29118,
        29169
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "4662": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28950,
        29102
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "4663": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28950,
        29102
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "4664": {
      "op": "POP"
    },
    "4665": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28950,
        29102
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4666": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        28950,
        29102
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "4667": {
      "op": "POP"
    },
    "4668": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29118,
        29169
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x4BCDD9B8B0CADBBAFA70ADC1D3944DFB4731760C7D447E4C7DA9F6F5645F8C67"
    },
    "4701": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29118,
        29169
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "4702": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29118,
        29169
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4703": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29118,
        29169
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4704": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29118,
        29169
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4705": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29118,
        29169
      ],
      "op": "SUB",
      "path": "20"
    },
    "4706": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29118,
        29169
      ],
      "op": "ADD",
      "path": "20"
    },
    "4707": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29118,
        29169
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4708": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29118,
        29169
      ],
      "op": "LOG1",
      "path": "20"
    },
    "4709": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29215,
        29220
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 6,
      "value": "0x0"
    },
    "4711": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29179,
        29212
      ],
      "op": "DUP6",
      "path": "20"
    },
    "4712": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29179,
        29212
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4713": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29179,
        29212
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4714": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29179,
        29202
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x10"
    },
    "4716": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29179,
        29212
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4718": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29179,
        29212
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4719": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29179,
        29212
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4720": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29179,
        29212
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4721": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29179,
        29212
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4723": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29179,
        29212
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4724": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29179,
        29212
      ],
      "op": "DUP4",
      "path": "20"
    },
    "4725": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29179,
        29212
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4726": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29179,
        29220
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4727": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29179,
        29220
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4728": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4730": {
      "op": "NOT"
    },
    "4731": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29179,
        29220
      ],
      "op": "AND",
      "path": "20"
    },
    "4732": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29179,
        29220
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4733": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29179,
        29220
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "4734": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29234,
        29251
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC"
    },
    "4736": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29234,
        29261
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4737": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29234,
        29261
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4738": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29234,
        29261
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4739": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29234,
        29261
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4740": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29234,
        29261
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4741": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29234,
        29261
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4742": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29264,
        29265
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x7"
    },
    "4744": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29179,
        29220
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "4746": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29234,
        29261
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4747": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29234,
        29261
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4748": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29234,
        29261
      ],
      "op": "AND",
      "path": "20"
    },
    "4749": {
      "branch": 218,
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29234,
        29265
      ],
      "op": "LT",
      "path": "20"
    },
    "4750": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29230,
        29304
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "4751": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29230,
        29304
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x12B5"
    },
    "4754": {
      "branch": 218,
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29230,
        29304
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "4755": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29269,
        29296
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 7,
      "value": "0x0"
    },
    "4757": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29269,
        29296
      ],
      "op": "DUP6",
      "path": "20"
    },
    "4758": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29269,
        29296
      ],
      "op": "DUP2",
      "path": "20"
    },
    "4759": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29269,
        29296
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4760": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29269,
        29286
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC"
    },
    "4762": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29269,
        29296
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4764": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29269,
        29296
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4765": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29269,
        29296
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4767": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29269,
        29296
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4768": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29269,
        29296
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4769": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29269,
        29301
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4770": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29269,
        29301
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "4771": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29269,
        29301
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "4773": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29269,
        29301
      ],
      "op": "DUP1",
      "path": "20"
    },
    "4774": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29269,
        29301
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4775": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29269,
        29301
      ],
      "op": "AND",
      "path": "20"
    },
    "4776": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29300,
        29301
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "4778": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29269,
        29301
      ],
      "op": "ADD",
      "path": "20"
    },
    "4779": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29269,
        29301
      ],
      "op": "AND",
      "path": "20"
    },
    "4780": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4782": {
      "op": "NOT"
    },
    "4783": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29269,
        29301
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4784": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29269,
        29301
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4785": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29269,
        29301
      ],
      "op": "AND",
      "path": "20"
    },
    "4786": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29269,
        29301
      ],
      "op": "OR",
      "path": "20"
    },
    "4787": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29269,
        29301
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4788": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29269,
        29301
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "4789": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29230,
        29304
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "4790": {
      "op": "POP"
    },
    "4791": {
      "op": "POP"
    },
    "4792": {
      "op": "POP"
    },
    "4793": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29419,
        29446
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 8,
      "value": "0x0"
    },
    "4795": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29419,
        29446
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "4796": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29419,
        29446
      ],
      "op": "DUP3",
      "path": "20"
    },
    "4797": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29419,
        29446
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4798": {
      "op": "POP"
    },
    "4799": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29314,
        29329
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x11"
    },
    "4801": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29419,
        29446
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "4803": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29314,
        29339
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "4804": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29419,
        29446
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "4806": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29314,
        29339
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "4807": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29314,
        29339
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "4808": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29411,
        29416
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2710"
    },
    "4811": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29534,
        29567
      ],
      "op": "SWAP1",
      "path": "20",
      "statement": 9
    },
    "4812": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "offset": [
        29534,
        29567
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "4813": {
      "fn": "BuyTheDipNFT.buyTheDip",
      "jump": "o",
      "offset": [
        28491,
        29574
      ],
      "op": "JUMP",
      "path": "20"
    },
    "4814": {
      "fn": "ERC721.name",
      "offset": [
        4517,
        4615
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4815": {
      "fn": "ERC721.name",
      "offset": [
        4603,
        4608
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 10,
      "value": "0x6"
    },
    "4817": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4818": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4819": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4821": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4822": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4823": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4825": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "4827": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "4829": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4831": {
      "op": "NOT"
    },
    "4832": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "4835": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "4837": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "DUP9",
      "path": "4"
    },
    "4838": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "AND",
      "path": "4"
    },
    "4839": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "4840": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "MUL",
      "path": "4"
    },
    "4841": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "ADD",
      "path": "4"
    },
    "4842": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4843": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "4844": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "AND",
      "path": "4"
    },
    "4845": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "4846": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4847": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "4848": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "DIV",
      "path": "4"
    },
    "4849": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "4850": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "DUP5",
      "path": "4"
    },
    "4851": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "ADD",
      "path": "4"
    },
    "4852": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4853": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4854": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "DIV",
      "path": "4"
    },
    "4855": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4856": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "MUL",
      "path": "4"
    },
    "4857": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4858": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "ADD",
      "path": "4"
    },
    "4859": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4860": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "ADD",
      "path": "4"
    },
    "4861": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4862": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "4863": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4864": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4865": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4866": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4867": {
      "fn": "ERC721.name",
      "offset": [
        4571,
        4584
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "4869": {
      "fn": "ERC721.name",
      "offset": [
        4571,
        4584
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "4870": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4871": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "4872": {
      "fn": "ERC721.name",
      "offset": [
        4603,
        4608
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4873": {
      "fn": "ERC721.name",
      "offset": [
        4603,
        4608
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4874": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "DUP4",
      "path": "4"
    },
    "4875": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "ADD",
      "path": "4"
    },
    "4876": {
      "fn": "ERC721.name",
      "offset": [
        4603,
        4608
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4877": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4878": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4879": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "4880": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x135A"
    },
    "4883": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4884": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4885": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "4887": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "LT",
      "path": "4"
    },
    "4888": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x132F"
    },
    "4891": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4892": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "4895": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4896": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "DUP4",
      "path": "4"
    },
    "4897": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4898": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "DIV",
      "path": "4"
    },
    "4899": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "MUL",
      "path": "4"
    },
    "4900": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "DUP4",
      "path": "4"
    },
    "4901": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4902": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4903": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4905": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "ADD",
      "path": "4"
    },
    "4906": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4907": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x135A"
    },
    "4910": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4911": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4912": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4913": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "ADD",
      "path": "4"
    },
    "4914": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4915": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4916": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4918": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4919": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4921": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4923": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "4924": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4925": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4926": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4927": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "4928": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4929": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4930": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4931": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "4933": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "ADD",
      "path": "4"
    },
    "4934": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4935": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4937": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "ADD",
      "path": "4"
    },
    "4938": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4939": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "DUP4",
      "path": "4"
    },
    "4940": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "GT",
      "path": "4"
    },
    "4941": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x133D"
    },
    "4944": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4945": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4946": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4947": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "SUB",
      "path": "4"
    },
    "4948": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "4950": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "AND",
      "path": "4"
    },
    "4951": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4952": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "ADD",
      "path": "4"
    },
    "4953": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "4954": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4955": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "POP",
      "path": "4"
    },
    "4956": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "POP",
      "path": "4"
    },
    "4957": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "POP",
      "path": "4"
    },
    "4958": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "POP",
      "path": "4"
    },
    "4959": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "POP",
      "path": "4"
    },
    "4960": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4961": {
      "fn": "ERC721.name",
      "offset": [
        4596,
        4608
      ],
      "op": "POP",
      "path": "4"
    },
    "4962": {
      "fn": "ERC721.name",
      "offset": [
        4517,
        4615
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4963": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        4517,
        4615
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4964": {
      "fn": "ERC721.getApproved",
      "offset": [
        7222,
        7439
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4965": {
      "fn": "ERC721.getApproved",
      "offset": [
        7298,
        7305
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "4967": {
      "fn": "ERC721.getApproved",
      "offset": [
        7325,
        7341
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 11,
      "value": "0x136F"
    },
    "4970": {
      "fn": "ERC721.getApproved",
      "offset": [
        7333,
        7340
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4971": {
      "fn": "ERC721.getApproved",
      "offset": [
        7325,
        7332
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x371F"
    },
    "4974": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        7325,
        7341
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4975": {
      "branch": 260,
      "fn": "ERC721.getApproved",
      "offset": [
        7325,
        7341
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4976": {
      "fn": "ERC721.getApproved",
      "offset": [
        7317,
        7390
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13AA"
    },
    "4979": {
      "branch": 260,
      "fn": "ERC721.getApproved",
      "offset": [
        7317,
        7390
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4980": {
      "fn": "ERC721.getApproved",
      "offset": [
        7317,
        7390
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4982": {
      "fn": "ERC721.getApproved",
      "offset": [
        7317,
        7390
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4983": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4987": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4989": {
      "op": "SHL"
    },
    "4990": {
      "fn": "ERC721.getApproved",
      "offset": [
        7317,
        7390
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4991": {
      "fn": "ERC721.getApproved",
      "offset": [
        7317,
        7390
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4992": {
      "fn": "ERC721.getApproved",
      "offset": [
        7317,
        7390
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "4994": {
      "fn": "ERC721.getApproved",
      "offset": [
        7317,
        7390
      ],
      "op": "ADD",
      "path": "4"
    },
    "4995": {
      "fn": "ERC721.getApproved",
      "offset": [
        7317,
        7390
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4996": {
      "fn": "ERC721.getApproved",
      "offset": [
        7317,
        7390
      ],
      "op": "DUP1",
      "path": "4"
    },
    "4997": {
      "fn": "ERC721.getApproved",
      "offset": [
        7317,
        7390
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "4999": {
      "fn": "ERC721.getApproved",
      "offset": [
        7317,
        7390
      ],
      "op": "ADD",
      "path": "4"
    },
    "5000": {
      "fn": "ERC721.getApproved",
      "offset": [
        7317,
        7390
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5001": {
      "fn": "ERC721.getApproved",
      "offset": [
        7317,
        7390
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5002": {
      "fn": "ERC721.getApproved",
      "offset": [
        7317,
        7390
      ],
      "op": "SUB",
      "path": "4"
    },
    "5003": {
      "fn": "ERC721.getApproved",
      "offset": [
        7317,
        7390
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5004": {
      "fn": "ERC721.getApproved",
      "offset": [
        7317,
        7390
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5005": {
      "fn": "ERC721.getApproved",
      "offset": [
        7317,
        7390
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2C"
    },
    "5007": {
      "fn": "ERC721.getApproved",
      "offset": [
        7317,
        7390
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5008": {
      "fn": "ERC721.getApproved",
      "offset": [
        7317,
        7390
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5009": {
      "fn": "ERC721.getApproved",
      "offset": [
        7317,
        7390
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5011": {
      "fn": "ERC721.getApproved",
      "offset": [
        7317,
        7390
      ],
      "op": "ADD",
      "path": "4"
    },
    "5012": {
      "fn": "ERC721.getApproved",
      "offset": [
        7317,
        7390
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5013": {
      "fn": "ERC721.getApproved",
      "offset": [
        7317,
        7390
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x55E4"
    },
    "5016": {
      "fn": "ERC721.getApproved",
      "offset": [
        7317,
        7390
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2C"
    },
    "5018": {
      "fn": "ERC721.getApproved",
      "offset": [
        7317,
        7390
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5019": {
      "fn": "ERC721.getApproved",
      "offset": [
        7317,
        7390
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "5020": {
      "fn": "ERC721.getApproved",
      "offset": [
        7317,
        7390
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5022": {
      "fn": "ERC721.getApproved",
      "offset": [
        7317,
        7390
      ],
      "op": "ADD",
      "path": "4"
    },
    "5023": {
      "fn": "ERC721.getApproved",
      "offset": [
        7317,
        7390
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5024": {
      "fn": "ERC721.getApproved",
      "offset": [
        7317,
        7390
      ],
      "op": "POP",
      "path": "4"
    },
    "5025": {
      "fn": "ERC721.getApproved",
      "offset": [
        7317,
        7390
      ],
      "op": "POP",
      "path": "4"
    },
    "5026": {
      "fn": "ERC721.getApproved",
      "offset": [
        7317,
        7390
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5028": {
      "fn": "ERC721.getApproved",
      "offset": [
        7317,
        7390
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5029": {
      "fn": "ERC721.getApproved",
      "offset": [
        7317,
        7390
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5030": {
      "fn": "ERC721.getApproved",
      "offset": [
        7317,
        7390
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5031": {
      "fn": "ERC721.getApproved",
      "offset": [
        7317,
        7390
      ],
      "op": "SUB",
      "path": "4"
    },
    "5032": {
      "fn": "ERC721.getApproved",
      "offset": [
        7317,
        7390
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5033": {
      "fn": "ERC721.getApproved",
      "offset": [
        7317,
        7390
      ],
      "op": "REVERT",
      "path": "4"
    },
    "5034": {
      "fn": "ERC721.getApproved",
      "offset": [
        7317,
        7390
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5035": {
      "op": "POP"
    },
    "5036": {
      "fn": "ERC721.getApproved",
      "offset": [
        7408,
        7432
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 12,
      "value": "0x0"
    },
    "5038": {
      "fn": "ERC721.getApproved",
      "offset": [
        7408,
        7432
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5039": {
      "fn": "ERC721.getApproved",
      "offset": [
        7408,
        7432
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5040": {
      "fn": "ERC721.getApproved",
      "offset": [
        7408,
        7432
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5041": {
      "fn": "ERC721.getApproved",
      "offset": [
        7408,
        7423
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "5043": {
      "fn": "ERC721.getApproved",
      "offset": [
        7408,
        7432
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5045": {
      "fn": "ERC721.getApproved",
      "offset": [
        7408,
        7432
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5046": {
      "fn": "ERC721.getApproved",
      "offset": [
        7408,
        7432
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5048": {
      "fn": "ERC721.getApproved",
      "offset": [
        7408,
        7432
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5049": {
      "fn": "ERC721.getApproved",
      "offset": [
        7408,
        7432
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5050": {
      "fn": "ERC721.getApproved",
      "offset": [
        7408,
        7432
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "5051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5055": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5057": {
      "op": "SHL"
    },
    "5058": {
      "op": "SUB"
    },
    "5059": {
      "fn": "ERC721.getApproved",
      "offset": [
        7408,
        7432
      ],
      "op": "AND",
      "path": "4"
    },
    "5060": {
      "fn": "ERC721.getApproved",
      "offset": [
        7408,
        7432
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5061": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        7222,
        7439
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5062": {
      "fn": "ERC721.approve",
      "offset": [
        6766,
        7161
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5063": {
      "fn": "ERC721.approve",
      "offset": [
        6846,
        6859
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5065": {
      "fn": "ERC721.approve",
      "offset": [
        6862,
        6885
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13D1"
    },
    "5068": {
      "fn": "ERC721.approve",
      "offset": [
        6877,
        6884
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5069": {
      "fn": "ERC721.approve",
      "offset": [
        6862,
        6876
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E50"
    },
    "5072": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        6862,
        6885
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5073": {
      "fn": "ERC721.approve",
      "offset": [
        6862,
        6885
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5074": {
      "fn": "ERC721.approve",
      "offset": [
        6846,
        6885
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5075": {
      "fn": "ERC721.approve",
      "offset": [
        6846,
        6885
      ],
      "op": "POP",
      "path": "4"
    },
    "5076": {
      "fn": "ERC721.approve",
      "offset": [
        6909,
        6914
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 13
    },
    "5077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5081": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5083": {
      "op": "SHL"
    },
    "5084": {
      "op": "SUB"
    },
    "5085": {
      "fn": "ERC721.approve",
      "offset": [
        6903,
        6914
      ],
      "op": "AND",
      "path": "4"
    },
    "5086": {
      "fn": "ERC721.approve",
      "offset": [
        6903,
        6905
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5091": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5093": {
      "op": "SHL"
    },
    "5094": {
      "op": "SUB"
    },
    "5095": {
      "fn": "ERC721.approve",
      "offset": [
        6903,
        6914
      ],
      "op": "AND",
      "path": "4"
    },
    "5096": {
      "fn": "ERC721.approve",
      "offset": [
        6903,
        6914
      ],
      "op": "EQ",
      "path": "4"
    },
    "5097": {
      "branch": 261,
      "fn": "ERC721.approve",
      "offset": [
        6903,
        6914
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "5098": {
      "fn": "ERC721.approve",
      "offset": [
        6895,
        6952
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1424"
    },
    "5101": {
      "branch": 261,
      "fn": "ERC721.approve",
      "offset": [
        6895,
        6952
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5102": {
      "fn": "ERC721.approve",
      "offset": [
        6895,
        6952
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5104": {
      "fn": "ERC721.approve",
      "offset": [
        6895,
        6952
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5105": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5109": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5111": {
      "op": "SHL"
    },
    "5112": {
      "fn": "ERC721.approve",
      "offset": [
        6895,
        6952
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5113": {
      "fn": "ERC721.approve",
      "offset": [
        6895,
        6952
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5114": {
      "fn": "ERC721.approve",
      "offset": [
        6895,
        6952
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "5116": {
      "fn": "ERC721.approve",
      "offset": [
        6895,
        6952
      ],
      "op": "ADD",
      "path": "4"
    },
    "5117": {
      "fn": "ERC721.approve",
      "offset": [
        6895,
        6952
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5118": {
      "fn": "ERC721.approve",
      "offset": [
        6895,
        6952
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5119": {
      "fn": "ERC721.approve",
      "offset": [
        6895,
        6952
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5121": {
      "fn": "ERC721.approve",
      "offset": [
        6895,
        6952
      ],
      "op": "ADD",
      "path": "4"
    },
    "5122": {
      "fn": "ERC721.approve",
      "offset": [
        6895,
        6952
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5123": {
      "fn": "ERC721.approve",
      "offset": [
        6895,
        6952
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5124": {
      "fn": "ERC721.approve",
      "offset": [
        6895,
        6952
      ],
      "op": "SUB",
      "path": "4"
    },
    "5125": {
      "fn": "ERC721.approve",
      "offset": [
        6895,
        6952
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5126": {
      "fn": "ERC721.approve",
      "offset": [
        6895,
        6952
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5127": {
      "fn": "ERC721.approve",
      "offset": [
        6895,
        6952
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x21"
    },
    "5129": {
      "fn": "ERC721.approve",
      "offset": [
        6895,
        6952
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5130": {
      "fn": "ERC721.approve",
      "offset": [
        6895,
        6952
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5131": {
      "fn": "ERC721.approve",
      "offset": [
        6895,
        6952
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5133": {
      "fn": "ERC721.approve",
      "offset": [
        6895,
        6952
      ],
      "op": "ADD",
      "path": "4"
    },
    "5134": {
      "fn": "ERC721.approve",
      "offset": [
        6895,
        6952
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5135": {
      "fn": "ERC721.approve",
      "offset": [
        6895,
        6952
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x57FC"
    },
    "5138": {
      "fn": "ERC721.approve",
      "offset": [
        6895,
        6952
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x21"
    },
    "5140": {
      "fn": "ERC721.approve",
      "offset": [
        6895,
        6952
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5141": {
      "fn": "ERC721.approve",
      "offset": [
        6895,
        6952
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "5142": {
      "fn": "ERC721.approve",
      "offset": [
        6895,
        6952
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5144": {
      "fn": "ERC721.approve",
      "offset": [
        6895,
        6952
      ],
      "op": "ADD",
      "path": "4"
    },
    "5145": {
      "fn": "ERC721.approve",
      "offset": [
        6895,
        6952
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5146": {
      "fn": "ERC721.approve",
      "offset": [
        6895,
        6952
      ],
      "op": "POP",
      "path": "4"
    },
    "5147": {
      "fn": "ERC721.approve",
      "offset": [
        6895,
        6952
      ],
      "op": "POP",
      "path": "4"
    },
    "5148": {
      "fn": "ERC721.approve",
      "offset": [
        6895,
        6952
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5150": {
      "fn": "ERC721.approve",
      "offset": [
        6895,
        6952
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5151": {
      "fn": "ERC721.approve",
      "offset": [
        6895,
        6952
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5152": {
      "fn": "ERC721.approve",
      "offset": [
        6895,
        6952
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5153": {
      "fn": "ERC721.approve",
      "offset": [
        6895,
        6952
      ],
      "op": "SUB",
      "path": "4"
    },
    "5154": {
      "fn": "ERC721.approve",
      "offset": [
        6895,
        6952
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5155": {
      "fn": "ERC721.approve",
      "offset": [
        6895,
        6952
      ],
      "op": "REVERT",
      "path": "4"
    },
    "5156": {
      "fn": "ERC721.approve",
      "offset": [
        6895,
        6952
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5157": {
      "fn": "ERC721.approve",
      "offset": [
        6987,
        6992
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 14
    },
    "5158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5162": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5164": {
      "op": "SHL"
    },
    "5165": {
      "op": "SUB"
    },
    "5166": {
      "fn": "ERC721.approve",
      "offset": [
        6971,
        6992
      ],
      "op": "AND",
      "path": "4"
    },
    "5167": {
      "fn": "ERC721.approve",
      "offset": [
        6971,
        6983
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1436"
    },
    "5170": {
      "fn": "ERC721.approve",
      "offset": [
        6971,
        6981
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x372C"
    },
    "5173": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        6971,
        6983
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5174": {
      "fn": "ERC721.approve",
      "offset": [
        6971,
        6983
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5179": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5181": {
      "op": "SHL"
    },
    "5182": {
      "op": "SUB"
    },
    "5183": {
      "fn": "ERC721.approve",
      "offset": [
        6971,
        6992
      ],
      "op": "AND",
      "path": "4"
    },
    "5184": {
      "branch": 262,
      "fn": "ERC721.approve",
      "offset": [
        6971,
        6992
      ],
      "op": "EQ",
      "path": "4"
    },
    "5185": {
      "fn": "ERC721.approve",
      "offset": [
        6971,
        7040
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5186": {
      "fn": "ERC721.approve",
      "offset": [
        6971,
        7040
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1457"
    },
    "5189": {
      "branch": 262,
      "fn": "ERC721.approve",
      "offset": [
        6971,
        7040
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5190": {
      "fn": "ERC721.approve",
      "offset": [
        6971,
        7040
      ],
      "op": "POP",
      "path": "4"
    },
    "5191": {
      "fn": "ERC721.approve",
      "offset": [
        6996,
        7040
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1457"
    },
    "5194": {
      "fn": "ERC721.approve",
      "offset": [
        7020,
        7025
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5195": {
      "fn": "ERC721.approve",
      "offset": [
        7027,
        7039
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1452"
    },
    "5198": {
      "fn": "ERC721.approve",
      "offset": [
        7027,
        7037
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x372C"
    },
    "5201": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        7027,
        7039
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5202": {
      "fn": "ERC721.approve",
      "offset": [
        7027,
        7039
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5203": {
      "fn": "ERC721.approve",
      "offset": [
        6996,
        7019
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2BF4"
    },
    "5206": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        6996,
        7040
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5207": {
      "branch": 263,
      "fn": "ERC721.approve",
      "offset": [
        6996,
        7040
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5208": {
      "fn": "ERC721.approve",
      "offset": [
        6963,
        7122
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1492"
    },
    "5211": {
      "branch": 263,
      "fn": "ERC721.approve",
      "offset": [
        6963,
        7122
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5212": {
      "fn": "ERC721.approve",
      "offset": [
        6963,
        7122
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5214": {
      "fn": "ERC721.approve",
      "offset": [
        6963,
        7122
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5215": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5219": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5221": {
      "op": "SHL"
    },
    "5222": {
      "fn": "ERC721.approve",
      "offset": [
        6963,
        7122
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5223": {
      "fn": "ERC721.approve",
      "offset": [
        6963,
        7122
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5224": {
      "fn": "ERC721.approve",
      "offset": [
        6963,
        7122
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "5226": {
      "fn": "ERC721.approve",
      "offset": [
        6963,
        7122
      ],
      "op": "ADD",
      "path": "4"
    },
    "5227": {
      "fn": "ERC721.approve",
      "offset": [
        6963,
        7122
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5228": {
      "fn": "ERC721.approve",
      "offset": [
        6963,
        7122
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5229": {
      "fn": "ERC721.approve",
      "offset": [
        6963,
        7122
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5231": {
      "fn": "ERC721.approve",
      "offset": [
        6963,
        7122
      ],
      "op": "ADD",
      "path": "4"
    },
    "5232": {
      "fn": "ERC721.approve",
      "offset": [
        6963,
        7122
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5233": {
      "fn": "ERC721.approve",
      "offset": [
        6963,
        7122
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5234": {
      "fn": "ERC721.approve",
      "offset": [
        6963,
        7122
      ],
      "op": "SUB",
      "path": "4"
    },
    "5235": {
      "fn": "ERC721.approve",
      "offset": [
        6963,
        7122
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5236": {
      "fn": "ERC721.approve",
      "offset": [
        6963,
        7122
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5237": {
      "fn": "ERC721.approve",
      "offset": [
        6963,
        7122
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x38"
    },
    "5239": {
      "fn": "ERC721.approve",
      "offset": [
        6963,
        7122
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5240": {
      "fn": "ERC721.approve",
      "offset": [
        6963,
        7122
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5241": {
      "fn": "ERC721.approve",
      "offset": [
        6963,
        7122
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5243": {
      "fn": "ERC721.approve",
      "offset": [
        6963,
        7122
      ],
      "op": "ADD",
      "path": "4"
    },
    "5244": {
      "fn": "ERC721.approve",
      "offset": [
        6963,
        7122
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5245": {
      "fn": "ERC721.approve",
      "offset": [
        6963,
        7122
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x543A"
    },
    "5248": {
      "fn": "ERC721.approve",
      "offset": [
        6963,
        7122
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x38"
    },
    "5250": {
      "fn": "ERC721.approve",
      "offset": [
        6963,
        7122
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5251": {
      "fn": "ERC721.approve",
      "offset": [
        6963,
        7122
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "5252": {
      "fn": "ERC721.approve",
      "offset": [
        6963,
        7122
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5254": {
      "fn": "ERC721.approve",
      "offset": [
        6963,
        7122
      ],
      "op": "ADD",
      "path": "4"
    },
    "5255": {
      "fn": "ERC721.approve",
      "offset": [
        6963,
        7122
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5256": {
      "fn": "ERC721.approve",
      "offset": [
        6963,
        7122
      ],
      "op": "POP",
      "path": "4"
    },
    "5257": {
      "fn": "ERC721.approve",
      "offset": [
        6963,
        7122
      ],
      "op": "POP",
      "path": "4"
    },
    "5258": {
      "fn": "ERC721.approve",
      "offset": [
        6963,
        7122
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5260": {
      "fn": "ERC721.approve",
      "offset": [
        6963,
        7122
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5261": {
      "fn": "ERC721.approve",
      "offset": [
        6963,
        7122
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5262": {
      "fn": "ERC721.approve",
      "offset": [
        6963,
        7122
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5263": {
      "fn": "ERC721.approve",
      "offset": [
        6963,
        7122
      ],
      "op": "SUB",
      "path": "4"
    },
    "5264": {
      "fn": "ERC721.approve",
      "offset": [
        6963,
        7122
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5265": {
      "fn": "ERC721.approve",
      "offset": [
        6963,
        7122
      ],
      "op": "REVERT",
      "path": "4"
    },
    "5266": {
      "fn": "ERC721.approve",
      "offset": [
        6963,
        7122
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5267": {
      "fn": "ERC721.approve",
      "offset": [
        7133,
        7154
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 15,
      "value": "0x149C"
    },
    "5270": {
      "fn": "ERC721.approve",
      "offset": [
        7142,
        7144
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5271": {
      "fn": "ERC721.approve",
      "offset": [
        7146,
        7153
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5272": {
      "fn": "ERC721.approve",
      "offset": [
        7133,
        7141
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3730"
    },
    "5275": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        7133,
        7154
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5276": {
      "fn": "ERC721.approve",
      "offset": [
        7133,
        7154
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5277": {
      "fn": "ERC721.approve",
      "offset": [
        6766,
        7161
      ],
      "op": "POP",
      "path": "4"
    },
    "5278": {
      "fn": "ERC721.approve",
      "offset": [
        6766,
        7161
      ],
      "op": "POP",
      "path": "4"
    },
    "5279": {
      "fn": "ERC721.approve",
      "offset": [
        6766,
        7161
      ],
      "op": "POP",
      "path": "4"
    },
    "5280": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        6766,
        7161
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5281": {
      "offset": [
        16689,
        16741
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5282": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xD"
    },
    "5284": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5286": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5287": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5289": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5290": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5291": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5292": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5294": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5295": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "5296": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5297": {
      "fn": "ERC721.approve",
      "offset": [
        16689,
        16741
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5298": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        16689,
        16741
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5299": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5300": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25754,
        25795
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 16,
      "value": "0x14C4"
    },
    "5303": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25773,
        25785
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x14BE"
    },
    "5306": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25773,
        25783
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x372C"
    },
    "5309": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "jump": "i",
      "offset": [
        25773,
        25785
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5310": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25773,
        25785
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5311": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25787,
        25794
      ],
      "op": "DUP4",
      "path": "20"
    },
    "5312": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25754,
        25772
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x379E"
    },
    "5315": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "jump": "i",
      "offset": [
        25754,
        25795
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5316": {
      "branch": 219,
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25754,
        25795
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5317": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25733,
        25870
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x14FF"
    },
    "5320": {
      "branch": 219,
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25733,
        25870
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5321": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25733,
        25870
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5323": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25733,
        25870
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5324": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5328": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5330": {
      "op": "SHL"
    },
    "5331": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25733,
        25870
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5332": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25733,
        25870
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5333": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25733,
        25870
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "5335": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25733,
        25870
      ],
      "op": "ADD",
      "path": "20"
    },
    "5336": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25733,
        25870
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5337": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25733,
        25870
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5338": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25733,
        25870
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5340": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25733,
        25870
      ],
      "op": "ADD",
      "path": "20"
    },
    "5341": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25733,
        25870
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5342": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25733,
        25870
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5343": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25733,
        25870
      ],
      "op": "SUB",
      "path": "20"
    },
    "5344": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25733,
        25870
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5345": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25733,
        25870
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5346": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25733,
        25870
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x31"
    },
    "5348": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25733,
        25870
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5349": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25733,
        25870
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5350": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25733,
        25870
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5352": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25733,
        25870
      ],
      "op": "ADD",
      "path": "20"
    },
    "5353": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25733,
        25870
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5354": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25733,
        25870
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5983"
    },
    "5357": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25733,
        25870
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x31"
    },
    "5359": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25733,
        25870
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5360": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25733,
        25870
      ],
      "op": "CODECOPY",
      "path": "20"
    },
    "5361": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25733,
        25870
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5363": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25733,
        25870
      ],
      "op": "ADD",
      "path": "20"
    },
    "5364": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25733,
        25870
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5365": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25733,
        25870
      ],
      "op": "POP",
      "path": "20"
    },
    "5366": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25733,
        25870
      ],
      "op": "POP",
      "path": "20"
    },
    "5367": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25733,
        25870
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5369": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25733,
        25870
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5370": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25733,
        25870
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5371": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25733,
        25870
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5372": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25733,
        25870
      ],
      "op": "SUB",
      "path": "20"
    },
    "5373": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25733,
        25870
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5374": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25733,
        25870
      ],
      "op": "REVERT",
      "path": "20"
    },
    "5375": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25733,
        25870
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5376": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25880,
        25912
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 17,
      "value": "0x1509"
    },
    "5379": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25893,
        25900
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5380": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25902,
        25911
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5381": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25880,
        25892
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3842"
    },
    "5384": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "jump": "i",
      "offset": [
        25880,
        25912
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5385": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25880,
        25912
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5386": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "POP",
      "path": "20"
    },
    "5387": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "offset": [
        25653,
        25919
      ],
      "op": "POP",
      "path": "20"
    },
    "5388": {
      "fn": "BuyTheDipNFT.setTokenURI",
      "jump": "o",
      "offset": [
        25653,
        25919
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5389": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6260,
        6468
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5390": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6321,
        6328
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5392": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6440,
        6461
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 18,
      "value": "0x1519"
    },
    "5395": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6440,
        6452
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "5397": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6440,
        6459
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x38A5"
    },
    "5400": {
      "fn": "ERC721.totalSupply",
      "jump": "i",
      "offset": [
        6440,
        6461
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5401": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6440,
        6461
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5402": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6433,
        6461
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5403": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6433,
        6461
      ],
      "op": "POP",
      "path": "4"
    },
    "5404": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6260,
        6468
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5405": {
      "fn": "ERC721.totalSupply",
      "jump": "o",
      "offset": [
        6260,
        6468
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5406": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30497,
        31118
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5407": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30559,
        30574
      ],
      "op": "TIMESTAMP",
      "path": "20",
      "statement": 19
    },
    "5408": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30543,
        30556
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x15"
    },
    "5410": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30543,
        30574
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "5411": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30675,
        30694
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5413": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30697,
        30713
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x152C"
    },
    "5416": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30697,
        30711
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2244"
    },
    "5419": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "jump": "i",
      "offset": [
        30697,
        30713
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5420": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30697,
        30713
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5421": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30675,
        30713
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5422": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30675,
        30713
      ],
      "op": "POP",
      "path": "20"
    },
    "5423": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30728,
        30737
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5425": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30724,
        31112
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5426": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30742,
        30754
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "5428": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30742,
        30754
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5429": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30740,
        30741
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5430": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30740,
        30754
      ],
      "op": "LT",
      "path": "20"
    },
    "5431": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30724,
        31112
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5432": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30724,
        31112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1509"
    },
    "5435": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30724,
        31112
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5436": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30777,
        30803
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5438": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30777,
        30803
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5439": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30777,
        30803
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5440": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30777,
        30803
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5441": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30777,
        30800
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x10"
    },
    "5443": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30777,
        30803
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5445": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30777,
        30803
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5446": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30777,
        30803
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5448": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30777,
        30803
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5449": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30777,
        30803
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "5450": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30777,
        30803
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5451": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30777,
        30803
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "5453": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30777,
        30803
      ],
      "op": "AND",
      "path": "20"
    },
    "5454": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30777,
        30811
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5455": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30777,
        30811
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5456": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30777,
        30803
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "5458": {
      "branch": 220,
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30777,
        30811
      ],
      "op": "EQ",
      "path": "20"
    },
    "5459": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30773,
        31102
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5460": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30773,
        31102
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x157A"
    },
    "5463": {
      "branch": 220,
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30773,
        31102
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5464": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30835,
        30855
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5466": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30835,
        30855
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5467": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30835,
        30855
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5468": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30835,
        30855
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5469": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30835,
        30852
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xD"
    },
    "5471": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30835,
        30855
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5473": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30835,
        30855
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5474": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30835,
        30855
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5476": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30835,
        30855
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5477": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30835,
        30855
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "5478": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30835,
        30855
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5479": {
      "branch": 221,
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30835,
        30870
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5480": {
      "op": "LT"
    },
    "5481": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30831,
        30925
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1575"
    },
    "5484": {
      "branch": 221,
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30831,
        30925
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5485": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30894,
        30906
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 20,
      "value": "0x1575"
    },
    "5488": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30904,
        30905
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5489": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30894,
        30903
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x10F4"
    },
    "5492": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "jump": "i",
      "offset": [
        30894,
        30906
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5493": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30894,
        30906
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5494": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30773,
        31102
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x15A5"
    },
    "5497": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30773,
        31102
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5498": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30773,
        31102
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5499": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        31002,
        31012
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x12"
    },
    "5501": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        31002,
        31012
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5502": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30979,
        30999
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5504": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30979,
        30999
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5505": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30979,
        30999
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5506": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30979,
        30999
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5507": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30979,
        30996
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xD"
    },
    "5509": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30979,
        30999
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5511": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30979,
        30999
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5512": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30979,
        30999
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5514": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30979,
        30999
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5515": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30979,
        30999
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "5516": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30979,
        30999
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5517": {
      "branch": 222,
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30979,
        31012
      ],
      "op": "LT",
      "path": "20"
    },
    "5518": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30974,
        31088
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "5519": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30974,
        31088
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x15A5"
    },
    "5522": {
      "branch": 222,
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30974,
        31088
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5523": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        31049,
        31069
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 21,
      "value": "0x0"
    },
    "5525": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        31049,
        31069
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5526": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        31049,
        31069
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5527": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        31049,
        31069
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5528": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        31049,
        31066
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xD"
    },
    "5530": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        31049,
        31069
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5532": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        31049,
        31069
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5533": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        31049,
        31069
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5535": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        31049,
        31069
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5536": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        31049,
        31069
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "5537": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        31049,
        31069
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5538": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        31036,
        31046
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x12"
    },
    "5540": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        31036,
        31069
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "5541": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30974,
        31088
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5542": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30755,
        30758
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 22,
      "value": "0x1"
    },
    "5544": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30755,
        30758
      ],
      "op": "ADD",
      "path": "20"
    },
    "5545": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30724,
        31112
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1531"
    },
    "5548": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        30724,
        31112
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5549": {
      "offset": [
        17020,
        17070
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5550": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        17020,
        17070
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x11"
    },
    "5552": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        17020,
        17070
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5554": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        17020,
        17070
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5555": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        17020,
        17070
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "5557": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        17020,
        17070
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5558": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        17020,
        17070
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5559": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        17020,
        17070
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5560": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        17020,
        17070
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5562": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        17020,
        17070
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5563": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        17020,
        17070
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "5564": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        17020,
        17070
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "5565": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "offset": [
        17020,
        17070
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5566": {
      "fn": "BuyTheDipNFT.performUpkeepTest",
      "jump": "o",
      "offset": [
        17020,
        17070
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5567": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8086,
        8386
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5568": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8245,
        8286
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 23,
      "value": "0x15D0"
    },
    "5571": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8264,
        8276
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15CA"
    },
    "5574": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8264,
        8274
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x372C"
    },
    "5577": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        8264,
        8276
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5578": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8264,
        8276
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5579": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8278,
        8285
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5580": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8245,
        8263
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x379E"
    },
    "5583": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        8245,
        8286
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5584": {
      "branch": 264,
      "fn": "ERC721.transferFrom",
      "offset": [
        8245,
        8286
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5585": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8237,
        8340
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x160B"
    },
    "5588": {
      "branch": 264,
      "fn": "ERC721.transferFrom",
      "offset": [
        8237,
        8340
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5589": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8237,
        8340
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5591": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8237,
        8340
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5592": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5596": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5598": {
      "op": "SHL"
    },
    "5599": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8237,
        8340
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5600": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8237,
        8340
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5601": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8237,
        8340
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "5603": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8237,
        8340
      ],
      "op": "ADD",
      "path": "4"
    },
    "5604": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8237,
        8340
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5605": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8237,
        8340
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5606": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8237,
        8340
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5608": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8237,
        8340
      ],
      "op": "ADD",
      "path": "4"
    },
    "5609": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8237,
        8340
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5610": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8237,
        8340
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5611": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8237,
        8340
      ],
      "op": "SUB",
      "path": "4"
    },
    "5612": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8237,
        8340
      ],
      "op": "DUP3",
      "path": "4"
    },
    "5613": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8237,
        8340
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5614": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8237,
        8340
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x31"
    },
    "5616": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8237,
        8340
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5617": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8237,
        8340
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5618": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8237,
        8340
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5620": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8237,
        8340
      ],
      "op": "ADD",
      "path": "4"
    },
    "5621": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8237,
        8340
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5622": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8237,
        8340
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5983"
    },
    "5625": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8237,
        8340
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x31"
    },
    "5627": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8237,
        8340
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5628": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8237,
        8340
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "5629": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8237,
        8340
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5631": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8237,
        8340
      ],
      "op": "ADD",
      "path": "4"
    },
    "5632": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8237,
        8340
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5633": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8237,
        8340
      ],
      "op": "POP",
      "path": "4"
    },
    "5634": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8237,
        8340
      ],
      "op": "POP",
      "path": "4"
    },
    "5635": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8237,
        8340
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5637": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8237,
        8340
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5638": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8237,
        8340
      ],
      "op": "DUP1",
      "path": "4"
    },
    "5639": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8237,
        8340
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "5640": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8237,
        8340
      ],
      "op": "SUB",
      "path": "4"
    },
    "5641": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8237,
        8340
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5642": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8237,
        8340
      ],
      "op": "REVERT",
      "path": "4"
    },
    "5643": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8237,
        8340
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5644": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8351,
        8379
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 24,
      "value": "0x149C"
    },
    "5647": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8361,
        8365
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5648": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8367,
        8369
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5649": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8371,
        8378
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5650": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8351,
        8360
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x38B0"
    },
    "5653": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        8351,
        8379
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5654": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6029,
        6189
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5659": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5661": {
      "op": "SHL"
    },
    "5662": {
      "op": "SUB"
    },
    "5663": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6152,
        6172
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 25
    },
    "5664": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6152,
        6172
      ],
      "op": "AND",
      "path": "4"
    },
    "5665": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6126,
        6133
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "5667": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6152,
        6172
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5668": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6152,
        6172
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5669": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6152,
        6172
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5670": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6152,
        6165
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "5672": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6152,
        6172
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "5674": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6152,
        6172
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5675": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6152,
        6172
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5677": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6152,
        6172
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5678": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6152,
        6172
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "5679": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6152,
        6182
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1638"
    },
    "5682": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6152,
        6182
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5683": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6176,
        6181
      ],
      "op": "DUP4",
      "path": "4"
    },
    "5684": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6152,
        6175
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x39FC"
    },
    "5687": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        6152,
        6182
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5688": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6152,
        6182
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5689": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6145,
        6182
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "5690": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6029,
        6189
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "5691": {
      "op": "POP"
    },
    "5692": {
      "op": "POP"
    },
    "5693": {
      "op": "POP"
    },
    "5694": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "jump": "o",
      "offset": [
        6029,
        6189
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5695": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5696": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38764,
        38816
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5698": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38764,
        38816
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5699": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38764,
        38816
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5700": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38764,
        38816
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5701": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38764,
        38816
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5702": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38764,
        38816
      ],
      "op": "ADD",
      "path": "20"
    },
    "5703": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38764,
        38816
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5704": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38764,
        38816
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5705": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38764,
        38816
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1A"
    },
    "5707": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38764,
        38816
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5708": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38764,
        38816
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5709": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38764,
        38816
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x646174613A696D6167652F7376672B786D6C3B6261736536342C000000000000"
    },
    "5742": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38764,
        38816
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5744": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38764,
        38816
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5745": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38764,
        38816
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5746": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38764,
        38816
      ],
      "op": "ADD",
      "path": "20"
    },
    "5747": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38764,
        38816
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5748": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38854,
        38885
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 26
    },
    "5749": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38854,
        38885
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5750": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38854,
        38885
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5751": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38854,
        38885
      ],
      "op": "DUP4",
      "path": "20"
    },
    "5752": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38854,
        38885
      ],
      "op": "ADD",
      "path": "20"
    },
    "5753": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38854,
        38885
      ],
      "op": "DUP4",
      "path": "20"
    },
    "5754": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38854,
        38885
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5755": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38854,
        38885
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x13"
    },
    "5757": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38854,
        38885
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5758": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38854,
        38885
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5759": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38854,
        38885
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5760": {
      "op": "PUSH19",
      "value": "0x19185D184E9A5B5859D94BDCDD99CADE1B5B0B"
    },
    "5780": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "5782": {
      "op": "SHL"
    },
    "5783": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38854,
        38885
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5784": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38854,
        38885
      ],
      "op": "DUP5",
      "path": "20"
    },
    "5785": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38854,
        38885
      ],
      "op": "ADD",
      "path": "20"
    },
    "5786": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38854,
        38885
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5787": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38854,
        38885
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5788": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38854,
        38885
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5789": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "SWAP4",
      "path": "20",
      "statement": 27
    },
    "5790": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5791": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38710,
        38723
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "5793": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38710,
        38723
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "5794": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5796": {
      "op": "SWAP5"
    },
    "5797": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38854,
        38885
      ],
      "op": "DUP5",
      "path": "20"
    },
    "5798": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38854,
        38885
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "5799": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38938,
        38941
      ],
      "op": "DUP9",
      "path": "20"
    },
    "5800": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38938,
        38941
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "5801": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5802": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5803": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "ADD",
      "path": "20"
    },
    "5804": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5805": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5806": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5807": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38854,
        38885
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5808": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "DUP4",
      "path": "20"
    },
    "5809": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38854,
        38885
      ],
      "op": "DUP4",
      "path": "20"
    },
    "5810": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5811": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5813": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "DUP4",
      "path": "20"
    },
    "5814": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "LT",
      "path": "20"
    },
    "5815": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x16D1"
    },
    "5818": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5819": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5820": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5821": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5822": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5823": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5825": {
      "op": "NOT"
    },
    "5826": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5827": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5828": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "ADD",
      "path": "20"
    },
    "5829": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5830": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5832": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5833": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5834": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "ADD",
      "path": "20"
    },
    "5835": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5836": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "ADD",
      "path": "20"
    },
    "5837": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x16B2"
    },
    "5840": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5841": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5842": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5843": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5844": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5845": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5847": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "5848": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "DUP5",
      "path": "20"
    },
    "5849": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "SUB",
      "path": "20"
    },
    "5850": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "5853": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "EXP",
      "path": "20"
    },
    "5854": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5856": {
      "op": "NOT"
    },
    "5857": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "ADD",
      "path": "20"
    },
    "5858": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5859": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "NOT",
      "path": "20"
    },
    "5860": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5861": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5862": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "AND",
      "path": "20"
    },
    "5863": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5864": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "AND",
      "path": "20"
    },
    "5865": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "OR",
      "path": "20"
    },
    "5866": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5867": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5868": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "DUP6",
      "path": "20"
    },
    "5869": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5870": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5871": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5872": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "5873": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "ADD",
      "path": "20"
    },
    "5874": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5875": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "DUP6",
      "path": "20"
    },
    "5876": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "ADD",
      "path": "20"
    },
    "5877": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5878": {
      "op": "POP"
    },
    "5879": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5880": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "DUP4",
      "path": "20"
    },
    "5881": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "DUP4",
      "path": "20"
    },
    "5882": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5883": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5885": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "DUP4",
      "path": "20"
    },
    "5886": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "LT",
      "path": "20"
    },
    "5887": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1719"
    },
    "5890": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5891": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5892": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5893": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5894": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5895": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5897": {
      "op": "NOT"
    },
    "5898": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5899": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5900": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "ADD",
      "path": "20"
    },
    "5901": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5902": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5904": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5905": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5906": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "ADD",
      "path": "20"
    },
    "5907": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5908": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "ADD",
      "path": "20"
    },
    "5909": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x16FA"
    },
    "5912": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5913": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "5914": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "5916": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "DUP4",
      "path": "20"
    },
    "5917": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5919": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "SUB",
      "path": "20"
    },
    "5920": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "5923": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "EXP",
      "path": "20"
    },
    "5924": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "SUB",
      "path": "20"
    },
    "5925": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5926": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "NOT",
      "path": "20"
    },
    "5927": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5928": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5929": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "AND",
      "path": "20"
    },
    "5930": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5931": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "DUP5",
      "path": "20"
    },
    "5932": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5933": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "AND",
      "path": "20"
    },
    "5934": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5935": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5936": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "OR",
      "path": "20"
    },
    "5937": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "DUP6",
      "path": "20"
    },
    "5938": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5939": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "POP",
      "path": "20"
    },
    "5940": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "POP",
      "path": "20"
    },
    "5941": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "POP",
      "path": "20"
    },
    "5942": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "POP",
      "path": "20"
    },
    "5943": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "POP",
      "path": "20"
    },
    "5944": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "POP",
      "path": "20"
    },
    "5945": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5946": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "POP",
      "path": "20"
    },
    "5947": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "ADD",
      "path": "20"
    },
    "5948": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5949": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "POP",
      "path": "20"
    },
    "5950": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "POP",
      "path": "20"
    },
    "5951": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "POP",
      "path": "20"
    },
    "5952": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5954": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5955": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5957": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5958": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "DUP4",
      "path": "20"
    },
    "5959": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "SUB",
      "path": "20"
    },
    "5960": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "SUB",
      "path": "20"
    },
    "5961": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "DUP2",
      "path": "20"
    },
    "5962": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5963": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5964": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "5966": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38913,
        38942
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5967": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38899,
        38943
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5968": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38899,
        38943
      ],
      "op": "POP",
      "path": "20"
    },
    "5969": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38899,
        38943
      ],
      "op": "POP",
      "path": "20"
    },
    "5970": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38899,
        38943
      ],
      "op": "POP",
      "path": "20"
    },
    "5971": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38899,
        38943
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xE49"
    },
    "5974": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38899,
        38943
      ],
      "op": "JUMP",
      "path": "20"
    },
    "5975": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "JUMPDEST",
      "path": "20",
      "statement": 28
    },
    "5976": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5978": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "DUP4",
      "path": "20"
    },
    "5979": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "LT",
      "path": "20"
    },
    "5980": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1776"
    },
    "5983": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "5984": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "DUP1",
      "path": "20"
    },
    "5985": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "5986": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5987": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "5988": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5990": {
      "op": "NOT"
    },
    "5991": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "5992": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "5993": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "ADD",
      "path": "20"
    },
    "5994": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5995": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "5997": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "5998": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "DUP3",
      "path": "20"
    },
    "5999": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "ADD",
      "path": "20"
    },
    "6000": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6001": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "ADD",
      "path": "20"
    },
    "6002": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1757"
    },
    "6005": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6006": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6007": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6008": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6009": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6010": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6012": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "6013": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "DUP5",
      "path": "20"
    },
    "6014": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "SUB",
      "path": "20"
    },
    "6015": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "6018": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "EXP",
      "path": "20"
    },
    "6019": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6021": {
      "op": "NOT"
    },
    "6022": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "ADD",
      "path": "20"
    },
    "6023": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6024": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "NOT",
      "path": "20"
    },
    "6025": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6026": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6027": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "AND",
      "path": "20"
    },
    "6028": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6029": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "AND",
      "path": "20"
    },
    "6030": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "OR",
      "path": "20"
    },
    "6031": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6032": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6033": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "DUP6",
      "path": "20"
    },
    "6034": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6035": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6036": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6037": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "6038": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "ADD",
      "path": "20"
    },
    "6039": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6040": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "DUP6",
      "path": "20"
    },
    "6041": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "ADD",
      "path": "20"
    },
    "6042": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6043": {
      "op": "POP"
    },
    "6044": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6045": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "DUP4",
      "path": "20"
    },
    "6046": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "DUP4",
      "path": "20"
    },
    "6047": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6048": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6050": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "DUP4",
      "path": "20"
    },
    "6051": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "LT",
      "path": "20"
    },
    "6052": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x17BE"
    },
    "6055": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6056": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6057": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6058": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6059": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6060": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6062": {
      "op": "NOT"
    },
    "6063": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6064": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6065": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "ADD",
      "path": "20"
    },
    "6066": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6067": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6069": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6070": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6071": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "ADD",
      "path": "20"
    },
    "6072": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6073": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "ADD",
      "path": "20"
    },
    "6074": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x179F"
    },
    "6077": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6078": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6079": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "6081": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "DUP4",
      "path": "20"
    },
    "6082": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6084": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "SUB",
      "path": "20"
    },
    "6085": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "6088": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "EXP",
      "path": "20"
    },
    "6089": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "SUB",
      "path": "20"
    },
    "6090": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6091": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "NOT",
      "path": "20"
    },
    "6092": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6093": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6094": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "AND",
      "path": "20"
    },
    "6095": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6096": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "DUP5",
      "path": "20"
    },
    "6097": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6098": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "AND",
      "path": "20"
    },
    "6099": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6100": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6101": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "OR",
      "path": "20"
    },
    "6102": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "DUP6",
      "path": "20"
    },
    "6103": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6104": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "POP",
      "path": "20"
    },
    "6105": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "POP",
      "path": "20"
    },
    "6106": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "POP",
      "path": "20"
    },
    "6107": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "POP",
      "path": "20"
    },
    "6108": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "POP",
      "path": "20"
    },
    "6109": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "POP",
      "path": "20"
    },
    "6110": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6111": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "POP",
      "path": "20"
    },
    "6112": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "ADD",
      "path": "20"
    },
    "6113": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6114": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "POP",
      "path": "20"
    },
    "6115": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "POP",
      "path": "20"
    },
    "6116": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "POP",
      "path": "20"
    },
    "6117": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6119": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6120": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6122": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6123": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "DUP4",
      "path": "20"
    },
    "6124": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "SUB",
      "path": "20"
    },
    "6125": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "SUB",
      "path": "20"
    },
    "6126": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6127": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6128": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6129": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6131": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39158,
        39200
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6132": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39144,
        39201
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "6133": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39144,
        39201
      ],
      "op": "POP",
      "path": "20"
    },
    "6134": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39144,
        39201
      ],
      "op": "POP",
      "path": "20"
    },
    "6135": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39144,
        39201
      ],
      "op": "POP",
      "path": "20"
    },
    "6136": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        39144,
        39201
      ],
      "op": "POP",
      "path": "20"
    },
    "6137": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6138": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6139": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        38647,
        39208
      ],
      "op": "POP",
      "path": "20"
    },
    "6140": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "jump": "o",
      "offset": [
        38647,
        39208
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6141": {
      "offset": [
        20771,
        20790
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6142": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        20771,
        20790
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "6144": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        20771,
        20790
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6149": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6151": {
      "op": "SHL"
    },
    "6152": {
      "op": "SUB"
    },
    "6153": {
      "offset": [
        20771,
        20790
      ],
      "op": "AND",
      "path": "20"
    },
    "6154": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        20771,
        20790
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6155": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "jump": "o",
      "offset": [
        20771,
        20790
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6156": {
      "offset": [
        17785,
        17814
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6157": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        17785,
        17814
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1C"
    },
    "6159": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        17785,
        17814
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6164": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6166": {
      "op": "SHL"
    },
    "6167": {
      "op": "SUB"
    },
    "6168": {
      "offset": [
        17785,
        17814
      ],
      "op": "AND",
      "path": "20"
    },
    "6169": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "offset": [
        17785,
        17814
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6170": {
      "fn": "BuyTheDipNFT.svgToImageURI",
      "jump": "o",
      "offset": [
        17785,
        17814
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6171": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8452,
        8601
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6172": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8555,
        8594
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 29,
      "value": "0x149C"
    },
    "6175": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8572,
        8576
      ],
      "op": "DUP4",
      "path": "4"
    },
    "6176": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8578,
        8580
      ],
      "op": "DUP4",
      "path": "4"
    },
    "6177": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8582,
        8589
      ],
      "op": "DUP4",
      "path": "4"
    },
    "6178": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8555,
        8594
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6180": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8555,
        8594
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "6181": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8555,
        8594
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6182": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8555,
        8594
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "6184": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8555,
        8594
      ],
      "op": "ADD",
      "path": "4"
    },
    "6185": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8555,
        8594
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6187": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8555,
        8594
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6188": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8555,
        8594
      ],
      "op": "DUP1",
      "path": "4"
    },
    "6189": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8555,
        8594
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "6191": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8555,
        8594
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6192": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8555,
        8594
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6193": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8555,
        8594
      ],
      "op": "POP",
      "path": "4"
    },
    "6194": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8555,
        8571
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x250E"
    },
    "6197": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        8555,
        8594
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6198": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22118,
        24448
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6199": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22197,
        22204
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6201": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22251,
        22265
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 30,
      "value": "0x16"
    },
    "6203": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22251,
        22265
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6204": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22240,
        22247
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x19"
    },
    "6206": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22240,
        22247
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6207": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22228,
        22237
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "6208": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22228,
        22247
      ],
      "op": "ADD",
      "path": "20"
    },
    "6209": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22228,
        22265
      ],
      "op": "LT",
      "path": "20"
    },
    "6210": {
      "branch": 223,
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22228,
        22265
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "6211": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22219,
        22293
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1893"
    },
    "6214": {
      "branch": 223,
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22219,
        22293
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6215": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22219,
        22293
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6217": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22219,
        22293
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6218": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22219,
        22293
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6219": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6223": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6225": {
      "op": "SHL"
    },
    "6226": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22219,
        22293
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6227": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22219,
        22293
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6228": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22219,
        22293
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6230": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22219,
        22293
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "6232": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22219,
        22293
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6233": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22219,
        22293
      ],
      "op": "ADD",
      "path": "20"
    },
    "6234": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22219,
        22293
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6235": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22219,
        22293
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x17"
    },
    "6237": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22219,
        22293
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "6239": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22219,
        22293
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6240": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22219,
        22293
      ],
      "op": "ADD",
      "path": "20"
    },
    "6241": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22219,
        22293
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6242": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22219,
        22293
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x4E6F7420656E6F756768206E617469766520636F696E2E000000000000000000"
    },
    "6275": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22219,
        22293
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "6277": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22219,
        22293
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6278": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22219,
        22293
      ],
      "op": "ADD",
      "path": "20"
    },
    "6279": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22219,
        22293
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6280": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22219,
        22293
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6281": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22219,
        22293
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6282": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22219,
        22293
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6283": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22219,
        22293
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6284": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22219,
        22293
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6285": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22219,
        22293
      ],
      "op": "SUB",
      "path": "20"
    },
    "6286": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22219,
        22293
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "6288": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22219,
        22293
      ],
      "op": "ADD",
      "path": "20"
    },
    "6289": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22219,
        22293
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6290": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22219,
        22293
      ],
      "op": "REVERT",
      "path": "20"
    },
    "6291": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22219,
        22293
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6292": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22329,
        22332
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 31,
      "value": "0x64"
    },
    "6294": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22315,
        22326
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6295": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22315,
        22332
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "6300": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22315,
        22332
      ],
      "op": "AND",
      "path": "20"
    },
    "6301": {
      "branch": 224,
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22315,
        22332
      ],
      "op": "LT",
      "path": "20"
    },
    "6302": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22307,
        22377
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x18D8"
    },
    "6305": {
      "branch": 224,
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22307,
        22377
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6306": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22307,
        22377
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6308": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22307,
        22377
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6309": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6313": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6315": {
      "op": "SHL"
    },
    "6316": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22307,
        22377
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6317": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22307,
        22377
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6318": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22307,
        22377
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "6320": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22307,
        22377
      ],
      "op": "ADD",
      "path": "20"
    },
    "6321": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22307,
        22377
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6322": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22307,
        22377
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6323": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22307,
        22377
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6325": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22307,
        22377
      ],
      "op": "ADD",
      "path": "20"
    },
    "6326": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22307,
        22377
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6327": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22307,
        22377
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6328": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22307,
        22377
      ],
      "op": "SUB",
      "path": "20"
    },
    "6329": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22307,
        22377
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6330": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22307,
        22377
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6331": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22307,
        22377
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x28"
    },
    "6333": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22307,
        22377
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6334": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22307,
        22377
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6335": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22307,
        22377
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6337": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22307,
        22377
      ],
      "op": "ADD",
      "path": "20"
    },
    "6338": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22307,
        22377
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6339": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22307,
        22377
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x51B0"
    },
    "6342": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22307,
        22377
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x28"
    },
    "6344": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22307,
        22377
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6345": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22307,
        22377
      ],
      "op": "CODECOPY",
      "path": "20"
    },
    "6346": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22307,
        22377
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6348": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22307,
        22377
      ],
      "op": "ADD",
      "path": "20"
    },
    "6349": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22307,
        22377
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6350": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22307,
        22377
      ],
      "op": "POP",
      "path": "20"
    },
    "6351": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22307,
        22377
      ],
      "op": "POP",
      "path": "20"
    },
    "6352": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22307,
        22377
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6354": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22307,
        22377
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6355": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22307,
        22377
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6356": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22307,
        22377
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6357": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22307,
        22377
      ],
      "op": "SUB",
      "path": "20"
    },
    "6358": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22307,
        22377
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6359": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22307,
        22377
      ],
      "op": "REVERT",
      "path": "20"
    },
    "6360": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22307,
        22377
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6361": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22426,
        22445
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 32,
      "value": "0x18E0"
    },
    "6364": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22426,
        22443
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3A08"
    },
    "6367": {
      "fn": "BuyTheDipNFT.createCollectible",
      "jump": "i",
      "offset": [
        22426,
        22445
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6368": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22426,
        22445
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6369": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22488,
        22495
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 33,
      "value": "0x19"
    },
    "6371": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22488,
        22495
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6372": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22460,
        22484
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1D"
    },
    "6374": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22460,
        22495
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6375": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22460,
        22495
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6376": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22460,
        22495
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6377": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22460,
        22495
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6378": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22460,
        22495
      ],
      "op": "ADD",
      "path": "20"
    },
    "6379": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22460,
        22495
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6380": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22460,
        22495
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "6381": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22551,
        22563
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "6383": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22551,
        22563
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6384": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22551,
        22563
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6387": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22592,
        22608
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 34
    },
    "6388": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22592,
        22608
      ],
      "op": "ADD",
      "path": "20"
    },
    "6389": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22577,
        22608
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6390": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22577,
        22608
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6391": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22577,
        22608
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "6392": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22622,
        22654
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 35,
      "value": "0x1901"
    },
    "6395": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22632,
        22642
      ],
      "op": "CALLER",
      "path": "20"
    },
    "6396": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22551,
        22563
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6397": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22622,
        22631
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3AA3"
    },
    "6400": {
      "fn": "BuyTheDipNFT.createCollectible",
      "jump": "i",
      "offset": [
        22622,
        22654
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6401": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22622,
        22654
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6402": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22700,
        22701
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 36,
      "value": "0x0"
    },
    "6404": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22669,
        22697
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6405": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22669,
        22697
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6406": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22669,
        22697
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6407": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22669,
        22686
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC"
    },
    "6409": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22669,
        22697
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6411": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22669,
        22697
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6412": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22669,
        22697
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6414": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22669,
        22697
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6415": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22669,
        22697
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "6416": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22669,
        22701
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6417": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22669,
        22701
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6418": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6420": {
      "op": "NOT"
    },
    "6421": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22669,
        22701
      ],
      "op": "AND",
      "path": "20"
    },
    "6422": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22669,
        22701
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6423": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22669,
        22701
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "6424": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22787,
        22790
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 37,
      "value": "0x64"
    },
    "6426": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22768,
        22784
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1921"
    },
    "6429": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22768,
        22782
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2244"
    },
    "6432": {
      "fn": "BuyTheDipNFT.createCollectible",
      "jump": "i",
      "offset": [
        22768,
        22784
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6433": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22768,
        22784
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6434": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22753,
        22764
      ],
      "op": "DUP5",
      "path": "20"
    },
    "6435": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22747,
        22750
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "6437": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22747,
        22764
      ],
      "op": "SUB",
      "path": "20"
    },
    "6438": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22746,
        22784
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "6443": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22746,
        22784
      ],
      "op": "AND",
      "path": "20"
    },
    "6444": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22746,
        22784
      ],
      "op": "MUL",
      "path": "20"
    },
    "6445": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22746,
        22790
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6446": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22746,
        22790
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1933"
    },
    "6449": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22746,
        22790
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6450": {
      "dev": "Division by zero",
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22746,
        22790
      ],
      "op": "INVALID",
      "path": "20"
    },
    "6451": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22746,
        22790
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6452": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22715,
        22743
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6454": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22715,
        22743
      ],
      "op": "DUP4",
      "path": "20"
    },
    "6455": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22715,
        22743
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6456": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22715,
        22743
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6457": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22715,
        22732
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xD"
    },
    "6459": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22715,
        22743
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6461": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22715,
        22743
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6462": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22715,
        22743
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6463": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22715,
        22743
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6464": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22715,
        22743
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6466": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22715,
        22743
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6467": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22715,
        22743
      ],
      "op": "DUP4",
      "path": "20"
    },
    "6468": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22715,
        22743
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "6469": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22746,
        22790
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "6470": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22746,
        22790
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6471": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22746,
        22790
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "6472": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22746,
        22790
      ],
      "op": "DIV",
      "path": "20"
    },
    "6473": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22715,
        22790
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6474": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22715,
        22790
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "6475": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22715,
        22790
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "6476": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22804,
        22823
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 38,
      "value": "0xE"
    },
    "6478": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22804,
        22834
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6479": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22804,
        22834
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6480": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22804,
        22834
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6481": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22804,
        22834
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6482": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22804,
        22834
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "6483": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22804,
        22848
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "6488": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22804,
        22848
      ],
      "op": "DUP6",
      "path": "20"
    },
    "6489": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22804,
        22848
      ],
      "op": "AND",
      "path": "20"
    },
    "6490": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22804,
        22848
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6491": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22804,
        22848
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "6492": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23027,
        23044
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x21"
    },
    "6494": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23027,
        23044
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6495": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23061,
        23067
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "6497": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23061,
        23067
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6498": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23069,
        23081
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x13"
    },
    "6500": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23069,
        23081
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6501": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22983,
        23082
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1981"
    },
    "6504": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22983,
        23082
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6505": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23016,
        23025
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "6506": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23016,
        23025
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6511": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6513": {
      "op": "SHL"
    },
    "6514": {
      "op": "SUB"
    },
    "6515": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23027,
        23044
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6516": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23027,
        23044
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6517": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23027,
        23044
      ],
      "op": "AND",
      "path": "20"
    },
    "6518": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23027,
        23044
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6519": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23054,
        23058
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "6520": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23054,
        23058
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6521": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23061,
        23067
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6522": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23061,
        23067
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6523": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23061,
        23067
      ],
      "op": "AND",
      "path": "20"
    },
    "6524": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23061,
        23067
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6525": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22983,
        23015
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3ABD"
    },
    "6528": {
      "fn": "BuyTheDipNFT.createCollectible",
      "jump": "i",
      "offset": [
        22983,
        23082
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6529": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22983,
        23082
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6530": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22950,
        23082
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6531": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22950,
        23082
      ],
      "op": "POP",
      "path": "20"
    },
    "6532": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22950,
        23082
      ],
      "op": "POP",
      "path": "20"
    },
    "6533": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23174,
        23181
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 39,
      "value": "0x19"
    },
    "6535": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23174,
        23181
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6536": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23162,
        23171
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "6537": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23162,
        23181
      ],
      "op": "ADD",
      "path": "20"
    },
    "6538": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23141,
        23159
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6539": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23129,
        23138
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "6540": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23129,
        23159
      ],
      "op": "MUL",
      "path": "20"
    },
    "6541": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23129,
        23182
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6542": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23129,
        23182
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1993"
    },
    "6545": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23129,
        23182
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6546": {
      "dev": "Division by zero",
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23129,
        23182
      ],
      "op": "INVALID",
      "path": "20"
    },
    "6547": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23129,
        23182
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6548": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23096,
        23126
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6550": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23096,
        23126
      ],
      "op": "DUP5",
      "path": "20"
    },
    "6551": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23096,
        23126
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6552": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23096,
        23126
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6553": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23096,
        23115
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xF"
    },
    "6555": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23096,
        23126
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6557": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23096,
        23126
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6558": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23096,
        23126
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6560": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23096,
        23126
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6561": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23096,
        23126
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "6562": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23129,
        23182
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6563": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23129,
        23182
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6564": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23129,
        23182
      ],
      "op": "DIV",
      "path": "20"
    },
    "6565": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23096,
        23182
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6566": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23096,
        23182
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "6567": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23267,
        23274
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 40,
      "value": "0x19"
    },
    "6569": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23267,
        23274
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6570": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23255,
        23264
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "6571": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23255,
        23274
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6572": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23255,
        23274
      ],
      "op": "ADD",
      "path": "20"
    },
    "6573": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23255,
        23274
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6574": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23224,
        23252
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6575": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23224,
        23252
      ],
      "op": "MUL",
      "path": "20"
    },
    "6576": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23255,
        23274
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6577": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23224,
        23275
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x19B6"
    },
    "6580": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23224,
        23275
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6581": {
      "dev": "Division by zero",
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23224,
        23275
      ],
      "op": "INVALID",
      "path": "20"
    },
    "6582": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23224,
        23275
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6583": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23196,
        23220
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1D"
    },
    "6585": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23196,
        23275
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6586": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23196,
        23275
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6587": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23224,
        23275
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "6588": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23224,
        23275
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6589": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23224,
        23275
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6590": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23224,
        23275
      ],
      "op": "DIV",
      "path": "20"
    },
    "6591": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23196,
        23275
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6592": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23196,
        23275
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6593": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23196,
        23275
      ],
      "op": "ADD",
      "path": "20"
    },
    "6594": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23196,
        23275
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6595": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23196,
        23275
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "6596": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6598": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23298,
        23328
      ],
      "op": "DUP3",
      "path": "20",
      "statement": 41
    },
    "6599": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23298,
        23328
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6600": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23298,
        23328
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6601": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23298,
        23317
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xF"
    },
    "6603": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23298,
        23328
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6605": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23298,
        23328
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6606": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23298,
        23328
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6608": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23298,
        23328
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6609": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23298,
        23328
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "6610": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23298,
        23328
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6611": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23290,
        23361
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A1E"
    },
    "6614": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23290,
        23361
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6615": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23290,
        23361
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6617": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23290,
        23361
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6618": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23290,
        23361
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6619": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6623": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6625": {
      "op": "SHL"
    },
    "6626": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23290,
        23361
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6627": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23290,
        23361
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6628": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23290,
        23361
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6630": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23290,
        23361
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "6632": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23290,
        23361
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6633": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23290,
        23361
      ],
      "op": "ADD",
      "path": "20"
    },
    "6634": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23290,
        23361
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6635": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23290,
        23361
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x18"
    },
    "6637": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23290,
        23361
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "6639": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23290,
        23361
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6640": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23290,
        23361
      ],
      "op": "ADD",
      "path": "20"
    },
    "6641": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23290,
        23361
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6642": {
      "op": "PUSH24",
      "value": "0x22B93937B910902737903A37B5B2B739903137BAB3B43A17"
    },
    "6667": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "6669": {
      "op": "SHL"
    },
    "6670": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23290,
        23361
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "6672": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23290,
        23361
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6673": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23290,
        23361
      ],
      "op": "ADD",
      "path": "20"
    },
    "6674": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23290,
        23361
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6675": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23290,
        23361
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6676": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23290,
        23361
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6677": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23290,
        23361
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6678": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23290,
        23361
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6679": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23290,
        23361
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6680": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23290,
        23361
      ],
      "op": "SUB",
      "path": "20"
    },
    "6681": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23290,
        23361
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "6683": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23290,
        23361
      ],
      "op": "ADD",
      "path": "20"
    },
    "6684": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23290,
        23361
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6685": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23290,
        23361
      ],
      "op": "REVERT",
      "path": "20"
    },
    "6686": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23290,
        23361
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6687": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23449,
        23479
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 42,
      "value": "0x0"
    },
    "6689": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23449,
        23479
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6690": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23449,
        23479
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6691": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23449,
        23479
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6692": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23449,
        23468
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xF"
    },
    "6694": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23449,
        23479
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6696": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23449,
        23479
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6697": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23449,
        23479
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6699": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23449,
        23479
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6700": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23449,
        23479
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "6701": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23449,
        23479
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6702": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23434,
        23480
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A36"
    },
    "6705": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23434,
        23480
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6706": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23434,
        23448
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3E0C"
    },
    "6709": {
      "fn": "BuyTheDipNFT.createCollectible",
      "jump": "i",
      "offset": [
        23434,
        23480
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6710": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23434,
        23480
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6711": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23572,
        23582
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x12"
    },
    "6713": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23572,
        23582
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6714": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23541,
        23569
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6716": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23541,
        23569
      ],
      "op": "DUP4",
      "path": "20"
    },
    "6717": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23541,
        23569
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6718": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23541,
        23569
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6719": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23541,
        23558
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xD"
    },
    "6721": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23541,
        23569
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6723": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23541,
        23569
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6724": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23541,
        23569
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6726": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23541,
        23569
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6727": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23541,
        23569
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "6728": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23541,
        23569
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6729": {
      "branch": 225,
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23541,
        23582
      ],
      "op": "GT",
      "path": "20"
    },
    "6730": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23538,
        23657
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "6731": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23538,
        23657
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A61"
    },
    "6734": {
      "branch": 225,
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23538,
        23657
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6735": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23614,
        23642
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 43,
      "value": "0x0"
    },
    "6737": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23614,
        23642
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6738": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23614,
        23642
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6739": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23614,
        23642
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6740": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23614,
        23631
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xD"
    },
    "6742": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23614,
        23642
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6744": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23614,
        23642
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6745": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23614,
        23642
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6747": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23614,
        23642
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6748": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23614,
        23642
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "6749": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23614,
        23642
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6750": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23601,
        23611
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x12"
    },
    "6752": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23601,
        23642
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "6753": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23538,
        23657
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6754": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23671,
        23686
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 44,
      "value": "0x14"
    },
    "6756": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23671,
        23708
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6757": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23671,
        23708
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6758": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23671,
        23708
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6759": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23671,
        23708
      ],
      "op": "ADD",
      "path": "20"
    },
    "6760": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23671,
        23708
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6761": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23671,
        23708
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "6762": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23671,
        23686
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6764": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23756,
        23790
      ],
      "op": "DUP3",
      "path": "20",
      "statement": 45
    },
    "6765": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23756,
        23790
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6766": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23756,
        23790
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6767": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23756,
        23779
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x10"
    },
    "6769": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23756,
        23790
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6771": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23756,
        23790
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6772": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23756,
        23790
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6774": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23756,
        23790
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6775": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23756,
        23790
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "6776": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23756,
        23797
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6777": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23756,
        23797
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6778": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6780": {
      "op": "NOT"
    },
    "6781": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23756,
        23797
      ],
      "op": "AND",
      "path": "20"
    },
    "6782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6784": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23756,
        23797
      ],
      "op": "OR",
      "path": "20"
    },
    "6785": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23756,
        23797
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6786": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23756,
        23797
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "6787": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23813,
        23857
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 46,
      "value": "0x1A94"
    },
    "6790": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23780,
        23789
      ],
      "op": "DUP3",
      "path": "20"
    },
    "6791": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23837,
        23856
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A8F"
    },
    "6794": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23780,
        23789
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6795": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23837,
        23845
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2566"
    },
    "6798": {
      "fn": "BuyTheDipNFT.createCollectible",
      "jump": "i",
      "offset": [
        23837,
        23856
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6799": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23837,
        23856
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6800": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23813,
        23825
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3842"
    },
    "6803": {
      "fn": "BuyTheDipNFT.createCollectible",
      "jump": "i",
      "offset": [
        23813,
        23857
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6804": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23813,
        23857
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6805": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23875,
        23884
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6806": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23886,
        23887
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "6808": {
      "branch": 226,
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23875,
        23887
      ],
      "op": "EQ",
      "path": "20"
    },
    "6809": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23872,
        24388
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "6810": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23872,
        24388
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1AA5"
    },
    "6813": {
      "branch": 226,
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        23872,
        24388
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6814": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        24354,
        24373
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 47,
      "value": "0x1AA5"
    },
    "6817": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        24354,
        24371
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x151E"
    },
    "6820": {
      "fn": "BuyTheDipNFT.createCollectible",
      "jump": "i",
      "offset": [
        24354,
        24373
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6821": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        24354,
        24373
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6822": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22118,
        24448
      ],
      "op": "POP",
      "path": "20"
    },
    "6823": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22118,
        24448
      ],
      "op": "POP",
      "path": "20"
    },
    "6824": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22118,
        24448
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "6825": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22118,
        24448
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6826": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        22118,
        24448
      ],
      "op": "POP",
      "path": "20"
    },
    "6827": {
      "fn": "BuyTheDipNFT.createCollectible",
      "jump": "o",
      "offset": [
        22118,
        24448
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6828": {
      "offset": [
        16763,
        16817
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6829": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        16763,
        16817
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE"
    },
    "6831": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        16763,
        16817
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6833": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        16763,
        16817
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6834": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        16763,
        16817
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6836": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        16763,
        16817
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6837": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        16763,
        16817
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6838": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        16763,
        16817
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6839": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        16763,
        16817
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6841": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        16763,
        16817
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6842": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        16763,
        16817
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "6843": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        16763,
        16817
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6844": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        16763,
        16817
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6845": {
      "fn": "BuyTheDipNFT.createCollectible",
      "jump": "o",
      "offset": [
        16763,
        16817
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6846": {
      "offset": [
        16591,
        16641
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6847": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        16591,
        16641
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC"
    },
    "6849": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        16591,
        16641
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "6851": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        16591,
        16641
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6852": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        16591,
        16641
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "6854": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        16591,
        16641
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6855": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        16591,
        16641
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6856": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        16591,
        16641
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "6857": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        16591,
        16641
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6859": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        16591,
        16641
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "6860": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        16591,
        16641
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "6861": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        16591,
        16641
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "6862": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        16591,
        16641
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "6864": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        16591,
        16641
      ],
      "op": "AND",
      "path": "20"
    },
    "6865": {
      "fn": "BuyTheDipNFT.createCollectible",
      "offset": [
        16591,
        16641
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6866": {
      "fn": "BuyTheDipNFT.createCollectible",
      "jump": "o",
      "offset": [
        16591,
        16641
      ],
      "op": "JUMP",
      "path": "20"
    },
    "6867": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39500,
        39821
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "6868": {
      "offset": [
        1308,
        1320
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1ADB"
    },
    "6871": {
      "offset": [
        1308,
        1318
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x372C"
    },
    "6874": {
      "jump": "i",
      "offset": [
        1308,
        1320
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6875": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        1308,
        1320
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6880": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6882": {
      "op": "SHL"
    },
    "6883": {
      "op": "SUB"
    },
    "6884": {
      "offset": [
        1297,
        1320
      ],
      "op": "AND",
      "path": "0"
    },
    "6885": {
      "offset": [
        1297,
        1304
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AEC"
    },
    "6888": {
      "offset": [
        1297,
        1302
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2235"
    },
    "6891": {
      "jump": "i",
      "offset": [
        1297,
        1304
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6892": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        1297,
        1304
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6897": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6899": {
      "op": "SHL"
    },
    "6900": {
      "op": "SUB"
    },
    "6901": {
      "offset": [
        1297,
        1320
      ],
      "op": "AND",
      "path": "0"
    },
    "6902": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        1297,
        1320
      ],
      "op": "EQ",
      "path": "0"
    },
    "6903": {
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B47"
    },
    "6906": {
      "offset": [
        1289,
        1357
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6907": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6909": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6910": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        1289,
        1357
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6911": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6915": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6917": {
      "op": "SHL"
    },
    "6918": {
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6919": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6920": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6922": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6924": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6925": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "6926": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6927": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6928": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6929": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "6931": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6932": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "6933": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6934": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "6967": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "6969": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6970": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "6971": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6972": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6973": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        1289,
        1357
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6974": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6975": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6976": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6977": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        1289,
        1357
      ],
      "op": "SUB",
      "path": "0"
    },
    "6978": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "6980": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "6981": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6982": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        1289,
        1357
      ],
      "op": "REVERT",
      "path": "0"
    },
    "6983": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        1289,
        1357
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6984": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39620,
        39621
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 48,
      "value": "0x8"
    },
    "6986": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39608,
        39617
      ],
      "op": "DUP2",
      "path": "20"
    },
    "6987": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39608,
        39621
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "6989": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39608,
        39621
      ],
      "op": "AND",
      "path": "20"
    },
    "6990": {
      "branch": 227,
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39608,
        39621
      ],
      "op": "LT",
      "path": "20"
    },
    "6991": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39583,
        39643
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1B93"
    },
    "6994": {
      "branch": 227,
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39583,
        39643
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "6995": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39583,
        39643
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "6997": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39583,
        39643
      ],
      "op": "DUP1",
      "path": "20"
    },
    "6998": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39583,
        39643
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "6999": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7003": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7005": {
      "op": "SHL"
    },
    "7006": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39583,
        39643
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7007": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39583,
        39643
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7008": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39583,
        39643
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "7010": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39583,
        39643
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7012": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39583,
        39643
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7013": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39583,
        39643
      ],
      "op": "ADD",
      "path": "20"
    },
    "7014": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39583,
        39643
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7015": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39583,
        39643
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x11"
    },
    "7017": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39583,
        39643
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "7019": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39583,
        39643
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7020": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39583,
        39643
      ],
      "op": "ADD",
      "path": "20"
    },
    "7021": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39583,
        39643
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7022": {
      "op": "PUSH17",
      "value": "0x125B9D985B1A5908111A5C0813195D995B"
    },
    "7040": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "7042": {
      "op": "SHL"
    },
    "7043": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39583,
        39643
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "7045": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39583,
        39643
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7046": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39583,
        39643
      ],
      "op": "ADD",
      "path": "20"
    },
    "7047": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39583,
        39643
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7048": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39583,
        39643
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7049": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39583,
        39643
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7050": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39583,
        39643
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7051": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39583,
        39643
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7052": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39583,
        39643
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7053": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39583,
        39643
      ],
      "op": "SUB",
      "path": "20"
    },
    "7054": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39583,
        39643
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "7056": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39583,
        39643
      ],
      "op": "ADD",
      "path": "20"
    },
    "7057": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39583,
        39643
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7058": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39583,
        39643
      ],
      "op": "REVERT",
      "path": "20"
    },
    "7059": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39583,
        39643
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7060": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39672,
        39684
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 49,
      "value": "0xB"
    },
    "7062": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39672,
        39684
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7063": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39661,
        39669
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7064": {
      "branch": 228,
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39661,
        39684
      ],
      "op": "LT",
      "path": "20"
    },
    "7065": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39653,
        39704
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1BDB"
    },
    "7068": {
      "branch": 228,
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39653,
        39704
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7069": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39653,
        39704
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7071": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39653,
        39704
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7072": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39653,
        39704
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7073": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7077": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7079": {
      "op": "SHL"
    },
    "7080": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39653,
        39704
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7081": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39653,
        39704
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7082": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39653,
        39704
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "7084": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39653,
        39704
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7086": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39653,
        39704
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7087": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39653,
        39704
      ],
      "op": "ADD",
      "path": "20"
    },
    "7088": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39653,
        39704
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7089": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39653,
        39704
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xF"
    },
    "7091": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39653,
        39704
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "7093": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39653,
        39704
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7094": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39653,
        39704
      ],
      "op": "ADD",
      "path": "20"
    },
    "7095": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39653,
        39704
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7096": {
      "op": "PUSH15",
      "value": "0x125B9D985B1A59081D1BDAD95B9259"
    },
    "7112": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "7114": {
      "op": "SHL"
    },
    "7115": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39653,
        39704
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "7117": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39653,
        39704
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7118": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39653,
        39704
      ],
      "op": "ADD",
      "path": "20"
    },
    "7119": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39653,
        39704
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7120": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39653,
        39704
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7121": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39653,
        39704
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7122": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39653,
        39704
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7123": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39653,
        39704
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7124": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39653,
        39704
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7125": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39653,
        39704
      ],
      "op": "SUB",
      "path": "20"
    },
    "7126": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39653,
        39704
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "7128": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39653,
        39704
      ],
      "op": "ADD",
      "path": "20"
    },
    "7129": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39653,
        39704
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7130": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39653,
        39704
      ],
      "op": "REVERT",
      "path": "20"
    },
    "7131": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39653,
        39704
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7132": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39775,
        39802
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 50,
      "value": "0x0"
    },
    "7134": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39775,
        39802
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7135": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39775,
        39802
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7136": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39775,
        39802
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7137": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39775,
        39792
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC"
    },
    "7139": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39775,
        39802
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "7141": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39775,
        39802
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7142": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39775,
        39802
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7144": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39775,
        39802
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7145": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39775,
        39802
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7146": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39775,
        39802
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "7147": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39775,
        39814
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7148": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39775,
        39814
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7149": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7151": {
      "op": "NOT"
    },
    "7152": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39775,
        39814
      ],
      "op": "AND",
      "path": "20"
    },
    "7153": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39775,
        39814
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "7155": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39775,
        39814
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7156": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39775,
        39814
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7157": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39775,
        39814
      ],
      "op": "AND",
      "path": "20"
    },
    "7158": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39775,
        39814
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7159": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39775,
        39814
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7160": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39775,
        39814
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7161": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39775,
        39814
      ],
      "op": "OR",
      "path": "20"
    },
    "7162": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39775,
        39814
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7163": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "offset": [
        39775,
        39814
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "7164": {
      "fn": "BuyTheDipNFT.setDipLevel",
      "jump": "o",
      "offset": [
        39500,
        39821
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7165": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6540,
        6709
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7166": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6615,
        6622
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "7168": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6615,
        6622
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7169": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6656,
        6678
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C0B"
    },
    "7172": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6656,
        6668
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "7174": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6672,
        6677
      ],
      "op": "DUP5",
      "path": "4"
    },
    "7175": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6656,
        6671
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3EF9"
    },
    "7178": {
      "fn": "ERC721.tokenByIndex",
      "jump": "i",
      "offset": [
        6656,
        6678
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7179": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6656,
        6678
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7180": {
      "op": "POP"
    },
    "7181": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6634,
        6678
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "7182": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6540,
        6709
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "7183": {
      "op": "POP"
    },
    "7184": {
      "op": "POP"
    },
    "7185": {
      "op": "POP"
    },
    "7186": {
      "fn": "ERC721.tokenByIndex",
      "jump": "o",
      "offset": [
        6540,
        6709
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7187": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7188": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28023,
        28039
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "7190": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28050,
        28063
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7192": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28080,
        28089
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7193": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28076,
        28198
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7194": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28094,
        28106
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "7196": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28094,
        28106
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7197": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28092,
        28093
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7198": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28092,
        28106
      ],
      "op": "LT",
      "path": "20"
    },
    "7199": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28076,
        28198
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7200": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28076,
        28198
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C54"
    },
    "7203": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28076,
        28198
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7204": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28140,
        28145
      ],
      "op": "DUP4",
      "path": "20"
    },
    "7205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7209": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7211": {
      "op": "SHL"
    },
    "7212": {
      "op": "SUB"
    },
    "7213": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28128,
        28145
      ],
      "op": "AND",
      "path": "20"
    },
    "7214": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28128,
        28138
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C36"
    },
    "7217": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28136,
        28137
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7218": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28128,
        28135
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1E50"
    },
    "7221": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "jump": "i",
      "offset": [
        28128,
        28138
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7222": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28128,
        28138
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7227": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7229": {
      "op": "SHL"
    },
    "7230": {
      "op": "SUB"
    },
    "7231": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28128,
        28145
      ],
      "op": "AND",
      "path": "20"
    },
    "7232": {
      "branch": 229,
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28128,
        28145
      ],
      "op": "EQ",
      "path": "20"
    },
    "7233": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28125,
        28188
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7234": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28125,
        28188
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C4C"
    },
    "7237": {
      "branch": 229,
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28125,
        28188
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7238": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28172,
        28173
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 51,
      "value": "0x1"
    },
    "7240": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28164,
        28173
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7241": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28164,
        28173
      ],
      "op": "ADD",
      "path": "20"
    },
    "7242": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28164,
        28173
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7243": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28164,
        28173
      ],
      "op": "POP",
      "path": "20"
    },
    "7244": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28125,
        28188
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7245": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28107,
        28110
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 52,
      "value": "0x1"
    },
    "7247": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28107,
        28110
      ],
      "op": "ADD",
      "path": "20"
    },
    "7248": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28076,
        28198
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C19"
    },
    "7251": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28076,
        28198
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7252": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28076,
        28198
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7253": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28076,
        28198
      ],
      "op": "POP",
      "path": "20"
    },
    "7254": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28208,
        28230
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "7256": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28247,
        28252
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7257": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "PUSH8",
      "path": "20",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7266": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7267": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "GT",
      "path": "20"
    },
    "7268": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7269": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7270": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C6E"
    },
    "7273": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7274": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7276": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7277": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "REVERT",
      "path": "20"
    },
    "7278": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7279": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "POP",
      "path": "20"
    },
    "7280": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7282": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7283": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7284": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7285": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7286": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7287": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7288": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "7290": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "MUL",
      "path": "20"
    },
    "7291": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "7293": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "ADD",
      "path": "20"
    },
    "7294": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7295": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "ADD",
      "path": "20"
    },
    "7296": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7298": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7299": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7300": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7301": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C98"
    },
    "7304": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7305": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7306": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "7308": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "ADD",
      "path": "20"
    },
    "7309": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "7311": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7312": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "MUL",
      "path": "20"
    },
    "7313": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7314": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "7315": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "DUP4",
      "path": "20"
    },
    "7316": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "CALLDATACOPY",
      "path": "20"
    },
    "7317": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "ADD",
      "path": "20"
    },
    "7318": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7319": {
      "op": "POP"
    },
    "7320": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7321": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28233,
        28253
      ],
      "op": "POP",
      "path": "20"
    },
    "7322": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28208,
        28253
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7323": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28208,
        28253
      ],
      "op": "POP",
      "path": "20"
    },
    "7324": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28263,
        28276
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7326": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28293,
        28302
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7327": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28289,
        28455
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7328": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28307,
        28319
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "7330": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28307,
        28319
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7331": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28305,
        28306
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7332": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28305,
        28319
      ],
      "op": "LT",
      "path": "20"
    },
    "7333": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28289,
        28455
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7334": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28289,
        28455
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1CF9"
    },
    "7337": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28289,
        28455
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7338": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28348,
        28353
      ],
      "op": "DUP4",
      "path": "20"
    },
    "7339": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28341,
        28346
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7340": {
      "branch": 230,
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28341,
        28353
      ],
      "op": "LT",
      "path": "20"
    },
    "7341": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28338,
        28364
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1CB5"
    },
    "7344": {
      "branch": 230,
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28338,
        28364
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7345": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28356,
        28361
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 53,
      "value": "0x1CF9"
    },
    "7348": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28356,
        28361
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7349": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28338,
        28364
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7350": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28392,
        28397
      ],
      "op": "DUP6",
      "path": "20"
    },
    "7351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7355": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7357": {
      "op": "SHL"
    },
    "7358": {
      "op": "SUB"
    },
    "7359": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28380,
        28397
      ],
      "op": "AND",
      "path": "20"
    },
    "7360": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28380,
        28390
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1CC8"
    },
    "7363": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28388,
        28389
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7364": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28380,
        28387
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1E50"
    },
    "7367": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "jump": "i",
      "offset": [
        28380,
        28390
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7368": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28380,
        28390
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7373": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7375": {
      "op": "SHL"
    },
    "7376": {
      "op": "SUB"
    },
    "7377": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28380,
        28397
      ],
      "op": "AND",
      "path": "20"
    },
    "7378": {
      "branch": 231,
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28380,
        28397
      ],
      "op": "EQ",
      "path": "20"
    },
    "7379": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28377,
        28445
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7380": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28377,
        28445
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1CF1"
    },
    "7383": {
      "branch": 231,
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28377,
        28445
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7384": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28429,
        28430
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 54
    },
    "7385": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28416,
        28421
      ],
      "op": "DUP4",
      "path": "20"
    },
    "7386": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28422,
        28427
      ],
      "op": "DUP4",
      "path": "20"
    },
    "7387": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28416,
        28428
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7388": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28416,
        28428
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7389": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28416,
        28428
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7390": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28416,
        28428
      ],
      "op": "LT",
      "path": "20"
    },
    "7391": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28416,
        28428
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1CE4"
    },
    "7394": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28416,
        28428
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7395": {
      "dev": "Index out of range",
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28416,
        28428
      ],
      "op": "INVALID",
      "path": "20"
    },
    "7396": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28416,
        28428
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7397": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28416,
        28428
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "7399": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28416,
        28428
      ],
      "op": "MUL",
      "path": "20"
    },
    "7400": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28416,
        28428
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "7402": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28416,
        28428
      ],
      "op": "ADD",
      "path": "20"
    },
    "7403": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28416,
        28428
      ],
      "op": "ADD",
      "path": "20"
    },
    "7404": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28416,
        28430
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7405": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28416,
        28430
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7406": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28416,
        28430
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7407": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28416,
        28430
      ],
      "op": "POP",
      "path": "20"
    },
    "7408": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28416,
        28430
      ],
      "op": "POP",
      "path": "20"
    },
    "7409": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28377,
        28445
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7410": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28320,
        28323
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 55,
      "value": "0x1"
    },
    "7412": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28320,
        28323
      ],
      "op": "ADD",
      "path": "20"
    },
    "7413": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28289,
        28455
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1C9F"
    },
    "7416": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28289,
        28455
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7417": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28289,
        28455
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7418": {
      "op": "POP"
    },
    "7419": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28472,
        28477
      ],
      "op": "SWAP1",
      "path": "20",
      "statement": 56
    },
    "7420": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        28472,
        28477
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "7421": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "offset": [
        27960,
        28484
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "7422": {
      "op": "POP"
    },
    "7423": {
      "op": "POP"
    },
    "7424": {
      "op": "POP"
    },
    "7425": {
      "op": "POP"
    },
    "7426": {
      "fn": "BuyTheDipNFT.getAllNFTsByOwner",
      "jump": "o",
      "offset": [
        27960,
        28484
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7427": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27116,
        27797
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7428": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27199,
        27216
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 57,
      "value": "0x1D0C"
    },
    "7431": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27207,
        27215
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7432": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27199,
        27206
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1E50"
    },
    "7435": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "jump": "i",
      "offset": [
        27199,
        27216
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7436": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27199,
        27216
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7441": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7443": {
      "op": "SHL"
    },
    "7444": {
      "op": "SUB"
    },
    "7445": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27185,
        27216
      ],
      "op": "AND",
      "path": "20"
    },
    "7446": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27185,
        27195
      ],
      "op": "CALLER",
      "path": "20"
    },
    "7447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7451": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7453": {
      "op": "SHL"
    },
    "7454": {
      "op": "SUB"
    },
    "7455": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27185,
        27216
      ],
      "op": "AND",
      "path": "20"
    },
    "7456": {
      "branch": 232,
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27185,
        27216
      ],
      "op": "EQ",
      "path": "20"
    },
    "7457": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27177,
        27241
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1D68"
    },
    "7460": {
      "branch": 232,
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27177,
        27241
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7461": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27177,
        27241
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7463": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27177,
        27241
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7464": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27177,
        27241
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7465": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7469": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7471": {
      "op": "SHL"
    },
    "7472": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27177,
        27241
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7473": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27177,
        27241
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7474": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27177,
        27241
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "7476": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27177,
        27241
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7478": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27177,
        27241
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7479": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27177,
        27241
      ],
      "op": "ADD",
      "path": "20"
    },
    "7480": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27177,
        27241
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7481": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27177,
        27241
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x14"
    },
    "7483": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27177,
        27241
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "7485": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27177,
        27241
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7486": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27177,
        27241
      ],
      "op": "ADD",
      "path": "20"
    },
    "7487": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27177,
        27241
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7488": {
      "op": "PUSH20",
      "value": "0x26BAB9BA103132903A37B5B2B71037BBB732B917"
    },
    "7509": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "7511": {
      "op": "SHL"
    },
    "7512": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27177,
        27241
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "7514": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27177,
        27241
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7515": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27177,
        27241
      ],
      "op": "ADD",
      "path": "20"
    },
    "7516": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27177,
        27241
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7517": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27177,
        27241
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7518": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27177,
        27241
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7519": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27177,
        27241
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7520": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27177,
        27241
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7521": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27177,
        27241
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7522": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27177,
        27241
      ],
      "op": "SUB",
      "path": "20"
    },
    "7523": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27177,
        27241
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "7525": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27177,
        27241
      ],
      "op": "ADD",
      "path": "20"
    },
    "7526": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27177,
        27241
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7527": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27177,
        27241
      ],
      "op": "REVERT",
      "path": "20"
    },
    "7528": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27177,
        27241
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7529": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27286,
        27302
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1D70"
    },
    "7532": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27286,
        27300
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2244"
    },
    "7535": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "jump": "i",
      "offset": [
        27286,
        27302
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7536": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27286,
        27302
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7537": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27255,
        27282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7539": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27255,
        27282
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7540": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27255,
        27282
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7541": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27255,
        27282
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7542": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27255,
        27272
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xD"
    },
    "7544": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27255,
        27282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "7546": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27255,
        27282
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7547": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27255,
        27282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7549": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27255,
        27282
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7550": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27255,
        27282
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "7551": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27255,
        27282
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7552": {
      "branch": 233,
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27255,
        27302
      ],
      "op": "GT",
      "path": "20"
    },
    "7553": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27251,
        27791
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1D92"
    },
    "7556": {
      "branch": 233,
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27251,
        27791
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7557": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27317,
        27336
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 58,
      "value": "0x1D8D"
    },
    "7560": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27327,
        27335
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7561": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27317,
        27326
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x10F4"
    },
    "7564": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "jump": "i",
      "offset": [
        27317,
        27336
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7565": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27317,
        27336
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7566": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27251,
        27791
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1E4D"
    },
    "7569": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27251,
        27791
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7570": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27251,
        27791
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7571": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27454,
        27473
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7573": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27476,
        27536
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1DA0"
    },
    "7576": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27500,
        27508
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7577": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27510,
        27535
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x17"
    },
    "7579": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27510,
        27535
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7580": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27476,
        27499
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x30B3"
    },
    "7583": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "jump": "i",
      "offset": [
        27476,
        27536
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7584": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27476,
        27536
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7585": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27558,
        27575
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 59,
      "value": "0x21"
    },
    "7587": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27558,
        27575
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7588": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27593,
        27599
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "7590": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27593,
        27599
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7591": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7593": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7594": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7595": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "7600": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7602": {
      "op": "SHL"
    },
    "7603": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7604": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7609": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7611": {
      "op": "SHL"
    },
    "7612": {
      "op": "SUB"
    },
    "7613": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27593,
        27599
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7614": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27593,
        27599
      ],
      "op": "DUP4",
      "path": "20"
    },
    "7615": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27593,
        27599
      ],
      "op": "AND",
      "path": "20"
    },
    "7616": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "7618": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7619": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "ADD",
      "path": "20"
    },
    "7620": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7621": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "7623": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7624": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "ADD",
      "path": "20"
    },
    "7625": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "DUP6",
      "path": "20"
    },
    "7626": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7627": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "7628": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7629": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7630": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27454,
        27536
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "7631": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27454,
        27536
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "7632": {
      "op": "POP"
    },
    "7633": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27558,
        27575
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7634": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27558,
        27575
      ],
      "op": "AND",
      "path": "20"
    },
    "7635": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27558,
        27575
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7636": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27584
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x95EA7B3"
    },
    "7641": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27584
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7642": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "7644": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7645": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7646": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "ADD",
      "path": "20"
    },
    "7647": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7648": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "7650": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7651": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7652": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7653": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7654": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "DUP3",
      "path": "20"
    },
    "7655": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7656": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "SUB",
      "path": "20"
    },
    "7657": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "ADD",
      "path": "20"
    },
    "7658": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7659": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27558,
        27575
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7661": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27558,
        27575
      ],
      "op": "DUP8",
      "path": "20"
    },
    "7662": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7663": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "7664": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7665": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7666": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7667": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1DFB"
    },
    "7670": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7671": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7673": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7674": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "REVERT",
      "path": "20"
    },
    "7675": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7676": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "POP",
      "path": "20"
    },
    "7677": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "GAS",
      "path": "20"
    },
    "7678": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "CALL",
      "path": "20"
    },
    "7679": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7680": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7681": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7682": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1E0F"
    },
    "7685": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7686": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "7687": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7689": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7690": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "7691": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "7692": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7694": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "REVERT",
      "path": "20"
    },
    "7695": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7696": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "POP",
      "path": "20"
    },
    "7697": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "POP",
      "path": "20"
    },
    "7698": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "POP",
      "path": "20"
    },
    "7699": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "POP",
      "path": "20"
    },
    "7700": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "7702": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "7703": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "7704": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "7706": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7707": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "LT",
      "path": "20"
    },
    "7708": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7709": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1E25"
    },
    "7712": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7713": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7715": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7716": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "REVERT",
      "path": "20"
    },
    "7717": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27551,
        27614
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7718": {
      "op": "POP"
    },
    "7719": {
      "op": "POP"
    },
    "7720": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27721,
        27738
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x21"
    },
    "7722": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27721,
        27738
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7723": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27629,
        27644
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7725": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27629,
        27644
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7726": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27629,
        27644
      ],
      "op": "DUP2",
      "path": "20"
    },
    "7727": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27629,
        27644
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7728": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27670,
        27780
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1E47"
    },
    "7731": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27670,
        27780
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7732": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27708,
        27719
      ],
      "op": "DUP5",
      "path": "20"
    },
    "7733": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27708,
        27719
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7738": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7740": {
      "op": "SHL"
    },
    "7741": {
      "op": "SUB"
    },
    "7742": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27721,
        27738
      ],
      "op": "AND",
      "path": "20"
    },
    "7743": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27740,
        27757
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x120F"
    },
    "7746": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27748,
        27756
      ],
      "op": "DUP8",
      "path": "20"
    },
    "7747": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27740,
        27747
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1E50"
    },
    "7750": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "jump": "i",
      "offset": [
        27740,
        27757
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7751": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27670,
        27780
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7752": {
      "op": "POP"
    },
    "7753": {
      "op": "POP"
    },
    "7754": {
      "op": "POP"
    },
    "7755": {
      "op": "POP"
    },
    "7756": {
      "op": "POP"
    },
    "7757": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27251,
        27791
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7758": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "offset": [
        27116,
        27797
      ],
      "op": "POP",
      "path": "20"
    },
    "7759": {
      "fn": "BuyTheDipNFT.destroyAndRefund",
      "jump": "o",
      "offset": [
        27116,
        27797
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7760": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4280,
        4455
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7761": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4352,
        4359
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "7763": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4378,
        4448
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 60,
      "value": "0x10EE"
    },
    "7766": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4395,
        4402
      ],
      "op": "DUP3",
      "path": "4"
    },
    "7767": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4378,
        4448
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "7769": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4378,
        4448
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "7770": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4378,
        4448
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7771": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4378,
        4448
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "7773": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4378,
        4448
      ],
      "op": "ADD",
      "path": "4"
    },
    "7774": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4378,
        4448
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "7776": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4378,
        4448
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7777": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4378,
        4448
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7778": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4378,
        4448
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x29"
    },
    "7780": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4378,
        4448
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7781": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4378,
        4448
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7782": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4378,
        4448
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "7784": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4378,
        4448
      ],
      "op": "ADD",
      "path": "4"
    },
    "7785": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4378,
        4448
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x555D"
    },
    "7788": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4378,
        4448
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x29"
    },
    "7790": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4378,
        4448
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7791": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4378,
        4448
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "7792": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4378,
        4390
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "7794": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4378,
        4390
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7795": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4378,
        4448
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7796": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4378,
        4394
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3F15"
    },
    "7799": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        4378,
        4448
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7800": {
      "fn": "ERC721.baseURI",
      "offset": [
        5855,
        5950
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7801": {
      "fn": "ERC721.baseURI",
      "offset": [
        5935,
        5943
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 61,
      "value": "0x9"
    },
    "7803": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7804": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "7805": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "7807": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7808": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "7809": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "7811": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "7813": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "7815": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7817": {
      "op": "NOT"
    },
    "7818": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "7821": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "7823": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "DUP9",
      "path": "4"
    },
    "7824": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "AND",
      "path": "4"
    },
    "7825": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "7826": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "MUL",
      "path": "4"
    },
    "7827": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "ADD",
      "path": "4"
    },
    "7828": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7829": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "7830": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "AND",
      "path": "4"
    },
    "7831": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "7832": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7833": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "7834": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "DIV",
      "path": "4"
    },
    "7835": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "7836": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "DUP5",
      "path": "4"
    },
    "7837": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "ADD",
      "path": "4"
    },
    "7838": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7839": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7840": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "DIV",
      "path": "4"
    },
    "7841": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7842": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "MUL",
      "path": "4"
    },
    "7843": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "DUP3",
      "path": "4"
    },
    "7844": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "ADD",
      "path": "4"
    },
    "7845": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7846": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "ADD",
      "path": "4"
    },
    "7847": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7848": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "7849": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7850": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "DUP3",
      "path": "4"
    },
    "7851": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7852": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7853": {
      "fn": "ERC721.baseURI",
      "offset": [
        5903,
        5916
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "7855": {
      "fn": "ERC721.baseURI",
      "offset": [
        5903,
        5916
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "7856": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7857": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "7858": {
      "fn": "ERC721.baseURI",
      "offset": [
        5935,
        5943
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7859": {
      "fn": "ERC721.baseURI",
      "offset": [
        5935,
        5943
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7860": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "DUP4",
      "path": "4"
    },
    "7861": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "ADD",
      "path": "4"
    },
    "7862": {
      "fn": "ERC721.baseURI",
      "offset": [
        5935,
        5943
      ],
      "op": "DUP3",
      "path": "4"
    },
    "7863": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "DUP3",
      "path": "4"
    },
    "7864": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7865": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "7866": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x135A"
    },
    "7869": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "7870": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7871": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "7873": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "LT",
      "path": "4"
    },
    "7874": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x132F"
    },
    "7877": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "7878": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "7881": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7882": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "DUP4",
      "path": "4"
    },
    "7883": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "7884": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "DIV",
      "path": "4"
    },
    "7885": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "MUL",
      "path": "4"
    },
    "7886": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "DUP4",
      "path": "4"
    },
    "7887": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7888": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7889": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "7891": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "ADD",
      "path": "4"
    },
    "7892": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7893": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x135A"
    },
    "7896": {
      "fn": "ERC721.baseURI",
      "offset": [
        5928,
        5943
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7897": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7898": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        30068,
        30085
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "7900": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        30087,
        30099
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "7902": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        30180,
        30188
      ],
      "op": "PUSH32",
      "path": "20",
      "statement": 62,
      "value": "0x0"
    },
    "7935": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        30163,
        30176
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x15"
    },
    "7937": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        30163,
        30176
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7938": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        30145,
        30160
      ],
      "op": "TIMESTAMP",
      "path": "20"
    },
    "7939": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        30145,
        30176
      ],
      "op": "SUB",
      "path": "20"
    },
    "7940": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        30144,
        30188
      ],
      "op": "GT",
      "path": "20"
    },
    "7941": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        30144,
        30222
      ],
      "op": "DUP1",
      "path": "20"
    },
    "7942": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        30144,
        30222
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7943": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        30144,
        30222
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1F19"
    },
    "7946": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        30144,
        30222
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "7947": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        30144,
        30222
      ],
      "op": "POP",
      "path": "20"
    },
    "7948": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        30206,
        30222
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1F13"
    },
    "7951": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        30206,
        30220
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2244"
    },
    "7954": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "jump": "i",
      "offset": [
        30206,
        30222
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7955": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        30206,
        30222
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7956": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        30192,
        30202
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x12"
    },
    "7958": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        30192,
        30202
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "7959": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        30192,
        30222
      ],
      "op": "GT",
      "path": "20"
    },
    "7960": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        30192,
        30222
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "7961": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        30144,
        30222
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "7962": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        30129,
        30222
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "7963": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        30129,
        30222
      ],
      "op": "POP",
      "path": "20"
    },
    "7964": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7965": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "POP",
      "path": "20"
    },
    "7966": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "7967": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "7968": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "offset": [
        29988,
        30341
      ],
      "op": "POP",
      "path": "20"
    },
    "7969": {
      "fn": "BuyTheDipNFT.checkUpkeep",
      "jump": "o",
      "offset": [
        29988,
        30341
      ],
      "op": "JUMP",
      "path": "20"
    },
    "7970": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4005,
        4223
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7971": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4077,
        4084
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "7973": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7977": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7979": {
      "op": "SHL"
    },
    "7980": {
      "op": "SUB"
    },
    "7981": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4104,
        4123
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 63
    },
    "7982": {
      "branch": 265,
      "fn": "ERC721.balanceOf",
      "offset": [
        4104,
        4123
      ],
      "op": "AND",
      "path": "4"
    },
    "7983": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4096,
        4170
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F69"
    },
    "7986": {
      "branch": 265,
      "fn": "ERC721.balanceOf",
      "offset": [
        4096,
        4170
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "7987": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4096,
        4170
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "7989": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4096,
        4170
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "7990": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7994": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7996": {
      "op": "SHL"
    },
    "7997": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4096,
        4170
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7998": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4096,
        4170
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7999": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4096,
        4170
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "8001": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4096,
        4170
      ],
      "op": "ADD",
      "path": "4"
    },
    "8002": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4096,
        4170
      ],
      "op": "DUP1",
      "path": "4"
    },
    "8003": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4096,
        4170
      ],
      "op": "DUP1",
      "path": "4"
    },
    "8004": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4096,
        4170
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "8006": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4096,
        4170
      ],
      "op": "ADD",
      "path": "4"
    },
    "8007": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4096,
        4170
      ],
      "op": "DUP3",
      "path": "4"
    },
    "8008": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4096,
        4170
      ],
      "op": "DUP2",
      "path": "4"
    },
    "8009": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4096,
        4170
      ],
      "op": "SUB",
      "path": "4"
    },
    "8010": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4096,
        4170
      ],
      "op": "DUP3",
      "path": "4"
    },
    "8011": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4096,
        4170
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "8012": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4096,
        4170
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2A"
    },
    "8014": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4096,
        4170
      ],
      "op": "DUP2",
      "path": "4"
    },
    "8015": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4096,
        4170
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "8016": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4096,
        4170
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "8018": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4096,
        4170
      ],
      "op": "ADD",
      "path": "4"
    },
    "8019": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4096,
        4170
      ],
      "op": "DUP1",
      "path": "4"
    },
    "8020": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4096,
        4170
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5472"
    },
    "8023": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4096,
        4170
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2A"
    },
    "8025": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4096,
        4170
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "8026": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4096,
        4170
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "8027": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4096,
        4170
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "8029": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4096,
        4170
      ],
      "op": "ADD",
      "path": "4"
    },
    "8030": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4096,
        4170
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "8031": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4096,
        4170
      ],
      "op": "POP",
      "path": "4"
    },
    "8032": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4096,
        4170
      ],
      "op": "POP",
      "path": "4"
    },
    "8033": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4096,
        4170
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "8035": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4096,
        4170
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "8036": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4096,
        4170
      ],
      "op": "DUP1",
      "path": "4"
    },
    "8037": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4096,
        4170
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "8038": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4096,
        4170
      ],
      "op": "SUB",
      "path": "4"
    },
    "8039": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4096,
        4170
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8040": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4096,
        4170
      ],
      "op": "REVERT",
      "path": "4"
    },
    "8041": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4096,
        4170
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "8042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8046": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8048": {
      "op": "SHL"
    },
    "8049": {
      "op": "SUB"
    },
    "8050": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4187,
        4207
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 64
    },
    "8051": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4187,
        4207
      ],
      "op": "AND",
      "path": "4"
    },
    "8052": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4187,
        4207
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "8054": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4187,
        4207
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8055": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4187,
        4207
      ],
      "op": "DUP2",
      "path": "4"
    },
    "8056": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4187,
        4207
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "8057": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4187,
        4200
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "8059": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4187,
        4207
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "8061": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4187,
        4207
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "8062": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4187,
        4207
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "8064": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4187,
        4207
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8065": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4187,
        4207
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "8066": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4187,
        4216
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10EE"
    },
    "8069": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4187,
        4216
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8070": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4187,
        4214
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x38A5"
    },
    "8073": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        4187,
        4216
      ],
      "op": "JUMP",
      "path": "4"
    },
    "8074": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1717,
        1862
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8075": {
      "offset": [
        1308,
        1320
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F92"
    },
    "8078": {
      "offset": [
        1308,
        1318
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x372C"
    },
    "8081": {
      "jump": "i",
      "offset": [
        1308,
        1320
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8082": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1308,
        1320
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8087": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8089": {
      "op": "SHL"
    },
    "8090": {
      "op": "SUB"
    },
    "8091": {
      "offset": [
        1297,
        1320
      ],
      "op": "AND",
      "path": "0"
    },
    "8092": {
      "offset": [
        1297,
        1304
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FA3"
    },
    "8095": {
      "offset": [
        1297,
        1302
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2235"
    },
    "8098": {
      "jump": "i",
      "offset": [
        1297,
        1304
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8099": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1297,
        1304
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8104": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8106": {
      "op": "SHL"
    },
    "8107": {
      "op": "SUB"
    },
    "8108": {
      "offset": [
        1297,
        1320
      ],
      "op": "AND",
      "path": "0"
    },
    "8109": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1297,
        1320
      ],
      "op": "EQ",
      "path": "0"
    },
    "8110": {
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FFE"
    },
    "8113": {
      "offset": [
        1289,
        1357
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8114": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8116": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8117": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8118": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8122": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8124": {
      "op": "SHL"
    },
    "8125": {
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8126": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8127": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8129": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8131": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8132": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "8133": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8134": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8135": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8136": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "8138": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8139": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "8140": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8141": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "8174": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "8176": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8177": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "8178": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8179": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8180": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8181": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8182": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8183": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8184": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SUB",
      "path": "0"
    },
    "8185": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "8187": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "8188": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8189": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "REVERT",
      "path": "0"
    },
    "8190": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8191": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1807,
        1813
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 65,
      "value": "0xA"
    },
    "8193": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1807,
        1813
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8194": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1786,
        1826
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8196": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1786,
        1826
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8197": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1823,
        1824
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8199": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1823,
        1824
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8204": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8206": {
      "op": "SHL"
    },
    "8207": {
      "op": "SUB"
    },
    "8208": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1807,
        1813
      ],
      "op": "AND",
      "path": "0"
    },
    "8209": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1807,
        1813
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8210": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1786,
        1826
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "8243": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1786,
        1826
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8244": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1823,
        1824
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8245": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1823,
        1824
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8246": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1786,
        1826
      ],
      "op": "LOG3",
      "path": "0"
    },
    "8247": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1836,
        1842
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 66,
      "value": "0xA"
    },
    "8249": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1836,
        1855
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8250": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1836,
        1855
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8255": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8257": {
      "op": "SHL"
    },
    "8258": {
      "op": "SUB"
    },
    "8259": {
      "op": "NOT"
    },
    "8260": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1836,
        1855
      ],
      "op": "AND",
      "path": "0"
    },
    "8261": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1836,
        1855
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8262": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1836,
        1855
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8263": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1717,
        1862
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8264": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24574,
        25647
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8265": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24631,
        24638
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "8267": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24766,
        24780
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 67,
      "value": "0x16"
    },
    "8269": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24766,
        24780
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8270": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24753,
        24762
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "8271": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24753,
        24780
      ],
      "op": "LT",
      "path": "20"
    },
    "8272": {
      "branch": 234,
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24753,
        24780
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "8273": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24744,
        24812
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x20A1"
    },
    "8276": {
      "branch": 234,
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24744,
        24812
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "8277": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24744,
        24812
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8279": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24744,
        24812
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8280": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24744,
        24812
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8281": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8285": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8287": {
      "op": "SHL"
    },
    "8288": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24744,
        24812
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8289": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24744,
        24812
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8290": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24744,
        24812
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "8292": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24744,
        24812
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "8294": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24744,
        24812
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8295": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24744,
        24812
      ],
      "op": "ADD",
      "path": "20"
    },
    "8296": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24744,
        24812
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8297": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24744,
        24812
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1B"
    },
    "8299": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24744,
        24812
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "8301": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24744,
        24812
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8302": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24744,
        24812
      ],
      "op": "ADD",
      "path": "20"
    },
    "8303": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24744,
        24812
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8304": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24744,
        24812
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x4E6F7420456E6F75676820424E422D2D6F722077686174657665720000000000"
    },
    "8337": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24744,
        24812
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "8339": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24744,
        24812
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8340": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24744,
        24812
      ],
      "op": "ADD",
      "path": "20"
    },
    "8341": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24744,
        24812
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8342": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24744,
        24812
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8343": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24744,
        24812
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8344": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24744,
        24812
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8345": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24744,
        24812
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8346": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24744,
        24812
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8347": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24744,
        24812
      ],
      "op": "SUB",
      "path": "20"
    },
    "8348": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24744,
        24812
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "8350": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24744,
        24812
      ],
      "op": "ADD",
      "path": "20"
    },
    "8351": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24744,
        24812
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8352": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24744,
        24812
      ],
      "op": "REVERT",
      "path": "20"
    },
    "8353": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24744,
        24812
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8354": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24830,
        24863
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 68,
      "value": "0x0"
    },
    "8356": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24830,
        24863
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8357": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24830,
        24863
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8358": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24830,
        24863
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8359": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24830,
        24853
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x10"
    },
    "8361": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24830,
        24863
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "8363": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24830,
        24863
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8364": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24830,
        24863
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8366": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24830,
        24863
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8367": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24830,
        24863
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "8368": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24830,
        24863
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8369": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24830,
        24863
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "8371": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24830,
        24863
      ],
      "op": "AND",
      "path": "20"
    },
    "8372": {
      "branch": 235,
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24830,
        24872
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "8373": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24822,
        24910
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x20EF"
    },
    "8376": {
      "branch": 235,
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24822,
        24910
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "8377": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24822,
        24910
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8379": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24822,
        24910
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8380": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8384": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8386": {
      "op": "SHL"
    },
    "8387": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24822,
        24910
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8388": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24822,
        24910
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8389": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24822,
        24910
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "8391": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24822,
        24910
      ],
      "op": "ADD",
      "path": "20"
    },
    "8392": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24822,
        24910
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8393": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24822,
        24910
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8394": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24822,
        24910
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "8396": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24822,
        24910
      ],
      "op": "ADD",
      "path": "20"
    },
    "8397": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24822,
        24910
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8398": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24822,
        24910
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8399": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24822,
        24910
      ],
      "op": "SUB",
      "path": "20"
    },
    "8400": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24822,
        24910
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8401": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24822,
        24910
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8402": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24822,
        24910
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x21"
    },
    "8404": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24822,
        24910
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8405": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24822,
        24910
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8406": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24822,
        24910
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "8408": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24822,
        24910
      ],
      "op": "ADD",
      "path": "20"
    },
    "8409": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24822,
        24910
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8410": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24822,
        24910
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x52EC"
    },
    "8413": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24822,
        24910
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x21"
    },
    "8415": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24822,
        24910
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8416": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24822,
        24910
      ],
      "op": "CODECOPY",
      "path": "20"
    },
    "8417": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24822,
        24910
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8419": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24822,
        24910
      ],
      "op": "ADD",
      "path": "20"
    },
    "8420": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24822,
        24910
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8421": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24822,
        24910
      ],
      "op": "POP",
      "path": "20"
    },
    "8422": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24822,
        24910
      ],
      "op": "POP",
      "path": "20"
    },
    "8423": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24822,
        24910
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8425": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24822,
        24910
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8426": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24822,
        24910
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8427": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24822,
        24910
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8428": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24822,
        24910
      ],
      "op": "SUB",
      "path": "20"
    },
    "8429": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24822,
        24910
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8430": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24822,
        24910
      ],
      "op": "REVERT",
      "path": "20"
    },
    "8431": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24822,
        24910
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8432": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24921,
        24940
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 69,
      "value": "0x20F7"
    },
    "8435": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24921,
        24938
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3A08"
    },
    "8438": {
      "fn": "BuyTheDipNFT.redip",
      "jump": "i",
      "offset": [
        24921,
        24940
      ],
      "op": "JUMP",
      "path": "20"
    },
    "8439": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24921,
        24940
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8440": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25040,
        25043
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 70,
      "value": "0x64"
    },
    "8442": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25021,
        25037
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2101"
    },
    "8445": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25021,
        25035
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2244"
    },
    "8448": {
      "fn": "BuyTheDipNFT.redip",
      "jump": "i",
      "offset": [
        25021,
        25037
      ],
      "op": "JUMP",
      "path": "20"
    },
    "8449": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25021,
        25037
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8450": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24988,
        25017
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "8452": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24988,
        25017
      ],
      "op": "DUP5",
      "path": "20"
    },
    "8453": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24988,
        25017
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8454": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24988,
        25017
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8455": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24988,
        25007
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE"
    },
    "8457": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24988,
        25017
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "8459": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24988,
        25017
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8460": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24988,
        25017
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8462": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24988,
        25017
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8463": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24988,
        25017
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "8464": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24988,
        25017
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8465": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24982,
        24985
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "8467": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24982,
        25017
      ],
      "op": "SUB",
      "path": "20"
    },
    "8468": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24981,
        25037
      ],
      "op": "MUL",
      "path": "20"
    },
    "8469": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24981,
        25043
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8470": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24981,
        25043
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x211B"
    },
    "8473": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24981,
        25043
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "8474": {
      "dev": "Division by zero",
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24981,
        25043
      ],
      "op": "INVALID",
      "path": "20"
    },
    "8475": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24981,
        25043
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8476": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24951,
        24978
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "8478": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24951,
        24978
      ],
      "op": "DUP5",
      "path": "20"
    },
    "8479": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24951,
        24978
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8480": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24951,
        24978
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8481": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24951,
        24968
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xD"
    },
    "8483": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24951,
        24978
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "8485": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24951,
        24978
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8486": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24951,
        24978
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8488": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24951,
        24978
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8489": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24951,
        24978
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "8490": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24981,
        25043
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8491": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24981,
        25043
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8492": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24981,
        25043
      ],
      "op": "DIV",
      "path": "20"
    },
    "8493": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24951,
        25043
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8494": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24951,
        25043
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "8495": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25053,
        25095
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 71,
      "value": "0x213B"
    },
    "8498": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24969,
        24977
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8499": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25076,
        25094
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1A8F"
    },
    "8502": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24969,
        24977
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8503": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25076,
        25084
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2566"
    },
    "8506": {
      "fn": "BuyTheDipNFT.redip",
      "jump": "i",
      "offset": [
        25076,
        25094
      ],
      "op": "JUMP",
      "path": "20"
    },
    "8507": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25053,
        25095
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8508": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25186,
        25203
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 72,
      "value": "0x21"
    },
    "8510": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25186,
        25203
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8511": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25220,
        25226
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "8513": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25220,
        25226
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8514": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25228,
        25240
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x13"
    },
    "8516": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25228,
        25240
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8517": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25142,
        25241
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2161"
    },
    "8520": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25142,
        25241
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "8521": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25175,
        25184
      ],
      "op": "CALLVALUE",
      "path": "20"
    },
    "8522": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25175,
        25184
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "8523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8527": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8529": {
      "op": "SHL"
    },
    "8530": {
      "op": "SUB"
    },
    "8531": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25186,
        25203
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8532": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25186,
        25203
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8533": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25186,
        25203
      ],
      "op": "AND",
      "path": "20"
    },
    "8534": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25186,
        25203
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "8535": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25213,
        25217
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "8536": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25213,
        25217
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "8537": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25220,
        25226
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8538": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25220,
        25226
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8539": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25220,
        25226
      ],
      "op": "AND",
      "path": "20"
    },
    "8540": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25220,
        25226
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8541": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25142,
        25174
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3ABD"
    },
    "8544": {
      "fn": "BuyTheDipNFT.redip",
      "jump": "i",
      "offset": [
        25142,
        25241
      ],
      "op": "JUMP",
      "path": "20"
    },
    "8545": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25142,
        25241
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8546": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25109,
        25138
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "8548": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25109,
        25138
      ],
      "op": "DUP5",
      "path": "20"
    },
    "8549": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25109,
        25138
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8550": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25109,
        25138
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8551": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25109,
        25128
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xF"
    },
    "8553": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25109,
        25138
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "8555": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25109,
        25138
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8556": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25109,
        25138
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8558": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25109,
        25138
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8559": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25109,
        25138
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "8560": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25106,
        25241
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8561": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25106,
        25241
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8562": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25106,
        25241
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "8563": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25259,
        25292
      ],
      "op": "ISZERO",
      "path": "20",
      "statement": 73
    },
    "8564": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25259,
        25292
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "8565": {
      "branch": 236,
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25259,
        25292
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8566": {
      "op": "POP"
    },
    "8567": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25251,
        25321
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x21C2"
    },
    "8570": {
      "branch": 236,
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25251,
        25321
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "8571": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25251,
        25321
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8573": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25251,
        25321
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8574": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25251,
        25321
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8575": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8579": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8581": {
      "op": "SHL"
    },
    "8582": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25251,
        25321
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8583": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25251,
        25321
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8584": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25251,
        25321
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "8586": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25251,
        25321
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "8588": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25251,
        25321
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8589": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25251,
        25321
      ],
      "op": "ADD",
      "path": "20"
    },
    "8590": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25251,
        25321
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8591": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25251,
        25321
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x18"
    },
    "8593": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25251,
        25321
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "8595": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25251,
        25321
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8596": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25251,
        25321
      ],
      "op": "ADD",
      "path": "20"
    },
    "8597": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25251,
        25321
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8598": {
      "op": "PUSH24",
      "value": "0x22B93937B910902737903A37B5B2B739903137BAB3B43A17"
    },
    "8623": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "8625": {
      "op": "SHL"
    },
    "8626": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25251,
        25321
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "8628": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25251,
        25321
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8629": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25251,
        25321
      ],
      "op": "ADD",
      "path": "20"
    },
    "8630": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25251,
        25321
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8631": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25251,
        25321
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8632": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25251,
        25321
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8633": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25251,
        25321
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8634": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25251,
        25321
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8635": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25251,
        25321
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8636": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25251,
        25321
      ],
      "op": "SUB",
      "path": "20"
    },
    "8637": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25251,
        25321
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "8639": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25251,
        25321
      ],
      "op": "ADD",
      "path": "20"
    },
    "8640": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25251,
        25321
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8641": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25251,
        25321
      ],
      "op": "REVERT",
      "path": "20"
    },
    "8642": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25251,
        25321
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8643": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25347,
        25376
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 74,
      "value": "0x0"
    },
    "8645": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25347,
        25376
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8646": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25347,
        25376
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8647": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25347,
        25376
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8648": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25347,
        25366
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xF"
    },
    "8650": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25347,
        25376
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "8652": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25347,
        25376
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8653": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25347,
        25376
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8655": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25347,
        25376
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8656": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25347,
        25376
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "8657": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25347,
        25376
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8658": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25332,
        25377
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x21DA"
    },
    "8661": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25332,
        25377
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8662": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25332,
        25346
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3E0C"
    },
    "8665": {
      "fn": "BuyTheDipNFT.redip",
      "jump": "i",
      "offset": [
        25332,
        25377
      ],
      "op": "JUMP",
      "path": "20"
    },
    "8666": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25332,
        25377
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8667": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25407,
        25436
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 75,
      "value": "0x0"
    },
    "8669": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25407,
        25436
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8670": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25407,
        25436
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8671": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25407,
        25436
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8672": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25407,
        25426
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xF"
    },
    "8674": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25407,
        25436
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "8676": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25407,
        25436
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8677": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25407,
        25436
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8678": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25407,
        25436
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8679": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25407,
        25436
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8681": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25407,
        25436
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8682": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25407,
        25436
      ],
      "op": "DUP4",
      "path": "20"
    },
    "8683": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25407,
        25436
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "8684": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25407,
        25436
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8685": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25388,
        25403
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x14"
    },
    "8687": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25388,
        25436
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8688": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25388,
        25436
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8689": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25388,
        25436
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8690": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25388,
        25436
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8691": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25388,
        25436
      ],
      "op": "ADD",
      "path": "20"
    },
    "8692": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25388,
        25436
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8693": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25388,
        25436
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "8694": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25446,
        25469
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 76,
      "value": "0x10"
    },
    "8696": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25446,
        25479
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8697": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25446,
        25479
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8698": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25446,
        25479
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8699": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25446,
        25479
      ],
      "op": "DUP4",
      "path": "20"
    },
    "8700": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25446,
        25479
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "8701": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25446,
        25486
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8702": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25446,
        25486
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8703": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8705": {
      "op": "NOT"
    },
    "8706": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25446,
        25486
      ],
      "op": "AND",
      "path": "20"
    },
    "8707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8709": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25446,
        25486
      ],
      "op": "OR",
      "path": "20"
    },
    "8710": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25446,
        25486
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8711": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25446,
        25486
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "8712": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25530,
        25540
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x12"
    },
    "8714": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25530,
        25540
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8715": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25500,
        25517
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xD"
    },
    "8717": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25500,
        25527
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8718": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25500,
        25527
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "8719": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25500,
        25527
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8720": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25500,
        25527
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8721": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25500,
        25527
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8722": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25500,
        25527
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "8723": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25500,
        25527
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8724": {
      "branch": 237,
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25500,
        25540
      ],
      "op": "GT",
      "path": "20"
    },
    "8725": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25497,
        25606
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "8726": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25497,
        25606
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xE49"
    },
    "8729": {
      "branch": 237,
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25497,
        25606
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "8730": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25568,
        25595
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 77,
      "value": "0x0"
    },
    "8732": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25568,
        25595
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8733": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25568,
        25595
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8734": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25568,
        25595
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8735": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25568,
        25585
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xD"
    },
    "8737": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25568,
        25595
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "8739": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25568,
        25595
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8740": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25568,
        25595
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8742": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25568,
        25595
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8743": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25568,
        25595
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "8744": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25568,
        25595
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "8745": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25568,
        25595
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8746": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25555,
        25565
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x12"
    },
    "8748": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        25555,
        25595
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "8749": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        24574,
        25647
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8750": {
      "fn": "BuyTheDipNFT.redip",
      "jump": "o",
      "offset": [
        24574,
        25647
      ],
      "op": "JUMP",
      "path": "20"
    },
    "8751": {
      "offset": [
        17258,
        17292
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8752": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        17258,
        17292
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x14"
    },
    "8754": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        17258,
        17292
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8755": {
      "fn": "BuyTheDipNFT.redip",
      "offset": [
        17258,
        17292
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8756": {
      "fn": "BuyTheDipNFT.redip",
      "jump": "o",
      "offset": [
        17258,
        17292
      ],
      "op": "JUMP",
      "path": "20"
    },
    "8757": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8758": {
      "fn": "Ownable.owner",
      "offset": [
        1157,
        1163
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 78,
      "value": "0xA"
    },
    "8760": {
      "fn": "Ownable.owner",
      "offset": [
        1157,
        1163
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8765": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8767": {
      "op": "SHL"
    },
    "8768": {
      "op": "SUB"
    },
    "8769": {
      "fn": "Ownable.owner",
      "offset": [
        1157,
        1163
      ],
      "op": "AND",
      "path": "0"
    },
    "8770": {
      "fn": "Ownable.owner",
      "offset": [
        1085,
        1170
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8771": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        1085,
        1170
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8772": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29581,
        29982
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8773": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29628,
        29635
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "8775": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29661,
        29675
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8776": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29689,
        29698
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "8778": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29712,
        29726
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8779": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29740,
        29754
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "8781": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29768,
        29790
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8782": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29812
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x23"
    },
    "8784": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29812
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "8786": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29812
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8787": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29812
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "8788": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29812
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8789": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29812
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "8792": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29812
      ],
      "op": "EXP",
      "path": "20"
    },
    "8793": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29812
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8794": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29812
      ],
      "op": "DIV",
      "path": "20"
    },
    "8795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8799": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8801": {
      "op": "SHL"
    },
    "8802": {
      "op": "SUB"
    },
    "8803": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29812
      ],
      "op": "AND",
      "path": "20"
    },
    "8804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8808": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8810": {
      "op": "SHL"
    },
    "8811": {
      "op": "SUB"
    },
    "8812": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29828
      ],
      "op": "AND",
      "path": "20"
    },
    "8813": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29828
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFEAF968C"
    },
    "8818": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8820": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8821": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8822": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "8827": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "AND",
      "path": "20"
    },
    "8828": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "8830": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "SHL",
      "path": "20"
    },
    "8831": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8832": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8833": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "8835": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "ADD",
      "path": "20"
    },
    "8836": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA0"
    },
    "8838": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8840": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8841": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8842": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "DUP4",
      "path": "20"
    },
    "8843": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "SUB",
      "path": "20"
    },
    "8844": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8845": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "DUP7",
      "path": "20"
    },
    "8846": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8847": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "8848": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "8849": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8850": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "8851": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x229B"
    },
    "8854": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "8855": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "8857": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8858": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "REVERT",
      "path": "20"
    },
    "8859": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8860": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "POP",
      "path": "20"
    },
    "8861": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "GAS",
      "path": "20"
    },
    "8862": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "8863": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "8864": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8865": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "8866": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x22AF"
    },
    "8869": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "8870": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "8871": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "8873": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8874": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "8875": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "8876": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "8878": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "REVERT",
      "path": "20"
    },
    "8879": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8880": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "POP",
      "path": "20"
    },
    "8881": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "POP",
      "path": "20"
    },
    "8882": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "POP",
      "path": "20"
    },
    "8883": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "POP",
      "path": "20"
    },
    "8884": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8886": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8887": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "8888": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA0"
    },
    "8890": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8891": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "LT",
      "path": "20"
    },
    "8892": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "8893": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x22C5"
    },
    "8896": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "8897": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "8899": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8900": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "REVERT",
      "path": "20"
    },
    "8901": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "8902": {
      "op": "POP"
    },
    "8903": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8904": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8905": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "8907": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8908": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "ADD",
      "path": "20"
    },
    "8909": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8910": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8912": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "DUP4",
      "path": "20"
    },
    "8913": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "ADD",
      "path": "20"
    },
    "8914": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8915": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "8917": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "DUP5",
      "path": "20"
    },
    "8918": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "ADD",
      "path": "20"
    },
    "8919": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8920": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x80"
    },
    "8922": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8923": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "8924": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "ADD",
      "path": "20"
    },
    "8925": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8926": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "8927": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "SWAP9",
      "path": "20"
    },
    "8928": {
      "op": "POP"
    },
    "8929": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8930": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "SWAP7",
      "path": "20"
    },
    "8931": {
      "op": "POP"
    },
    "8932": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "8933": {
      "op": "POP"
    },
    "8934": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8935": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "8936": {
      "op": "POP"
    },
    "8937": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29803,
        29830
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8938": {
      "op": "POP"
    },
    "8939": {
      "branch": 238,
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29908,
        29921
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 79
    },
    "8940": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29900,
        29944
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2331"
    },
    "8943": {
      "branch": 238,
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29900,
        29944
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "8944": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29900,
        29944
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "8946": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29900,
        29944
      ],
      "op": "DUP1",
      "path": "20"
    },
    "8947": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29900,
        29944
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "8948": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8952": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8954": {
      "op": "SHL"
    },
    "8955": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29900,
        29944
      ],
      "op": "DUP2",
      "path": "20"
    },
    "8956": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29900,
        29944
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8957": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29900,
        29944
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "8959": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29900,
        29944
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "8961": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29900,
        29944
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8962": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29900,
        29944
      ],
      "op": "ADD",
      "path": "20"
    },
    "8963": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29900,
        29944
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8964": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29900,
        29944
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x12"
    },
    "8966": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29900,
        29944
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "8968": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29900,
        29944
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8969": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29900,
        29944
      ],
      "op": "ADD",
      "path": "20"
    },
    "8970": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29900,
        29944
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8971": {
      "op": "PUSH18",
      "value": "0x526F756E64206E6F7420636F6D706C657465"
    },
    "8990": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "8992": {
      "op": "SHL"
    },
    "8993": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29900,
        29944
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "8995": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29900,
        29944
      ],
      "op": "DUP3",
      "path": "20"
    },
    "8996": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29900,
        29944
      ],
      "op": "ADD",
      "path": "20"
    },
    "8997": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29900,
        29944
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "8998": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29900,
        29944
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "8999": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29900,
        29944
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "9000": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29900,
        29944
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9001": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29900,
        29944
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9002": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29900,
        29944
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9003": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29900,
        29944
      ],
      "op": "SUB",
      "path": "20"
    },
    "9004": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29900,
        29944
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "9006": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29900,
        29944
      ],
      "op": "ADD",
      "path": "20"
    },
    "9007": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29900,
        29944
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9008": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29900,
        29944
      ],
      "op": "REVERT",
      "path": "20"
    },
    "9009": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29900,
        29944
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9010": {
      "op": "POP"
    },
    "9011": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29969,
        29974
      ],
      "op": "SWAP2",
      "path": "20",
      "statement": 80
    },
    "9012": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29969,
        29974
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "9013": {
      "op": "POP"
    },
    "9014": {
      "op": "POP"
    },
    "9015": {
      "op": "POP"
    },
    "9016": {
      "op": "POP"
    },
    "9017": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "offset": [
        29581,
        29982
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9018": {
      "fn": "BuyTheDipNFT.getLatestPrice",
      "jump": "o",
      "offset": [
        29581,
        29982
      ],
      "op": "JUMP",
      "path": "20"
    },
    "9019": {
      "fn": "ERC721.symbol",
      "offset": [
        4679,
        4781
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "9020": {
      "fn": "ERC721.symbol",
      "offset": [
        4767,
        4774
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 81,
      "value": "0x7"
    },
    "9022": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "DUP1",
      "path": "4"
    },
    "9023": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "9024": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "9026": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "DUP1",
      "path": "4"
    },
    "9027": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "9028": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "9030": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "9032": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "9034": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9036": {
      "op": "NOT"
    },
    "9037": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "9040": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "9042": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "DUP9",
      "path": "4"
    },
    "9043": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "AND",
      "path": "4"
    },
    "9044": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "9045": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "MUL",
      "path": "4"
    },
    "9046": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "ADD",
      "path": "4"
    },
    "9047": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9048": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "9049": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "AND",
      "path": "4"
    },
    "9050": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "9051": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9052": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "9053": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "DIV",
      "path": "4"
    },
    "9054": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "9055": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "DUP5",
      "path": "4"
    },
    "9056": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "ADD",
      "path": "4"
    },
    "9057": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "DUP2",
      "path": "4"
    },
    "9058": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9059": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "DIV",
      "path": "4"
    },
    "9060": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "DUP2",
      "path": "4"
    },
    "9061": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "MUL",
      "path": "4"
    },
    "9062": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "DUP3",
      "path": "4"
    },
    "9063": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "ADD",
      "path": "4"
    },
    "9064": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "DUP2",
      "path": "4"
    },
    "9065": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "ADD",
      "path": "4"
    },
    "9066": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9067": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "9068": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "9069": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "DUP3",
      "path": "4"
    },
    "9070": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "DUP2",
      "path": "4"
    },
    "9071": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "9072": {
      "fn": "ERC721.symbol",
      "offset": [
        4735,
        4748
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "9074": {
      "fn": "ERC721.symbol",
      "offset": [
        4735,
        4748
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "9075": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9076": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "9077": {
      "fn": "ERC721.symbol",
      "offset": [
        4767,
        4774
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9078": {
      "fn": "ERC721.symbol",
      "offset": [
        4767,
        4774
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "9079": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "DUP4",
      "path": "4"
    },
    "9080": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "ADD",
      "path": "4"
    },
    "9081": {
      "fn": "ERC721.symbol",
      "offset": [
        4767,
        4774
      ],
      "op": "DUP3",
      "path": "4"
    },
    "9082": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "DUP3",
      "path": "4"
    },
    "9083": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "DUP1",
      "path": "4"
    },
    "9084": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "9085": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x135A"
    },
    "9088": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "9089": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "DUP1",
      "path": "4"
    },
    "9090": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "9092": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "LT",
      "path": "4"
    },
    "9093": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x132F"
    },
    "9096": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "9097": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "9100": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "DUP1",
      "path": "4"
    },
    "9101": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "DUP4",
      "path": "4"
    },
    "9102": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "9103": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "DIV",
      "path": "4"
    },
    "9104": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "MUL",
      "path": "4"
    },
    "9105": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "DUP4",
      "path": "4"
    },
    "9106": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "9107": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "9108": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "9110": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "ADD",
      "path": "4"
    },
    "9111": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "9112": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x135A"
    },
    "9115": {
      "fn": "ERC721.symbol",
      "offset": [
        4760,
        4774
      ],
      "op": "JUMP",
      "path": "4"
    },
    "9116": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7506,
        7796
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "9117": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7620,
        7632
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 82,
      "value": "0x23A4"
    },
    "9120": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7620,
        7630
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x372C"
    },
    "9123": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        7620,
        7632
      ],
      "op": "JUMP",
      "path": "4"
    },
    "9124": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7620,
        7632
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "9125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9129": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9131": {
      "op": "SHL"
    },
    "9132": {
      "op": "SUB"
    },
    "9133": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7608,
        7632
      ],
      "op": "AND",
      "path": "4"
    },
    "9134": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7608,
        7616
      ],
      "op": "DUP3",
      "path": "4"
    },
    "9135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9139": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9141": {
      "op": "SHL"
    },
    "9142": {
      "op": "SUB"
    },
    "9143": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7608,
        7632
      ],
      "op": "AND",
      "path": "4"
    },
    "9144": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7608,
        7632
      ],
      "op": "EQ",
      "path": "4"
    },
    "9145": {
      "branch": 266,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7608,
        7632
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "9146": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7600,
        7662
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x240A"
    },
    "9149": {
      "branch": 266,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7600,
        7662
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "9150": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7600,
        7662
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "9152": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7600,
        7662
      ],
      "op": "DUP1",
      "path": "4"
    },
    "9153": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7600,
        7662
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "9154": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9158": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9160": {
      "op": "SHL"
    },
    "9161": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7600,
        7662
      ],
      "op": "DUP2",
      "path": "4"
    },
    "9162": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7600,
        7662
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "9163": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7600,
        7662
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "9165": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7600,
        7662
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "9167": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7600,
        7662
      ],
      "op": "DUP3",
      "path": "4"
    },
    "9168": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7600,
        7662
      ],
      "op": "ADD",
      "path": "4"
    },
    "9169": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7600,
        7662
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "9170": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7600,
        7662
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x19"
    },
    "9172": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7600,
        7662
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "9174": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7600,
        7662
      ],
      "op": "DUP3",
      "path": "4"
    },
    "9175": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7600,
        7662
      ],
      "op": "ADD",
      "path": "4"
    },
    "9176": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7600,
        7662
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "9177": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7600,
        7662
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "9210": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7600,
        7662
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x44"
    },
    "9212": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7600,
        7662
      ],
      "op": "DUP3",
      "path": "4"
    },
    "9213": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7600,
        7662
      ],
      "op": "ADD",
      "path": "4"
    },
    "9214": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7600,
        7662
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "9215": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7600,
        7662
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9216": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7600,
        7662
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "9217": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7600,
        7662
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9218": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7600,
        7662
      ],
      "op": "DUP2",
      "path": "4"
    },
    "9219": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7600,
        7662
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9220": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7600,
        7662
      ],
      "op": "SUB",
      "path": "4"
    },
    "9221": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7600,
        7662
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x64"
    },
    "9223": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7600,
        7662
      ],
      "op": "ADD",
      "path": "4"
    },
    "9224": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7600,
        7662
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9225": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7600,
        7662
      ],
      "op": "REVERT",
      "path": "4"
    },
    "9226": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7600,
        7662
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "9227": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7718,
        7726
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 83
    },
    "9228": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7691
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "9230": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7705
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "9232": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7692,
        7704
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2417"
    },
    "9235": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7692,
        7702
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x372C"
    },
    "9238": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        7692,
        7704
      ],
      "op": "JUMP",
      "path": "4"
    },
    "9239": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7692,
        7704
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "9240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9244": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9246": {
      "op": "SHL"
    },
    "9247": {
      "op": "SUB"
    },
    "9248": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7705
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9249": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7705
      ],
      "op": "DUP2",
      "path": "4"
    },
    "9250": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7705
      ],
      "op": "AND",
      "path": "4"
    },
    "9251": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7705
      ],
      "op": "DUP3",
      "path": "4"
    },
    "9252": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7705
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "9253": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7705
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "9255": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7705
      ],
      "op": "DUP1",
      "path": "4"
    },
    "9256": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7705
      ],
      "op": "DUP4",
      "path": "4"
    },
    "9257": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7705
      ],
      "op": "ADD",
      "path": "4"
    },
    "9258": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7705
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "9259": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7705
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9260": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7705
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "9261": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7705
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "9262": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7705
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "9264": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7705
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "9265": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7705
      ],
      "op": "DUP3",
      "path": "4"
    },
    "9266": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7705
      ],
      "op": "ADD",
      "path": "4"
    },
    "9267": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9269": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7705
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9270": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7705
      ],
      "op": "DUP2",
      "path": "4"
    },
    "9271": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7705
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "9272": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7715
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "9273": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7715
      ],
      "op": "DUP8",
      "path": "4"
    },
    "9274": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7715
      ],
      "op": "AND",
      "path": "4"
    },
    "9275": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7715
      ],
      "op": "DUP1",
      "path": "4"
    },
    "9276": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7715
      ],
      "op": "DUP3",
      "path": "4"
    },
    "9277": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7715
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "9278": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7715
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "9279": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7715
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9280": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7715
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "9281": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7715
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "9282": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7715
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "9283": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7715
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "9284": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7726
      ],
      "op": "DUP1",
      "path": "4"
    },
    "9285": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7726
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "9286": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9288": {
      "op": "NOT"
    },
    "9289": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7726
      ],
      "op": "AND",
      "path": "4"
    },
    "9290": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7726
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "9291": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7726
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "9292": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7726
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "9293": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7726
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "9294": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7726
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9295": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7726
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "9296": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7726
      ],
      "op": "OR",
      "path": "4"
    },
    "9297": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7726
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9298": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7726
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "9299": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7673,
        7726
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "9300": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7756,
        7768
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 84,
      "value": "0x245B"
    },
    "9303": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7756,
        7766
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x372C"
    },
    "9306": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        7756,
        7768
      ],
      "op": "JUMP",
      "path": "4"
    },
    "9307": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7756,
        7768
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "9308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9312": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9314": {
      "op": "SHL"
    },
    "9315": {
      "op": "SUB"
    },
    "9316": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7741,
        7789
      ],
      "op": "AND",
      "path": "4"
    },
    "9317": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7741,
        7789
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "9350": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7780,
        7788
      ],
      "op": "DUP4",
      "path": "4"
    },
    "9351": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7741,
        7789
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "9353": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7741,
        7789
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "9354": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7741,
        7789
      ],
      "op": "DUP1",
      "path": "4"
    },
    "9355": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7741,
        7789
      ],
      "op": "DUP3",
      "path": "4"
    },
    "9356": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7741,
        7789
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "9357": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7741,
        7789
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "9358": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7741,
        7789
      ],
      "op": "DUP2",
      "path": "4"
    },
    "9359": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7741,
        7789
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "9360": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7741,
        7789
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "9362": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7741,
        7789
      ],
      "op": "ADD",
      "path": "4"
    },
    "9363": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7741,
        7789
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "9364": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7741,
        7789
      ],
      "op": "POP",
      "path": "4"
    },
    "9365": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7741,
        7789
      ],
      "op": "POP",
      "path": "4"
    },
    "9366": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7741,
        7789
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "9368": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7741,
        7789
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "9369": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7741,
        7789
      ],
      "op": "DUP1",
      "path": "4"
    },
    "9370": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7741,
        7789
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "9371": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7741,
        7789
      ],
      "op": "SUB",
      "path": "4"
    },
    "9372": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7741,
        7789
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9373": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7741,
        7789
      ],
      "op": "LOG3",
      "path": "4"
    },
    "9374": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7506,
        7796
      ],
      "op": "POP",
      "path": "4"
    },
    "9375": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7506,
        7796
      ],
      "op": "POP",
      "path": "4"
    },
    "9376": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        7506,
        7796
      ],
      "op": "JUMP",
      "path": "4"
    },
    "9377": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39214,
        39493
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9378": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39352,
        39377
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 85,
      "value": "0x0"
    },
    "9380": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39352,
        39377
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9381": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39352,
        39377
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9382": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39352,
        39377
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9383": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39352,
        39367
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x11"
    },
    "9385": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39352,
        39377
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "9387": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39352,
        39377
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9388": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39352,
        39377
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "9390": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39352,
        39377
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9391": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39352,
        39377
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "9392": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39352,
        39377
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "9393": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39341,
        39377
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9394": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39341,
        39377
      ],
      "op": "GT",
      "path": "20"
    },
    "9395": {
      "branch": 239,
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39341,
        39377
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "9396": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39333,
        39403
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x24FC"
    },
    "9399": {
      "branch": 239,
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39333,
        39403
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "9400": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39333,
        39403
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "9402": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39333,
        39403
      ],
      "op": "DUP1",
      "path": "20"
    },
    "9403": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39333,
        39403
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "9404": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9408": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9410": {
      "op": "SHL"
    },
    "9411": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39333,
        39403
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9412": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39333,
        39403
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9413": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39333,
        39403
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "9415": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39333,
        39403
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "9417": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39333,
        39403
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9418": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39333,
        39403
      ],
      "op": "ADD",
      "path": "20"
    },
    "9419": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39333,
        39403
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9420": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39333,
        39403
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x15"
    },
    "9422": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39333,
        39403
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "9424": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39333,
        39403
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9425": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39333,
        39403
      ],
      "op": "ADD",
      "path": "20"
    },
    "9426": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39333,
        39403
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9427": {
      "op": "PUSH21",
      "value": "0x43616E277420696E63726561736520656E65726779"
    },
    "9449": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "9451": {
      "op": "SHL"
    },
    "9452": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39333,
        39403
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "9454": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39333,
        39403
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9455": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39333,
        39403
      ],
      "op": "ADD",
      "path": "20"
    },
    "9456": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39333,
        39403
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9457": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39333,
        39403
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9458": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39333,
        39403
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "9459": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39333,
        39403
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9460": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39333,
        39403
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9461": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39333,
        39403
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9462": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39333,
        39403
      ],
      "op": "SUB",
      "path": "20"
    },
    "9463": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39333,
        39403
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "9465": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39333,
        39403
      ],
      "op": "ADD",
      "path": "20"
    },
    "9466": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39333,
        39403
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9467": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39333,
        39403
      ],
      "op": "REVERT",
      "path": "20"
    },
    "9468": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39333,
        39403
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9469": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39451,
        39476
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 86,
      "value": "0x0"
    },
    "9471": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39451,
        39476
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "9472": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39451,
        39476
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9473": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39451,
        39476
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9474": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39451,
        39466
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x11"
    },
    "9476": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39451,
        39476
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "9478": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39451,
        39476
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9479": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39451,
        39476
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "9481": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39451,
        39476
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9482": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39451,
        39476
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "9483": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39451,
        39476
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "9484": {
      "fn": "BuyTheDipNFT.setEnergy",
      "offset": [
        39451,
        39486
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "9485": {
      "fn": "BuyTheDipNFT.setEnergy",
      "jump": "o",
      "offset": [
        39214,
        39493
      ],
      "op": "JUMP",
      "path": "20"
    },
    "9486": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "9487": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8798,
        8839
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 87,
      "value": "0x2519"
    },
    "9490": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8817,
        8829
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14BE"
    },
    "9493": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8817,
        8827
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x372C"
    },
    "9496": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        8817,
        8829
      ],
      "op": "JUMP",
      "path": "4"
    },
    "9497": {
      "branch": 267,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8798,
        8839
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "9498": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8790,
        8893
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2554"
    },
    "9501": {
      "branch": 267,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8790,
        8893
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "9502": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8790,
        8893
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "9504": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8790,
        8893
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "9505": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9509": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9511": {
      "op": "SHL"
    },
    "9512": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8790,
        8893
      ],
      "op": "DUP2",
      "path": "4"
    },
    "9513": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8790,
        8893
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "9514": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8790,
        8893
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "9516": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8790,
        8893
      ],
      "op": "ADD",
      "path": "4"
    },
    "9517": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8790,
        8893
      ],
      "op": "DUP1",
      "path": "4"
    },
    "9518": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8790,
        8893
      ],
      "op": "DUP1",
      "path": "4"
    },
    "9519": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8790,
        8893
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "9521": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8790,
        8893
      ],
      "op": "ADD",
      "path": "4"
    },
    "9522": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8790,
        8893
      ],
      "op": "DUP3",
      "path": "4"
    },
    "9523": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8790,
        8893
      ],
      "op": "DUP2",
      "path": "4"
    },
    "9524": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8790,
        8893
      ],
      "op": "SUB",
      "path": "4"
    },
    "9525": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8790,
        8893
      ],
      "op": "DUP3",
      "path": "4"
    },
    "9526": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8790,
        8893
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "9527": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8790,
        8893
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x31"
    },
    "9529": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8790,
        8893
      ],
      "op": "DUP2",
      "path": "4"
    },
    "9530": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8790,
        8893
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "9531": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8790,
        8893
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "9533": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8790,
        8893
      ],
      "op": "ADD",
      "path": "4"
    },
    "9534": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8790,
        8893
      ],
      "op": "DUP1",
      "path": "4"
    },
    "9535": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8790,
        8893
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5983"
    },
    "9538": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8790,
        8893
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x31"
    },
    "9540": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8790,
        8893
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "9541": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8790,
        8893
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "9542": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8790,
        8893
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "9544": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8790,
        8893
      ],
      "op": "ADD",
      "path": "4"
    },
    "9545": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8790,
        8893
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "9546": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8790,
        8893
      ],
      "op": "POP",
      "path": "4"
    },
    "9547": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8790,
        8893
      ],
      "op": "POP",
      "path": "4"
    },
    "9548": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8790,
        8893
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "9550": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8790,
        8893
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "9551": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8790,
        8893
      ],
      "op": "DUP1",
      "path": "4"
    },
    "9552": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8790,
        8893
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "9553": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8790,
        8893
      ],
      "op": "SUB",
      "path": "4"
    },
    "9554": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8790,
        8893
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "9555": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8790,
        8893
      ],
      "op": "REVERT",
      "path": "4"
    },
    "9556": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8790,
        8893
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "9557": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8903,
        8942
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 88,
      "value": "0x2560"
    },
    "9560": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8917,
        8921
      ],
      "op": "DUP5",
      "path": "4"
    },
    "9561": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8923,
        8925
      ],
      "op": "DUP5",
      "path": "4"
    },
    "9562": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8927,
        8934
      ],
      "op": "DUP5",
      "path": "4"
    },
    "9563": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8936,
        8941
      ],
      "op": "DUP5",
      "path": "4"
    },
    "9564": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8903,
        8916
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3F22"
    },
    "9567": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        8903,
        8942
      ],
      "op": "JUMP",
      "path": "4"
    },
    "9568": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8903,
        8942
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "9569": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "POP",
      "path": "4"
    },
    "9570": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "POP",
      "path": "4"
    },
    "9571": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "POP",
      "path": "4"
    },
    "9572": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8667,
        8949
      ],
      "op": "POP",
      "path": "4"
    },
    "9573": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        8667,
        8949
      ],
      "op": "JUMP",
      "path": "4"
    },
    "9574": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31124,
        38640
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9575": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31198,
        31211
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "9577": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31231,
        31248
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 89,
      "value": "0x2571"
    },
    "9580": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31239,
        31247
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9581": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31231,
        31238
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x371F"
    },
    "9584": {
      "fn": "BuyTheDipNFT.tokenURI",
      "jump": "i",
      "offset": [
        31231,
        31248
      ],
      "op": "JUMP",
      "path": "20"
    },
    "9585": {
      "branch": 240,
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31231,
        31248
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9586": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31223,
        31300
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x25AC"
    },
    "9589": {
      "branch": 240,
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31223,
        31300
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "9590": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31223,
        31300
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "9592": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31223,
        31300
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "9593": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9597": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9599": {
      "op": "SHL"
    },
    "9600": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31223,
        31300
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9601": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31223,
        31300
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9602": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31223,
        31300
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "9604": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31223,
        31300
      ],
      "op": "ADD",
      "path": "20"
    },
    "9605": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31223,
        31300
      ],
      "op": "DUP1",
      "path": "20"
    },
    "9606": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31223,
        31300
      ],
      "op": "DUP1",
      "path": "20"
    },
    "9607": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31223,
        31300
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "9609": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31223,
        31300
      ],
      "op": "ADD",
      "path": "20"
    },
    "9610": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31223,
        31300
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9611": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31223,
        31300
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9612": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31223,
        31300
      ],
      "op": "SUB",
      "path": "20"
    },
    "9613": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31223,
        31300
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9614": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31223,
        31300
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9615": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31223,
        31300
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2F"
    },
    "9617": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31223,
        31300
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9618": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31223,
        31300
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9619": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31223,
        31300
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "9621": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31223,
        31300
      ],
      "op": "ADD",
      "path": "20"
    },
    "9622": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31223,
        31300
      ],
      "op": "DUP1",
      "path": "20"
    },
    "9623": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31223,
        31300
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5719"
    },
    "9626": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31223,
        31300
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2F"
    },
    "9628": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31223,
        31300
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "9629": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31223,
        31300
      ],
      "op": "CODECOPY",
      "path": "20"
    },
    "9630": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31223,
        31300
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "9632": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31223,
        31300
      ],
      "op": "ADD",
      "path": "20"
    },
    "9633": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31223,
        31300
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "9634": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31223,
        31300
      ],
      "op": "POP",
      "path": "20"
    },
    "9635": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31223,
        31300
      ],
      "op": "POP",
      "path": "20"
    },
    "9636": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31223,
        31300
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "9638": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31223,
        31300
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "9639": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31223,
        31300
      ],
      "op": "DUP1",
      "path": "20"
    },
    "9640": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31223,
        31300
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "9641": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31223,
        31300
      ],
      "op": "SUB",
      "path": "20"
    },
    "9642": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31223,
        31300
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9643": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31223,
        31300
      ],
      "op": "REVERT",
      "path": "20"
    },
    "9644": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31223,
        31300
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9645": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31311,
        31330
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "9647": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31333,
        31366
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9648": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31333,
        31366
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9649": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31333,
        31366
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9650": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31333,
        31356
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x10"
    },
    "9652": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31333,
        31366
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "9654": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31333,
        31366
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9655": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31333,
        31366
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9656": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31333,
        31366
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9657": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31333,
        31366
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "9659": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31333,
        31366
      ],
      "op": "DUP1",
      "path": "20"
    },
    "9660": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31333,
        31366
      ],
      "op": "DUP4",
      "path": "20"
    },
    "9661": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31333,
        31366
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "9662": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31333,
        31366
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "9663": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31396,
        31413
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC"
    },
    "9665": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31396,
        31423
      ],
      "op": "DUP4",
      "path": "20"
    },
    "9666": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31396,
        31423
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9667": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31396,
        31423
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9668": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31396,
        31423
      ],
      "op": "DUP5",
      "path": "20"
    },
    "9669": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31396,
        31423
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "9670": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31396,
        31423
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "9671": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31464,
        31481
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xD"
    },
    "9673": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31464,
        31491
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9674": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31464,
        31491
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "9675": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31464,
        31491
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9676": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31464,
        31491
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9677": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31464,
        31491
      ],
      "op": "DUP4",
      "path": "20"
    },
    "9678": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31464,
        31491
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "9679": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31464,
        31491
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "9680": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31333,
        31366
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "9682": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31333,
        31366
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "9683": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31333,
        31366
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9684": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31333,
        31366
      ],
      "op": "AND",
      "path": "20"
    },
    "9685": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31333,
        31366
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "9686": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31396,
        31423
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "9687": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31396,
        31423
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9688": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31396,
        31423
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "9689": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31396,
        31423
      ],
      "op": "AND",
      "path": "20"
    },
    "9690": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31396,
        31423
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "9691": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31520,
        31522
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4E"
    },
    "9693": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31520,
        31522
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9694": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31573,
        31589
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x25E5"
    },
    "9697": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31573,
        31587
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2244"
    },
    "9700": {
      "fn": "BuyTheDipNFT.tokenURI",
      "jump": "i",
      "offset": [
        31573,
        31589
      ],
      "op": "JUMP",
      "path": "20"
    },
    "9701": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31573,
        31589
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9702": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31542,
        31590
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9703": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31542,
        31590
      ],
      "op": "POP",
      "path": "20"
    },
    "9704": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31600,
        31621
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "9706": {
      "branch": 241,
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31636,
        31650
      ],
      "op": "DUP6",
      "path": "20"
    },
    "9707": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31631,
        31940
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x25F5"
    },
    "9710": {
      "branch": 241,
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31631,
        31940
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "9711": {
      "op": "POP"
    },
    "9712": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31682,
        31689
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 90
    },
    "9713": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31631,
        31940
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2643"
    },
    "9716": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31631,
        31940
      ],
      "op": "JUMP",
      "path": "20"
    },
    "9717": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31631,
        31940
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9718": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31787,
        31816
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 91,
      "value": "0x0"
    },
    "9720": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31787,
        31816
      ],
      "op": "DUP9",
      "path": "20"
    },
    "9721": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31787,
        31816
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9722": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31787,
        31816
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9723": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31787,
        31806
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE"
    },
    "9725": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31787,
        31816
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "9727": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31787,
        31816
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9728": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31787,
        31816
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "9730": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31787,
        31816
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9731": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31787,
        31816
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "9732": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31787,
        31816
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "9733": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31781,
        31784
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "9735": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31781,
        31816
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9736": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31781,
        31816
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9737": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31781,
        31816
      ],
      "op": "SUB",
      "path": "20"
    },
    "9738": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31781,
        31816
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9739": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31761,
        31779
      ],
      "op": "DUP6",
      "path": "20"
    },
    "9740": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31761,
        31779
      ],
      "op": "MUL",
      "path": "20"
    },
    "9741": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31781,
        31816
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9742": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31761,
        31817
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2613"
    },
    "9745": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31761,
        31817
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "9746": {
      "dev": "Division by zero",
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31761,
        31817
      ],
      "op": "INVALID",
      "path": "20"
    },
    "9747": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31761,
        31817
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9748": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31761,
        31817
      ],
      "op": "DIV",
      "path": "20"
    },
    "9749": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31745,
        31757
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9750": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31745,
        31818
      ],
      "op": "GT",
      "path": "20"
    },
    "9751": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31744,
        31901
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x263D"
    },
    "9754": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31744,
        31901
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "9755": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31897,
        31900
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "9757": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31883,
        31895
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9758": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31869,
        31881
      ],
      "op": "DUP6",
      "path": "20"
    },
    "9759": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31854,
        31866
      ],
      "op": "DUP5",
      "path": "20"
    },
    "9760": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31854,
        31881
      ],
      "op": "SUB",
      "path": "20"
    },
    "9761": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31849,
        31852
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "9763": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31849,
        31882
      ],
      "op": "MUL",
      "path": "20"
    },
    "9764": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31849,
        31895
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9765": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31849,
        31895
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x262A"
    },
    "9768": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31849,
        31895
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "9769": {
      "dev": "Division by zero",
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31849,
        31895
      ],
      "op": "INVALID",
      "path": "20"
    },
    "9770": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31849,
        31895
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9771": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31849,
        31895
      ],
      "op": "DIV",
      "path": "20"
    },
    "9772": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31843,
        31846
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "9774": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31843,
        31895
      ],
      "op": "SUB",
      "path": "20"
    },
    "9775": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31834,
        31841
      ],
      "op": "DUP5",
      "path": "20"
    },
    "9776": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31834,
        31896
      ],
      "op": "MUL",
      "path": "20"
    },
    "9777": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31834,
        31900
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9778": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31834,
        31900
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2637"
    },
    "9781": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31834,
        31900
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "9782": {
      "dev": "Division by zero",
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31834,
        31900
      ],
      "op": "INVALID",
      "path": "20"
    },
    "9783": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31834,
        31900
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9784": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31834,
        31900
      ],
      "op": "DIV",
      "path": "20"
    },
    "9785": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31744,
        31901
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2640"
    },
    "9788": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31744,
        31901
      ],
      "op": "JUMP",
      "path": "20"
    },
    "9789": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31744,
        31901
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9790": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31822,
        31823
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "9792": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31744,
        31901
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9793": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31728,
        31901
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9794": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31728,
        31901
      ],
      "op": "POP",
      "path": "20"
    },
    "9795": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31631,
        31940
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9796": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31949,
        31964
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "9798": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31967,
        31992
      ],
      "op": "DUP9",
      "path": "20"
    },
    "9799": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31967,
        31992
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9800": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31967,
        31992
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9801": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31967,
        31982
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x11"
    },
    "9803": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31967,
        31992
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "9805": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31967,
        31992
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9806": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31967,
        31992
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "9808": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31967,
        31992
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9809": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31967,
        31992
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "9810": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        31967,
        31992
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "9811": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32003,
        32026
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "9813": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32146,
        32150
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "9815": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32130,
        32150
      ],
      "op": "DUP9",
      "path": "20"
    },
    "9816": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32130,
        32150
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "9817": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32130,
        32150
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "9818": {
      "branch": 242,
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32130,
        32150
      ],
      "op": "EQ",
      "path": "20"
    },
    "9819": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32126,
        34754
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "9820": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32126,
        34754
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x271D"
    },
    "9823": {
      "branch": 242,
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32126,
        34754
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "9824": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33396,
        33419
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 92,
      "value": "0x2668"
    },
    "9827": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33405,
        33418
      ],
      "op": "DUP4",
      "path": "20"
    },
    "9828": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33396,
        33404
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2D64"
    },
    "9831": {
      "fn": "BuyTheDipNFT.tokenURI",
      "jump": "i",
      "offset": [
        33396,
        33419
      ],
      "op": "JUMP",
      "path": "20"
    },
    "9832": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33396,
        33419
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9833": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "9835": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "9836": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "9838": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "ADD",
      "path": "20"
    },
    "9839": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "DUP1",
      "path": "20"
    },
    "9840": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC1"
    },
    "9842": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x549C"
    },
    "9845": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9846": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "CODECOPY",
      "path": "20"
    },
    "9847": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC1"
    },
    "9849": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "ADD",
      "path": "20"
    },
    "9850": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "DUP1",
      "path": "20"
    },
    "9851": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5339"
    },
    "9854": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC1"
    },
    "9856": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "9857": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "CODECOPY",
      "path": "20"
    },
    "9858": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC1"
    },
    "9860": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "ADD",
      "path": "20"
    },
    "9861": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "DUP1",
      "path": "20"
    },
    "9862": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x253343636972636C652063783D27313735272063793D273230302720723D2700"
    },
    "9895": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9896": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9897": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "POP",
      "path": "20"
    },
    "9898": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "9900": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "ADD",
      "path": "20"
    },
    "9901": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9902": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "DUP1",
      "path": "20"
    },
    "9903": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "9904": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9905": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "9907": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "ADD",
      "path": "20"
    },
    "9908": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9909": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "DUP1",
      "path": "20"
    },
    "9910": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "DUP4",
      "path": "20"
    },
    "9911": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "DUP4",
      "path": "20"
    },
    "9912": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9913": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "9915": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "DUP4",
      "path": "20"
    },
    "9916": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "LT",
      "path": "20"
    },
    "9917": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x26D7"
    },
    "9920": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "9921": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "DUP1",
      "path": "20"
    },
    "9922": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "9923": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9924": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9925": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9927": {
      "op": "NOT"
    },
    "9928": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9929": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "9930": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "ADD",
      "path": "20"
    },
    "9931": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "9932": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "9934": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "9935": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9936": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "ADD",
      "path": "20"
    },
    "9937": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "9938": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "ADD",
      "path": "20"
    },
    "9939": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x26B8"
    },
    "9942": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "JUMP",
      "path": "20"
    },
    "9943": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "9944": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "9946": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "DUP4",
      "path": "20"
    },
    "9947": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "9949": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "SUB",
      "path": "20"
    },
    "9950": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "9953": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "EXP",
      "path": "20"
    },
    "9954": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "SUB",
      "path": "20"
    },
    "9955": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "DUP1",
      "path": "20"
    },
    "9956": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "NOT",
      "path": "20"
    },
    "9957": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9958": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "9959": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "AND",
      "path": "20"
    },
    "9960": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9961": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "DUP5",
      "path": "20"
    },
    "9962": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "9963": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "AND",
      "path": "20"
    },
    "9964": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "DUP1",
      "path": "20"
    },
    "9965": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "DUP3",
      "path": "20"
    },
    "9966": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "OR",
      "path": "20"
    },
    "9967": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "DUP6",
      "path": "20"
    },
    "9968": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "9969": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "POP",
      "path": "20"
    },
    "9970": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "POP",
      "path": "20"
    },
    "9971": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "POP",
      "path": "20"
    },
    "9972": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "POP",
      "path": "20"
    },
    "9973": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "POP",
      "path": "20"
    },
    "9974": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "POP",
      "path": "20"
    },
    "9975": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "9976": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "POP",
      "path": "20"
    },
    "9977": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "ADD",
      "path": "20"
    },
    "9978": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "DUP1",
      "path": "20"
    },
    "9979": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x52BE"
    },
    "9982": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2E"
    },
    "9984": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "9985": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "CODECOPY",
      "path": "20"
    },
    "9986": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2E"
    },
    "9988": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "ADD",
      "path": "20"
    },
    "9989": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "9990": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "POP",
      "path": "20"
    },
    "9991": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "POP",
      "path": "20"
    },
    "9992": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "9994": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "9995": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "9997": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "DUP2",
      "path": "20"
    },
    "9998": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "DUP4",
      "path": "20"
    },
    "9999": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "SUB",
      "path": "20"
    },
    "10000": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "SUB",
      "path": "20"
    },
    "10001": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10002": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10003": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10004": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "10006": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32184,
        33484
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10007": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32165,
        33485
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10008": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32165,
        33485
      ],
      "op": "POP",
      "path": "20"
    },
    "10009": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32126,
        34754
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x27EA"
    },
    "10012": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32126,
        34754
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10013": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32126,
        34754
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10014": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34090,
        34113
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 93,
      "value": "0x2726"
    },
    "10017": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34099,
        34112
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10018": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34090,
        34098
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2D64"
    },
    "10021": {
      "fn": "BuyTheDipNFT.tokenURI",
      "jump": "i",
      "offset": [
        34090,
        34113
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10022": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34090,
        34113
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10023": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "10025": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10026": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10028": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "ADD",
      "path": "20"
    },
    "10029": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10030": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB4"
    },
    "10032": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5748"
    },
    "10035": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10036": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "CODECOPY",
      "path": "20"
    },
    "10037": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB4"
    },
    "10039": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "ADD",
      "path": "20"
    },
    "10040": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB2"
    },
    "10042": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5BCE"
    },
    "10045": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10046": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "CODECOPY",
      "path": "20"
    },
    "10047": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB2"
    },
    "10049": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "ADD",
      "path": "20"
    },
    "10050": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10051": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x253343636972636C652063783D27313735272063793D273230302720723D2700"
    },
    "10084": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10085": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10086": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "POP",
      "path": "20"
    },
    "10087": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "10089": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "ADD",
      "path": "20"
    },
    "10090": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10091": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10092": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10093": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10094": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10096": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "ADD",
      "path": "20"
    },
    "10097": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10098": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10099": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10100": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10101": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10102": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10104": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10105": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "LT",
      "path": "20"
    },
    "10106": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2794"
    },
    "10109": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "10110": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10111": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10112": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10113": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10114": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10116": {
      "op": "NOT"
    },
    "10117": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10118": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "10119": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "ADD",
      "path": "20"
    },
    "10120": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10121": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10123": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10124": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10125": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "ADD",
      "path": "20"
    },
    "10126": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10127": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "ADD",
      "path": "20"
    },
    "10128": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2775"
    },
    "10131": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10132": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10133": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "10135": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10136": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10138": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "SUB",
      "path": "20"
    },
    "10139": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "10142": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "EXP",
      "path": "20"
    },
    "10143": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "SUB",
      "path": "20"
    },
    "10144": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10145": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "NOT",
      "path": "20"
    },
    "10146": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10147": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10148": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "AND",
      "path": "20"
    },
    "10149": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10150": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "DUP5",
      "path": "20"
    },
    "10151": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10152": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "AND",
      "path": "20"
    },
    "10153": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10154": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10155": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "OR",
      "path": "20"
    },
    "10156": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "DUP6",
      "path": "20"
    },
    "10157": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10158": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "POP",
      "path": "20"
    },
    "10159": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "POP",
      "path": "20"
    },
    "10160": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "POP",
      "path": "20"
    },
    "10161": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "POP",
      "path": "20"
    },
    "10162": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "POP",
      "path": "20"
    },
    "10163": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "POP",
      "path": "20"
    },
    "10164": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10165": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "POP",
      "path": "20"
    },
    "10166": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "ADD",
      "path": "20"
    },
    "10167": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10168": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x52BE"
    },
    "10171": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2E"
    },
    "10173": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10174": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "CODECOPY",
      "path": "20"
    },
    "10175": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2E"
    },
    "10177": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "ADD",
      "path": "20"
    },
    "10178": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB3"
    },
    "10180": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5A4F"
    },
    "10183": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10184": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "CODECOPY",
      "path": "20"
    },
    "10185": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB3"
    },
    "10187": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "ADD",
      "path": "20"
    },
    "10188": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x56"
    },
    "10190": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5B02"
    },
    "10193": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10194": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "CODECOPY",
      "path": "20"
    },
    "10195": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x56"
    },
    "10197": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "ADD",
      "path": "20"
    },
    "10198": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10199": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "POP",
      "path": "20"
    },
    "10200": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "POP",
      "path": "20"
    },
    "10201": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "10203": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10204": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10206": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10207": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10208": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "SUB",
      "path": "20"
    },
    "10209": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "SUB",
      "path": "20"
    },
    "10210": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10211": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10212": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10213": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "10215": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33565,
        34742
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10216": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33546,
        34743
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10217": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        33546,
        34743
      ],
      "op": "POP",
      "path": "20"
    },
    "10218": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        32126,
        34754
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10219": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34764,
        34781
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "10221": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36113,
        36154
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2800"
    },
    "10224": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36130,
        36146
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x27F7"
    },
    "10227": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36130,
        36144
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2244"
    },
    "10230": {
      "fn": "BuyTheDipNFT.tokenURI",
      "jump": "i",
      "offset": [
        36130,
        36146
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10231": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36130,
        36146
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10232": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36149,
        36150
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "10234": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36152,
        36153
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "10236": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36113,
        36121
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3F74"
    },
    "10239": {
      "fn": "BuyTheDipNFT.tokenURI",
      "jump": "i",
      "offset": [
        36113,
        36154
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10240": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36113,
        36154
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10241": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36374,
        36411
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x280D"
    },
    "10244": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36391,
        36403
      ],
      "op": "DUP9",
      "path": "20"
    },
    "10245": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36406,
        36407
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x8"
    },
    "10247": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36409,
        36410
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "10249": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36374,
        36382
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3F74"
    },
    "10252": {
      "fn": "BuyTheDipNFT.tokenURI",
      "jump": "i",
      "offset": [
        36374,
        36411
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10253": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36374,
        36411
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10254": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "10256": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10257": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10259": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "ADD",
      "path": "20"
    },
    "10260": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10261": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xAA"
    },
    "10263": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x50D4"
    },
    "10266": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10267": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "CODECOPY",
      "path": "20"
    },
    "10268": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xAA"
    },
    "10270": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "ADD",
      "path": "20"
    },
    "10271": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "10274": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5883"
    },
    "10277": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10278": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "CODECOPY",
      "path": "20"
    },
    "10279": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "10282": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "ADD",
      "path": "20"
    },
    "10283": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x213"
    },
    "10286": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4DFC"
    },
    "10289": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10290": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "CODECOPY",
      "path": "20"
    },
    "10291": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x213"
    },
    "10294": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "ADD",
      "path": "20"
    },
    "10295": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x51"
    },
    "10297": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x59FE"
    },
    "10300": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10301": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "CODECOPY",
      "path": "20"
    },
    "10302": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x51"
    },
    "10304": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "ADD",
      "path": "20"
    },
    "10305": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3C"
    },
    "10307": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5586"
    },
    "10310": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10311": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "CODECOPY",
      "path": "20"
    },
    "10312": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3C"
    },
    "10314": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "ADD",
      "path": "20"
    },
    "10315": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10316": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10317": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10318": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10319": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10321": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "ADD",
      "path": "20"
    },
    "10322": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10323": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10324": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10325": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10326": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10327": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10329": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10330": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "LT",
      "path": "20"
    },
    "10331": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2875"
    },
    "10334": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "10335": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10336": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10337": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10338": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10339": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10341": {
      "op": "NOT"
    },
    "10342": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10343": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "10344": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "ADD",
      "path": "20"
    },
    "10345": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10346": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10348": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10349": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10350": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "ADD",
      "path": "20"
    },
    "10351": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10352": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "ADD",
      "path": "20"
    },
    "10353": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2856"
    },
    "10356": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10357": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10358": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10359": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10360": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10361": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10363": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "10364": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10365": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "10366": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SUB",
      "path": "20"
    },
    "10367": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "10370": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "EXP",
      "path": "20"
    },
    "10371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10373": {
      "op": "NOT"
    },
    "10374": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "ADD",
      "path": "20"
    },
    "10375": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10376": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "NOT",
      "path": "20"
    },
    "10377": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10378": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10379": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "AND",
      "path": "20"
    },
    "10380": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "10381": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "AND",
      "path": "20"
    },
    "10382": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10383": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10384": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10385": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "OR",
      "path": "20"
    },
    "10386": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10387": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10388": {
      "op": "PUSH11",
      "value": "0x2533432F74657874253345"
    },
    "10400": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "10402": {
      "op": "SHL"
    },
    "10403": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "10404": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "ADD",
      "path": "20"
    },
    "10405": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10406": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10407": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10408": {
      "op": "POP"
    },
    "10409": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "10411": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "ADD",
      "path": "20"
    },
    "10412": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x51"
    },
    "10414": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5031"
    },
    "10417": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10418": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "CODECOPY",
      "path": "20"
    },
    "10419": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x51"
    },
    "10421": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "ADD",
      "path": "20"
    },
    "10422": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3C"
    },
    "10424": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x56B4"
    },
    "10427": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10428": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "CODECOPY",
      "path": "20"
    },
    "10429": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3C"
    },
    "10431": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "ADD",
      "path": "20"
    },
    "10432": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10433": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10434": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10435": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10436": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10438": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "ADD",
      "path": "20"
    },
    "10439": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10440": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10441": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10442": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10443": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10444": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10446": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10447": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "LT",
      "path": "20"
    },
    "10448": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x28EA"
    },
    "10451": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "10452": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10453": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10454": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10455": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10456": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10458": {
      "op": "NOT"
    },
    "10459": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10460": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "10461": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "ADD",
      "path": "20"
    },
    "10462": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10463": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10465": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10466": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10467": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "ADD",
      "path": "20"
    },
    "10468": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10469": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "ADD",
      "path": "20"
    },
    "10470": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x28CB"
    },
    "10473": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10474": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10475": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10476": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10477": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10478": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10480": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "10481": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10482": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "10483": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SUB",
      "path": "20"
    },
    "10484": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "10487": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "EXP",
      "path": "20"
    },
    "10488": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10490": {
      "op": "NOT"
    },
    "10491": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "ADD",
      "path": "20"
    },
    "10492": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10493": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "NOT",
      "path": "20"
    },
    "10494": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10495": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10496": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "AND",
      "path": "20"
    },
    "10497": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "10498": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "AND",
      "path": "20"
    },
    "10499": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10500": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10501": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10502": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "OR",
      "path": "20"
    },
    "10503": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10504": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10505": {
      "op": "PUSH11",
      "value": "0x2533432F74657874253345"
    },
    "10517": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "10519": {
      "op": "SHL"
    },
    "10520": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "10521": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "ADD",
      "path": "20"
    },
    "10522": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10523": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10524": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10525": {
      "op": "POP"
    },
    "10526": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "10528": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "ADD",
      "path": "20"
    },
    "10529": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x52"
    },
    "10531": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5082"
    },
    "10534": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10535": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "CODECOPY",
      "path": "20"
    },
    "10536": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x52"
    },
    "10538": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "ADD",
      "path": "20"
    },
    "10539": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "10540": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "POP",
      "path": "20"
    },
    "10541": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "POP",
      "path": "20"
    },
    "10542": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "POP",
      "path": "20"
    },
    "10543": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "10545": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10546": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10548": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10549": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10550": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SUB",
      "path": "20"
    },
    "10551": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SUB",
      "path": "20"
    },
    "10552": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10553": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10554": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10555": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "10557": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34791,
        36590
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10558": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34764,
        36591
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10559": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        34764,
        36591
      ],
      "op": "POP",
      "path": "20"
    },
    "10560": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36693,
        36696
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 94
    },
    "10561": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36922,
        36962
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2955"
    },
    "10564": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36931,
        36955
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x294C"
    },
    "10567": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36946,
        36954
      ],
      "op": "DUP14",
      "path": "20"
    },
    "10568": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36931,
        36945
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x407C"
    },
    "10571": {
      "fn": "BuyTheDipNFT.tokenURI",
      "jump": "i",
      "offset": [
        36931,
        36955
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10572": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36931,
        36955
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10573": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36957,
        36958
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x6"
    },
    "10575": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36960,
        36961
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "10577": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36922,
        36930
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3F74"
    },
    "10580": {
      "fn": "BuyTheDipNFT.tokenURI",
      "jump": "i",
      "offset": [
        36922,
        36962
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10581": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36922,
        36962
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10582": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        37170,
        37187
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x295E"
    },
    "10585": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        37179,
        37186
      ],
      "op": "DUP6",
      "path": "20"
    },
    "10586": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        37170,
        37178
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2D64"
    },
    "10589": {
      "fn": "BuyTheDipNFT.tokenURI",
      "jump": "i",
      "offset": [
        37170,
        37187
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10590": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        37170,
        37187
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10591": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        37885,
        37912
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2967"
    },
    "10594": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        37902,
        37910
      ],
      "op": "DUP15",
      "path": "20"
    },
    "10595": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        37885,
        37893
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2D64"
    },
    "10598": {
      "fn": "BuyTheDipNFT.tokenURI",
      "jump": "i",
      "offset": [
        37885,
        37912
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10599": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        37885,
        37912
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10600": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38176,
        38185
      ],
      "op": "DUP6",
      "path": "20"
    },
    "10601": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "10603": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10604": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10606": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "ADD",
      "path": "20"
    },
    "10607": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10608": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP7",
      "path": "20"
    },
    "10609": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10610": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10611": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10612": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10614": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "ADD",
      "path": "20"
    },
    "10615": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10616": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10617": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10618": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10619": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10620": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10622": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10623": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "LT",
      "path": "20"
    },
    "10624": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x299A"
    },
    "10627": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "10628": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10629": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10630": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10631": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10632": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10634": {
      "op": "NOT"
    },
    "10635": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10636": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "10637": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "ADD",
      "path": "20"
    },
    "10638": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10639": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10641": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10642": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10643": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "ADD",
      "path": "20"
    },
    "10644": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10645": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "ADD",
      "path": "20"
    },
    "10646": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x297B"
    },
    "10649": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10650": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10651": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "10653": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10654": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10656": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SUB",
      "path": "20"
    },
    "10657": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "10660": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "EXP",
      "path": "20"
    },
    "10661": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SUB",
      "path": "20"
    },
    "10662": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10663": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "NOT",
      "path": "20"
    },
    "10664": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10665": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10666": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "AND",
      "path": "20"
    },
    "10667": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10668": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP5",
      "path": "20"
    },
    "10669": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10670": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "AND",
      "path": "20"
    },
    "10671": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10672": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10673": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "OR",
      "path": "20"
    },
    "10674": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP6",
      "path": "20"
    },
    "10675": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10676": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "POP",
      "path": "20"
    },
    "10677": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "POP",
      "path": "20"
    },
    "10678": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "POP",
      "path": "20"
    },
    "10679": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "POP",
      "path": "20"
    },
    "10680": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "POP",
      "path": "20"
    },
    "10681": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "POP",
      "path": "20"
    },
    "10682": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10683": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "POP",
      "path": "20"
    },
    "10684": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "ADD",
      "path": "20"
    },
    "10685": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10686": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x525E"
    },
    "10689": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3C"
    },
    "10691": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10692": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "CODECOPY",
      "path": "20"
    },
    "10693": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3C"
    },
    "10695": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "ADD",
      "path": "20"
    },
    "10696": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP6",
      "path": "20"
    },
    "10697": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10698": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10699": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10700": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10702": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "ADD",
      "path": "20"
    },
    "10703": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10704": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10705": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10706": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10707": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10708": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10710": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10711": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "LT",
      "path": "20"
    },
    "10712": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x29F2"
    },
    "10715": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "10716": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10717": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10718": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10719": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10720": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10722": {
      "op": "NOT"
    },
    "10723": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10724": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "10725": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "ADD",
      "path": "20"
    },
    "10726": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10727": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10729": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10730": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10731": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "ADD",
      "path": "20"
    },
    "10732": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10733": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "ADD",
      "path": "20"
    },
    "10734": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x29D3"
    },
    "10737": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10738": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10739": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10740": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10741": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10742": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10744": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "10745": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10746": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "10747": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SUB",
      "path": "20"
    },
    "10748": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "10751": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "EXP",
      "path": "20"
    },
    "10752": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10754": {
      "op": "NOT"
    },
    "10755": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "ADD",
      "path": "20"
    },
    "10756": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10757": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "NOT",
      "path": "20"
    },
    "10758": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10759": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10760": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "AND",
      "path": "20"
    },
    "10761": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "10762": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "AND",
      "path": "20"
    },
    "10763": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10764": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10765": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10766": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "OR",
      "path": "20"
    },
    "10767": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10768": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10769": {
      "op": "PUSH12",
      "value": "0x202533432F74657874253345"
    },
    "10782": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10784": {
      "op": "SHL"
    },
    "10785": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "10786": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "ADD",
      "path": "20"
    },
    "10787": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10788": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10789": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10790": {
      "op": "POP"
    },
    "10791": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC"
    },
    "10793": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "ADD",
      "path": "20"
    },
    "10794": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4A"
    },
    "10796": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x59B4"
    },
    "10799": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10800": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "CODECOPY",
      "path": "20"
    },
    "10801": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4A"
    },
    "10803": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "ADD",
      "path": "20"
    },
    "10804": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3B"
    },
    "10806": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5848"
    },
    "10809": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10810": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "CODECOPY",
      "path": "20"
    },
    "10811": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3B"
    },
    "10813": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "ADD",
      "path": "20"
    },
    "10814": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP5",
      "path": "20"
    },
    "10815": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10816": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10817": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10818": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10820": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "ADD",
      "path": "20"
    },
    "10821": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10822": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10823": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10824": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10825": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10826": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10828": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10829": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "LT",
      "path": "20"
    },
    "10830": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2A68"
    },
    "10833": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "10834": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10835": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10836": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10837": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10838": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10840": {
      "op": "NOT"
    },
    "10841": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10842": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "10843": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "ADD",
      "path": "20"
    },
    "10844": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10845": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10847": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10848": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10849": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "ADD",
      "path": "20"
    },
    "10850": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10851": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "ADD",
      "path": "20"
    },
    "10852": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2A49"
    },
    "10855": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10856": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10857": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10858": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10859": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10860": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10862": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "10863": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10864": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "10865": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SUB",
      "path": "20"
    },
    "10866": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "10869": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "EXP",
      "path": "20"
    },
    "10870": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10872": {
      "op": "NOT"
    },
    "10873": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "ADD",
      "path": "20"
    },
    "10874": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10875": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "NOT",
      "path": "20"
    },
    "10876": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10877": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10878": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "AND",
      "path": "20"
    },
    "10879": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "10880": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "AND",
      "path": "20"
    },
    "10881": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10882": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10883": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10884": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "OR",
      "path": "20"
    },
    "10885": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10886": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10887": {
      "op": "PUSH11",
      "value": "0x2533432F74657874253345"
    },
    "10899": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "10901": {
      "op": "SHL"
    },
    "10902": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "10903": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "ADD",
      "path": "20"
    },
    "10904": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10905": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10906": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10907": {
      "op": "POP"
    },
    "10908": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "10910": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "ADD",
      "path": "20"
    },
    "10911": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "10913": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x51FE"
    },
    "10916": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10917": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "CODECOPY",
      "path": "20"
    },
    "10918": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "10920": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "ADD",
      "path": "20"
    },
    "10921": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10922": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10923": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10924": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10925": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10927": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "ADD",
      "path": "20"
    },
    "10928": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10929": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10930": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10931": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10932": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10933": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10935": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP4",
      "path": "20"
    },
    "10936": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "LT",
      "path": "20"
    },
    "10937": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2AD3"
    },
    "10940": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "10941": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10942": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10943": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10944": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10945": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10947": {
      "op": "NOT"
    },
    "10948": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10949": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "10950": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "ADD",
      "path": "20"
    },
    "10951": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10952": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10954": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10955": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP3",
      "path": "20"
    },
    "10956": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "ADD",
      "path": "20"
    },
    "10957": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10958": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "ADD",
      "path": "20"
    },
    "10959": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2AB4"
    },
    "10962": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "JUMP",
      "path": "20"
    },
    "10963": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "10964": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10965": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP2",
      "path": "20"
    },
    "10966": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "10967": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "10969": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "10970": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10971": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "10972": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SUB",
      "path": "20"
    },
    "10973": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "10976": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "EXP",
      "path": "20"
    },
    "10977": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10979": {
      "op": "NOT"
    },
    "10980": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "ADD",
      "path": "20"
    },
    "10981": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP1",
      "path": "20"
    },
    "10982": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "NOT",
      "path": "20"
    },
    "10983": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10984": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10985": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "AND",
      "path": "20"
    },
    "10986": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "10987": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "AND",
      "path": "20"
    },
    "10988": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10989": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10990": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "10991": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "OR",
      "path": "20"
    },
    "10992": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "10993": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "10994": {
      "op": "PUSH11",
      "value": "0x2533432F74657874253345"
    },
    "11006": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "11008": {
      "op": "SHL"
    },
    "11009": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "11010": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "ADD",
      "path": "20"
    },
    "11011": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "11012": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP3",
      "path": "20"
    },
    "11013": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "11014": {
      "op": "POP"
    },
    "11015": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "11017": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "ADD",
      "path": "20"
    },
    "11018": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x76"
    },
    "11020": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x5B58"
    },
    "11023": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP3",
      "path": "20"
    },
    "11024": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "CODECOPY",
      "path": "20"
    },
    "11025": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x76"
    },
    "11027": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "ADD",
      "path": "20"
    },
    "11028": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP3",
      "path": "20"
    },
    "11029": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP1",
      "path": "20"
    },
    "11030": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "11031": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11032": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "11034": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "ADD",
      "path": "20"
    },
    "11035": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11036": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP1",
      "path": "20"
    },
    "11037": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP4",
      "path": "20"
    },
    "11038": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP4",
      "path": "20"
    },
    "11039": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "11040": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "11042": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP4",
      "path": "20"
    },
    "11043": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "LT",
      "path": "20"
    },
    "11044": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2B3E"
    },
    "11047": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "11048": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP1",
      "path": "20"
    },
    "11049": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "11050": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP3",
      "path": "20"
    },
    "11051": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "11052": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11054": {
      "op": "NOT"
    },
    "11055": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11056": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "11057": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "ADD",
      "path": "20"
    },
    "11058": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "11059": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "11061": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "11062": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP3",
      "path": "20"
    },
    "11063": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "ADD",
      "path": "20"
    },
    "11064": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "11065": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "ADD",
      "path": "20"
    },
    "11066": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2B1F"
    },
    "11069": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "JUMP",
      "path": "20"
    },
    "11070": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "11071": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "11072": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP2",
      "path": "20"
    },
    "11073": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "11074": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "11076": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "11077": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11078": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "11079": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SUB",
      "path": "20"
    },
    "11080": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "11083": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "EXP",
      "path": "20"
    },
    "11084": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11086": {
      "op": "NOT"
    },
    "11087": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "ADD",
      "path": "20"
    },
    "11088": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP1",
      "path": "20"
    },
    "11089": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "NOT",
      "path": "20"
    },
    "11090": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11091": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "11092": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "AND",
      "path": "20"
    },
    "11093": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "11094": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "AND",
      "path": "20"
    },
    "11095": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "11096": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11097": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "11098": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "OR",
      "path": "20"
    },
    "11099": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11100": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "11101": {
      "op": "PUSH12",
      "value": "0x2AB739BAB83837B93A32B217"
    },
    "11114": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "11116": {
      "op": "SHL"
    },
    "11117": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "11118": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "ADD",
      "path": "20"
    },
    "11119": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "11120": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP3",
      "path": "20"
    },
    "11121": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "11122": {
      "op": "POP"
    },
    "11123": {
      "op": "PUSH10",
      "value": "0x2533432F737667253345"
    },
    "11134": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "11136": {
      "op": "SHL"
    },
    "11137": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xC"
    },
    "11139": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP3",
      "path": "20"
    },
    "11140": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "ADD",
      "path": "20"
    },
    "11141": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "11142": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "11144": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP1",
      "path": "20"
    },
    "11145": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "11146": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP1",
      "path": "20"
    },
    "11147": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP4",
      "path": "20"
    },
    "11148": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SUB",
      "path": "20"
    },
    "11149": {
      "op": "PUSH1",
      "value": "0x9"
    },
    "11151": {
      "op": "NOT"
    },
    "11152": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "ADD",
      "path": "20"
    },
    "11153": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "DUP2",
      "path": "20"
    },
    "11154": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "11155": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x16"
    },
    "11157": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11158": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "11159": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "ADD",
      "path": "20"
    },
    "11160": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11161": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "11162": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        36676,
        38282
      ],
      "op": "SWAP7",
      "path": "20"
    },
    "11163": {
      "op": "POP"
    },
    "11164": {
      "op": "POP"
    },
    "11165": {
      "op": "POP"
    },
    "11166": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38508,
        38509
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "11168": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38496,
        38509
      ],
      "op": "DUP13",
      "path": "20"
    },
    "11169": {
      "branch": 243,
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38496,
        38509
      ],
      "op": "LT",
      "path": "20"
    },
    "11170": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38474,
        38634
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "11171": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38474,
        38634
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "11172": {
      "op": "POP"
    },
    "11173": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38474,
        38634
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2BCE"
    },
    "11176": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38474,
        38634
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "11177": {
      "op": "POP"
    },
    "11178": {
      "op": "POP"
    },
    "11179": {
      "op": "POP"
    },
    "11180": {
      "branch": 243,
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38474,
        38634
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "11181": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38531,
        38575
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 95,
      "value": "0x2BBE"
    },
    "11184": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38546,
        38554
      ],
      "op": "DUP12",
      "path": "20"
    },
    "11185": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38556,
        38574
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2BB9"
    },
    "11188": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38570,
        38573
      ],
      "op": "DUP4",
      "path": "20"
    },
    "11189": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38556,
        38569
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x163F"
    },
    "11192": {
      "fn": "BuyTheDipNFT.tokenURI",
      "jump": "i",
      "offset": [
        38556,
        38574
      ],
      "op": "JUMP",
      "path": "20"
    },
    "11193": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38556,
        38574
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "11194": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38531,
        38545
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xE4E"
    },
    "11197": {
      "fn": "BuyTheDipNFT.tokenURI",
      "jump": "i",
      "offset": [
        38531,
        38575
      ],
      "op": "JUMP",
      "path": "20"
    },
    "11198": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38531,
        38575
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "11199": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38524,
        38575
      ],
      "op": "SWAP10",
      "path": "20"
    },
    "11200": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38524,
        38575
      ],
      "op": "POP",
      "path": "20"
    },
    "11201": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38524,
        38575
      ],
      "op": "POP",
      "path": "20"
    },
    "11202": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38524,
        38575
      ],
      "op": "POP",
      "path": "20"
    },
    "11203": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38524,
        38575
      ],
      "op": "POP",
      "path": "20"
    },
    "11204": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38524,
        38575
      ],
      "op": "POP",
      "path": "20"
    },
    "11205": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38524,
        38575
      ],
      "op": "POP",
      "path": "20"
    },
    "11206": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38524,
        38575
      ],
      "op": "POP",
      "path": "20"
    },
    "11207": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38524,
        38575
      ],
      "op": "POP",
      "path": "20"
    },
    "11208": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38524,
        38575
      ],
      "op": "POP",
      "path": "20"
    },
    "11209": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38524,
        38575
      ],
      "op": "POP",
      "path": "20"
    },
    "11210": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38524,
        38575
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xE49"
    },
    "11213": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38524,
        38575
      ],
      "op": "JUMP",
      "path": "20"
    },
    "11214": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38474,
        38634
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "11215": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38614,
        38623
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 96,
      "value": "0x40"
    },
    "11217": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38614,
        38623
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "11218": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38614,
        38623
      ],
      "op": "DUP1",
      "path": "20"
    },
    "11219": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38614,
        38623
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "11221": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38614,
        38623
      ],
      "op": "ADD",
      "path": "20"
    },
    "11222": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38614,
        38623
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "11224": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38614,
        38623
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "11225": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38614,
        38623
      ],
      "op": "DUP1",
      "path": "20"
    },
    "11226": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38614,
        38623
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "11228": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38614,
        38623
      ],
      "op": "DUP2",
      "path": "20"
    },
    "11229": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38614,
        38623
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "11230": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38614,
        38623
      ],
      "op": "POP",
      "path": "20"
    },
    "11231": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38614,
        38623
      ],
      "op": "SWAP10",
      "path": "20"
    },
    "11232": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38614,
        38623
      ],
      "op": "POP",
      "path": "20"
    },
    "11233": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38614,
        38623
      ],
      "op": "POP",
      "path": "20"
    },
    "11234": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38614,
        38623
      ],
      "op": "POP",
      "path": "20"
    },
    "11235": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38614,
        38623
      ],
      "op": "POP",
      "path": "20"
    },
    "11236": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38614,
        38623
      ],
      "op": "POP",
      "path": "20"
    },
    "11237": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38614,
        38623
      ],
      "op": "POP",
      "path": "20"
    },
    "11238": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38614,
        38623
      ],
      "op": "POP",
      "path": "20"
    },
    "11239": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38614,
        38623
      ],
      "op": "POP",
      "path": "20"
    },
    "11240": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38614,
        38623
      ],
      "op": "POP",
      "path": "20"
    },
    "11241": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38614,
        38623
      ],
      "op": "POP",
      "path": "20"
    },
    "11242": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38614,
        38623
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xE49"
    },
    "11245": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        38614,
        38623
      ],
      "op": "JUMP",
      "path": "20"
    },
    "11246": {
      "offset": [
        16526,
        16553
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "11247": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        16526,
        16553
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "11249": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        16526,
        16553
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "11250": {
      "fn": "BuyTheDipNFT.tokenURI",
      "offset": [
        16526,
        16553
      ],
      "op": "DUP2",
      "path": "20"
    },
    "11251": {
      "fn": "BuyTheDipNFT.tokenURI",
      "jump": "o",
      "offset": [
        16526,
        16553
      ],
      "op": "JUMP",
      "path": "20"
    },
    "11252": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7862,
        8024
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "11253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11257": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11259": {
      "op": "SHL"
    },
    "11260": {
      "op": "SUB"
    },
    "11261": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7982,
        8007
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 97
    },
    "11262": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7982,
        8007
      ],
      "op": "DUP3",
      "path": "4"
    },
    "11263": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7982,
        8007
      ],
      "op": "AND",
      "path": "4"
    },
    "11264": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7959,
        7963
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "11266": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7982,
        8007
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "11267": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7982,
        8007
      ],
      "op": "DUP2",
      "path": "4"
    },
    "11268": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7982,
        8007
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "11269": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7982,
        8000
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x5"
    },
    "11271": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7982,
        8007
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "11273": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7982,
        8007
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "11274": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7982,
        8007
      ],
      "op": "DUP2",
      "path": "4"
    },
    "11275": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7982,
        8007
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "11276": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7982,
        8007
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "11278": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7982,
        8007
      ],
      "op": "DUP1",
      "path": "4"
    },
    "11279": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7982,
        8007
      ],
      "op": "DUP4",
      "path": "4"
    },
    "11280": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7982,
        8007
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "11281": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7982,
        8017
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "11282": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7982,
        8017
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "11283": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7982,
        8017
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "11284": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7982,
        8017
      ],
      "op": "AND",
      "path": "4"
    },
    "11285": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7982,
        8017
      ],
      "op": "DUP3",
      "path": "4"
    },
    "11286": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7982,
        8017
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "11287": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7982,
        8017
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "11288": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7982,
        8017
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "11289": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7982,
        8017
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "11290": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7982,
        8017
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "11291": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7982,
        8017
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "11292": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7982,
        8017
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "11293": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7982,
        8017
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "11295": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7982,
        8017
      ],
      "op": "AND",
      "path": "4"
    },
    "11296": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7982,
        8017
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "11297": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "o",
      "offset": [
        7862,
        8024
      ],
      "op": "JUMP",
      "path": "4"
    },
    "11298": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11299": {
      "offset": [
        1308,
        1320
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C2A"
    },
    "11302": {
      "offset": [
        1308,
        1318
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x372C"
    },
    "11305": {
      "jump": "i",
      "offset": [
        1308,
        1320
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11306": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1308,
        1320
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11311": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11313": {
      "op": "SHL"
    },
    "11314": {
      "op": "SUB"
    },
    "11315": {
      "offset": [
        1297,
        1320
      ],
      "op": "AND",
      "path": "0"
    },
    "11316": {
      "offset": [
        1297,
        1304
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C3B"
    },
    "11319": {
      "offset": [
        1297,
        1302
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2235"
    },
    "11322": {
      "jump": "i",
      "offset": [
        1297,
        1304
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11323": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1297,
        1304
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11328": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11330": {
      "op": "SHL"
    },
    "11331": {
      "op": "SUB"
    },
    "11332": {
      "offset": [
        1297,
        1320
      ],
      "op": "AND",
      "path": "0"
    },
    "11333": {
      "branch": 283,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1297,
        1320
      ],
      "op": "EQ",
      "path": "0"
    },
    "11334": {
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C96"
    },
    "11337": {
      "branch": 283,
      "offset": [
        1289,
        1357
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11338": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11340": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11341": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11342": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11346": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11348": {
      "op": "SHL"
    },
    "11349": {
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11350": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11351": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11353": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "11355": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11356": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "11357": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11358": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11359": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11360": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "11362": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11363": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "11364": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11365": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "11398": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "11400": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11401": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "11402": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11403": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11404": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11405": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11406": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11407": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11408": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SUB",
      "path": "0"
    },
    "11409": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "11411": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "ADD",
      "path": "0"
    },
    "11412": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11413": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "REVERT",
      "path": "0"
    },
    "11414": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1289,
        1357
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11419": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11421": {
      "op": "SHL"
    },
    "11422": {
      "op": "SUB"
    },
    "11423": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2099,
        2121
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 98
    },
    "11424": {
      "branch": 284,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2099,
        2121
      ],
      "op": "AND",
      "path": "0"
    },
    "11425": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CDB"
    },
    "11428": {
      "branch": 284,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11429": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11431": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11432": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "11436": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "11438": {
      "op": "SHL"
    },
    "11439": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11440": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11441": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "11443": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "ADD",
      "path": "0"
    },
    "11444": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11445": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11446": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11448": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "ADD",
      "path": "0"
    },
    "11449": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11450": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11451": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "SUB",
      "path": "0"
    },
    "11452": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP3",
      "path": "0"
    },
    "11453": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11454": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x26"
    },
    "11456": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP2",
      "path": "0"
    },
    "11457": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "11458": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "11460": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "ADD",
      "path": "0"
    },
    "11461": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11462": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51D8"
    },
    "11465": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x26"
    },
    "11467": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11468": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "CODECOPY",
      "path": "0"
    },
    "11469": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11471": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "ADD",
      "path": "0"
    },
    "11472": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11473": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "POP",
      "path": "0"
    },
    "11474": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "POP",
      "path": "0"
    },
    "11475": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11477": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11478": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11479": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11480": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "SUB",
      "path": "0"
    },
    "11481": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11482": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "REVERT",
      "path": "0"
    },
    "11483": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2091,
        2164
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "11484": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2200,
        2206
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 99,
      "value": "0xA"
    },
    "11486": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2200,
        2206
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11487": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "11489": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "11490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11494": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11496": {
      "op": "SHL"
    },
    "11497": {
      "op": "SUB"
    },
    "11498": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11499": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "DUP5",
      "path": "0"
    },
    "11500": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "AND",
      "path": "0"
    },
    "11501": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "11502": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2200,
        2206
      ],
      "op": "AND",
      "path": "0"
    },
    "11503": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2200,
        2206
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11504": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "11537": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11538": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2200,
        2206
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "11540": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2200,
        2206
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11541": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2179,
        2217
      ],
      "op": "LOG3",
      "path": "0"
    },
    "11542": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2233
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 100,
      "value": "0xA"
    },
    "11544": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "DUP1",
      "path": "0"
    },
    "11545": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "11546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11550": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11552": {
      "op": "SHL"
    },
    "11553": {
      "op": "SUB"
    },
    "11554": {
      "op": "NOT"
    },
    "11555": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "AND",
      "path": "0"
    },
    "11556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11560": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "11562": {
      "op": "SHL"
    },
    "11563": {
      "op": "SUB"
    },
    "11564": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "11565": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11566": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "11567": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "AND",
      "path": "0"
    },
    "11568": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11569": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11570": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "11571": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "OR",
      "path": "0"
    },
    "11572": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "11573": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2227,
        2244
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "11574": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        2011,
        2251
      ],
      "op": "JUMP",
      "path": "0"
    },
    "11575": {
      "offset": [
        16927,
        16982
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "11576": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16927,
        16982
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x10"
    },
    "11578": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16927,
        16982
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "11580": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16927,
        16982
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "11581": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16927,
        16982
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "11583": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16927,
        16982
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11584": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16927,
        16982
      ],
      "op": "DUP2",
      "path": "20"
    },
    "11585": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16927,
        16982
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "11586": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16927,
        16982
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "11588": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16927,
        16982
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11589": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16927,
        16982
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "11590": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16927,
        16982
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "11591": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16927,
        16982
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "11593": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16927,
        16982
      ],
      "op": "AND",
      "path": "20"
    },
    "11594": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16927,
        16982
      ],
      "op": "DUP2",
      "path": "20"
    },
    "11595": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        16927,
        16982
      ],
      "op": "JUMP",
      "path": "20"
    },
    "11596": {
      "offset": [
        17137,
        17176
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "11597": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        17137,
        17176
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x12"
    },
    "11599": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        17137,
        17176
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "11600": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        17137,
        17176
      ],
      "op": "DUP2",
      "path": "20"
    },
    "11601": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        17137,
        17176
      ],
      "op": "JUMP",
      "path": "20"
    },
    "11602": {
      "offset": [
        16839,
        16893
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "11603": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16839,
        16893
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xF"
    },
    "11605": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16839,
        16893
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "11607": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16839,
        16893
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "11608": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16839,
        16893
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "11610": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16839,
        16893
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11611": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16839,
        16893
      ],
      "op": "DUP2",
      "path": "20"
    },
    "11612": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16839,
        16893
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "11613": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16839,
        16893
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "11615": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16839,
        16893
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11616": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16839,
        16893
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "11617": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16839,
        16893
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "11618": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        16839,
        16893
      ],
      "op": "DUP2",
      "path": "20"
    },
    "11619": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        16839,
        16893
      ],
      "op": "JUMP",
      "path": "20"
    },
    "11620": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42567,
        43034
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "11621": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42617,
        42644
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "11623": {
      "branch": 244,
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42660,
        42667
      ],
      "op": "DUP2",
      "path": "20"
    },
    "11624": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42656,
        42704
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2D89"
    },
    "11627": {
      "branch": 244,
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42656,
        42704
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "11628": {
      "op": "POP"
    },
    "11629": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42683,
        42693
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 101,
      "value": "0x40"
    },
    "11631": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42683,
        42693
      ],
      "op": "DUP1",
      "path": "20"
    },
    "11632": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42683,
        42693
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "11633": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42683,
        42693
      ],
      "op": "DUP1",
      "path": "20"
    },
    "11634": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42683,
        42693
      ],
      "op": "DUP3",
      "path": "20"
    },
    "11635": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42683,
        42693
      ],
      "op": "ADD",
      "path": "20"
    },
    "11636": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42683,
        42693
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11637": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42683,
        42693
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "11638": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42683,
        42693
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "11639": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42683,
        42693
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "11641": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42683,
        42693
      ],
      "op": "DUP2",
      "path": "20"
    },
    "11642": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42683,
        42693
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "11643": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "11645": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "11647": {
      "op": "SHL"
    },
    "11648": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42683,
        42693
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "11650": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42683,
        42693
      ],
      "op": "DUP3",
      "path": "20"
    },
    "11651": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42683,
        42693
      ],
      "op": "ADD",
      "path": "20"
    },
    "11652": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42683,
        42693
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "11653": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42683,
        42693
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0xE49"
    },
    "11656": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42683,
        42693
      ],
      "op": "JUMP",
      "path": "20"
    },
    "11657": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42656,
        42704
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "11658": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42722,
        42724
      ],
      "op": "DUP2",
      "path": "20"
    },
    "11659": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42713,
        42719
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "11661": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42752,
        42818
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "11662": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42759,
        42765
      ],
      "op": "DUP2",
      "path": "20"
    },
    "11663": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42759,
        42765
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "11664": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42752,
        42818
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2DA1"
    },
    "11667": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42752,
        42818
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "11668": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42781,
        42786
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 102,
      "value": "0x1"
    },
    "11670": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42781,
        42786
      ],
      "op": "ADD",
      "path": "20"
    },
    "11671": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42805,
        42807
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 103,
      "value": "0xA"
    },
    "11673": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42800,
        42807
      ],
      "op": "DUP3",
      "path": "20"
    },
    "11674": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42800,
        42807
      ],
      "op": "DIV",
      "path": "20"
    },
    "11675": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42800,
        42807
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "11676": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42800,
        42807
      ],
      "op": "POP",
      "path": "20"
    },
    "11677": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42752,
        42818
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2D8D"
    },
    "11680": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42752,
        42818
      ],
      "op": "JUMP",
      "path": "20"
    },
    "11681": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42752,
        42818
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "11682": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42827,
        42844
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "11684": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42857,
        42860
      ],
      "op": "DUP2",
      "path": "20"
    },
    "11685": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "PUSH8",
      "path": "20",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11694": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "DUP2",
      "path": "20"
    },
    "11695": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "GT",
      "path": "20"
    },
    "11696": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "DUP1",
      "path": "20"
    },
    "11697": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "11698": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2DBA"
    },
    "11701": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "11702": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "11704": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "DUP1",
      "path": "20"
    },
    "11705": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "REVERT",
      "path": "20"
    },
    "11706": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "11707": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "POP",
      "path": "20"
    },
    "11708": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "11710": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "11711": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11712": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "DUP1",
      "path": "20"
    },
    "11713": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "DUP3",
      "path": "20"
    },
    "11714": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "11715": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "DUP1",
      "path": "20"
    },
    "11716": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "11718": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "ADD",
      "path": "20"
    },
    "11719": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "11721": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "NOT",
      "path": "20"
    },
    "11722": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "AND",
      "path": "20"
    },
    "11723": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "11725": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "ADD",
      "path": "20"
    },
    "11726": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "DUP3",
      "path": "20"
    },
    "11727": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "ADD",
      "path": "20"
    },
    "11728": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "11730": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "11731": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "DUP1",
      "path": "20"
    },
    "11732": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "11733": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2DE5"
    },
    "11736": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "11737": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "11739": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "DUP3",
      "path": "20"
    },
    "11740": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "ADD",
      "path": "20"
    },
    "11741": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "DUP2",
      "path": "20"
    },
    "11742": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "DUP1",
      "path": "20"
    },
    "11743": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "11744": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "DUP4",
      "path": "20"
    },
    "11745": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "CALLDATACOPY",
      "path": "20"
    },
    "11746": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "ADD",
      "path": "20"
    },
    "11747": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11748": {
      "op": "POP"
    },
    "11749": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42847,
        42861
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "11750": {
      "op": "POP"
    },
    "11751": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42827,
        42861
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11752": {
      "op": "POP"
    },
    "11753": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11755": {
      "op": "NOT"
    },
    "11756": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42880,
        42887
      ],
      "op": "DUP3",
      "path": "20"
    },
    "11757": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42880,
        42887
      ],
      "op": "ADD",
      "path": "20"
    },
    "11758": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42897,
        42999
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "11759": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42904,
        42911
      ],
      "op": "DUP6",
      "path": "20"
    },
    "11760": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42904,
        42911
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "11761": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42897,
        42999
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2E33"
    },
    "11764": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42897,
        42999
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "11765": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42962,
        42964
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 104,
      "value": "0xA"
    },
    "11767": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42957,
        42959
      ],
      "op": "DUP7",
      "path": "20"
    },
    "11768": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42957,
        42964
      ],
      "op": "MOD",
      "path": "20"
    },
    "11769": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42952,
        42954
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x30"
    },
    "11771": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42952,
        42964
      ],
      "op": "ADD",
      "path": "20"
    },
    "11772": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42939,
        42966
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xF8"
    },
    "11774": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42939,
        42966
      ],
      "op": "SHL",
      "path": "20"
    },
    "11775": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42927,
        42931
      ],
      "op": "DUP3",
      "path": "20"
    },
    "11776": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42932,
        42935
      ],
      "op": "DUP3",
      "path": "20"
    },
    "11777": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42932,
        42935
      ],
      "op": "DUP1",
      "path": "20"
    },
    "11778": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42932,
        42935
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "11780": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42932,
        42935
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11781": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42932,
        42935
      ],
      "op": "SUB",
      "path": "20"
    },
    "11782": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42932,
        42935
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "11783": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42932,
        42935
      ],
      "op": "POP",
      "path": "20"
    },
    "11784": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42927,
        42936
      ],
      "op": "DUP2",
      "path": "20"
    },
    "11785": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42927,
        42936
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "11786": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42927,
        42936
      ],
      "op": "DUP2",
      "path": "20"
    },
    "11787": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42927,
        42936
      ],
      "op": "LT",
      "path": "20"
    },
    "11788": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42927,
        42936
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2E11"
    },
    "11791": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42927,
        42936
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "11792": {
      "dev": "Index out of range",
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42927,
        42936
      ],
      "op": "INVALID",
      "path": "20"
    },
    "11793": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42927,
        42936
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "11794": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42927,
        42936
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "11796": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42927,
        42936
      ],
      "op": "ADD",
      "path": "20"
    },
    "11797": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42927,
        42936
      ],
      "op": "ADD",
      "path": "20"
    },
    "11798": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42927,
        42966
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11803": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "11805": {
      "op": "SHL"
    },
    "11806": {
      "op": "SUB"
    },
    "11807": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42927,
        42966
      ],
      "op": "NOT",
      "path": "20"
    },
    "11808": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42927,
        42966
      ],
      "op": "AND",
      "path": "20"
    },
    "11809": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42927,
        42966
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11810": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42927,
        42966
      ],
      "op": "DUP2",
      "path": "20"
    },
    "11811": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42927,
        42966
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "11813": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42927,
        42966
      ],
      "op": "BYTE",
      "path": "20"
    },
    "11814": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42927,
        42966
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "11815": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42927,
        42966
      ],
      "op": "MSTORE8",
      "path": "20"
    },
    "11816": {
      "op": "POP"
    },
    "11817": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42986,
        42988
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 105,
      "value": "0xA"
    },
    "11819": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42980,
        42988
      ],
      "op": "DUP7",
      "path": "20"
    },
    "11820": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42980,
        42988
      ],
      "op": "DIV",
      "path": "20"
    },
    "11821": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42980,
        42988
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "11822": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42980,
        42988
      ],
      "op": "POP",
      "path": "20"
    },
    "11823": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42897,
        42999
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2DEE"
    },
    "11826": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42897,
        42999
      ],
      "op": "JUMP",
      "path": "20"
    },
    "11827": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42897,
        42999
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "11828": {
      "op": "POP"
    },
    "11829": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        43022,
        43026
      ],
      "op": "SWAP5",
      "path": "20",
      "statement": 106
    },
    "11830": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42567,
        43034
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "11831": {
      "op": "POP"
    },
    "11832": {
      "op": "POP"
    },
    "11833": {
      "op": "POP"
    },
    "11834": {
      "op": "POP"
    },
    "11835": {
      "fn": "BuyTheDipNFT.uint2str",
      "jump": "o",
      "offset": [
        42567,
        43034
      ],
      "op": "JUMP",
      "path": "20"
    },
    "11836": {
      "fn": "Base64.encode",
      "offset": [
        279,
        1334
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "11837": {
      "fn": "Base64.encode",
      "offset": [
        338,
        351
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x60"
    },
    "11839": {
      "fn": "Base64.encode",
      "offset": [
        366,
        382
      ],
      "op": "DUP1",
      "path": "21"
    },
    "11840": {
      "fn": "Base64.encode",
      "offset": [
        391,
        395
      ],
      "op": "DUP3",
      "path": "21"
    },
    "11841": {
      "fn": "Base64.encode",
      "offset": [
        366,
        396
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "11842": {
      "fn": "Base64.encode",
      "offset": [
        366,
        396
      ],
      "op": "POP",
      "path": "21"
    },
    "11843": {
      "fn": "Base64.encode",
      "offset": [
        407,
        418
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "11845": {
      "fn": "Base64.encode",
      "offset": [
        434,
        435
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x3"
    },
    "11847": {
      "fn": "Base64.encode",
      "offset": [
        421,
        424
      ],
      "op": "DUP3",
      "path": "21"
    },
    "11848": {
      "fn": "Base64.encode",
      "offset": [
        421,
        431
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "11849": {
      "fn": "Base64.encode",
      "offset": [
        421,
        435
      ],
      "op": "DUP2",
      "path": "21"
    },
    "11850": {
      "fn": "Base64.encode",
      "offset": [
        421,
        435
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2E4F"
    },
    "11853": {
      "fn": "Base64.encode",
      "offset": [
        421,
        435
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "11854": {
      "dev": "Modulus by zero",
      "fn": "Base64.encode",
      "offset": [
        421,
        435
      ],
      "op": "INVALID",
      "path": "21"
    },
    "11855": {
      "fn": "Base64.encode",
      "offset": [
        421,
        435
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "11856": {
      "fn": "Base64.encode",
      "offset": [
        421,
        435
      ],
      "op": "MOD",
      "path": "21"
    },
    "11857": {
      "fn": "Base64.encode",
      "offset": [
        421,
        435
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "11858": {
      "op": "POP"
    },
    "11859": {
      "fn": "Base64.encode",
      "offset": [
        448,
        466
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "11861": {
      "fn": "Base64.encode",
      "offset": [
        509,
        510
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x3"
    },
    "11863": {
      "fn": "Base64.encode",
      "offset": [
        498,
        505
      ],
      "op": "DUP3",
      "path": "21"
    },
    "11864": {
      "fn": "Base64.encode",
      "offset": [
        498,
        505
      ],
      "op": "DUP2",
      "path": "21"
    },
    "11865": {
      "fn": "Base64.encode",
      "offset": [
        498,
        505
      ],
      "op": "SUB",
      "path": "21"
    },
    "11866": {
      "fn": "Base64.encode",
      "offset": [
        497,
        510
      ],
      "op": "MOD",
      "path": "21"
    },
    "11867": {
      "fn": "Base64.encode",
      "offset": [
        488,
        489
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x3"
    },
    "11869": {
      "fn": "Base64.encode",
      "offset": [
        470,
        473
      ],
      "op": "DUP5",
      "path": "21"
    },
    "11870": {
      "fn": "Base64.encode",
      "offset": [
        470,
        480
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "11871": {
      "fn": "Base64.encode",
      "offset": [
        483,
        484
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x2"
    },
    "11873": {
      "fn": "Base64.encode",
      "offset": [
        470,
        484
      ],
      "op": "ADD",
      "path": "21"
    },
    "11874": {
      "fn": "Base64.encode",
      "offset": [
        469,
        489
      ],
      "op": "DUP2",
      "path": "21"
    },
    "11875": {
      "fn": "Base64.encode",
      "offset": [
        469,
        489
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2E68"
    },
    "11878": {
      "fn": "Base64.encode",
      "offset": [
        469,
        489
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "11879": {
      "dev": "Division by zero",
      "fn": "Base64.encode",
      "offset": [
        469,
        489
      ],
      "op": "INVALID",
      "path": "21"
    },
    "11880": {
      "fn": "Base64.encode",
      "offset": [
        469,
        489
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "11881": {
      "fn": "Base64.encode",
      "offset": [
        469,
        489
      ],
      "op": "DIV",
      "path": "21"
    },
    "11882": {
      "fn": "Base64.encode",
      "offset": [
        492,
        493
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "11884": {
      "fn": "Base64.encode",
      "offset": [
        469,
        493
      ],
      "op": "MUL",
      "path": "21"
    },
    "11885": {
      "fn": "Base64.encode",
      "offset": [
        469,
        511
      ],
      "op": "SUB",
      "path": "21"
    },
    "11886": {
      "fn": "Base64.encode",
      "offset": [
        448,
        511
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "11887": {
      "fn": "Base64.encode",
      "offset": [
        448,
        511
      ],
      "op": "POP",
      "path": "21"
    },
    "11888": {
      "fn": "Base64.encode",
      "offset": [
        522,
        538
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x60"
    },
    "11890": {
      "fn": "Base64.encode",
      "offset": [
        551,
        561
      ],
      "op": "DUP2",
      "path": "21"
    },
    "11891": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "PUSH8",
      "path": "21",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11900": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "DUP2",
      "path": "21"
    },
    "11901": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "GT",
      "path": "21"
    },
    "11902": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "DUP1",
      "path": "21"
    },
    "11903": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "11904": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2E88"
    },
    "11907": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "11908": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "11910": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "DUP1",
      "path": "21"
    },
    "11911": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "REVERT",
      "path": "21"
    },
    "11912": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "11913": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "POP",
      "path": "21"
    },
    "11914": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "11916": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "11917": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "11918": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "DUP1",
      "path": "21"
    },
    "11919": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "DUP3",
      "path": "21"
    },
    "11920": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "11921": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "DUP1",
      "path": "21"
    },
    "11922": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1F"
    },
    "11924": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "ADD",
      "path": "21"
    },
    "11925": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1F"
    },
    "11927": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "NOT",
      "path": "21"
    },
    "11928": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "AND",
      "path": "21"
    },
    "11929": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "11931": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "ADD",
      "path": "21"
    },
    "11932": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "DUP3",
      "path": "21"
    },
    "11933": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "ADD",
      "path": "21"
    },
    "11934": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "11936": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "11937": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "DUP1",
      "path": "21"
    },
    "11938": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "11939": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2EB3"
    },
    "11942": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "11943": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "11945": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "DUP3",
      "path": "21"
    },
    "11946": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "ADD",
      "path": "21"
    },
    "11947": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "DUP2",
      "path": "21"
    },
    "11948": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "DUP1",
      "path": "21"
    },
    "11949": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "11950": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "DUP4",
      "path": "21"
    },
    "11951": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "CALLDATACOPY",
      "path": "21"
    },
    "11952": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "ADD",
      "path": "21"
    },
    "11953": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "11954": {
      "op": "POP"
    },
    "11955": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "11956": {
      "fn": "Base64.encode",
      "offset": [
        541,
        562
      ],
      "op": "POP",
      "path": "21"
    },
    "11957": {
      "fn": "Base64.encode",
      "offset": [
        522,
        562
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "11958": {
      "fn": "Base64.encode",
      "offset": [
        522,
        562
      ],
      "op": "POP",
      "path": "21"
    },
    "11959": {
      "fn": "Base64.encode",
      "offset": [
        575,
        584
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "11961": {
      "fn": "Base64.encode",
      "offset": [
        599,
        608
      ],
      "op": "DUP1",
      "path": "21"
    },
    "11962": {
      "fn": "Base64.encode",
      "offset": [
        625,
        874
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "11963": {
      "fn": "Base64.encode",
      "offset": [
        641,
        644
      ],
      "op": "DUP6",
      "path": "21"
    },
    "11964": {
      "fn": "Base64.encode",
      "offset": [
        641,
        651
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "11965": {
      "fn": "Base64.encode",
      "offset": [
        632,
        633
      ],
      "op": "DUP3",
      "path": "21"
    },
    "11966": {
      "fn": "Base64.encode",
      "offset": [
        636,
        637
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x3"
    },
    "11968": {
      "fn": "Base64.encode",
      "offset": [
        632,
        637
      ],
      "op": "ADD",
      "path": "21"
    },
    "11969": {
      "fn": "Base64.encode",
      "offset": [
        632,
        651
      ],
      "op": "GT",
      "path": "21"
    },
    "11970": {
      "fn": "Base64.encode",
      "offset": [
        625,
        874
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2FBD"
    },
    "11973": {
      "fn": "Base64.encode",
      "offset": [
        625,
        874
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "11974": {
      "fn": "Base64.encode",
      "offset": [
        717,
        839
      ],
      "op": "PUSH2",
      "path": "21",
      "statement": 107,
      "value": "0x2F21"
    },
    "11977": {
      "fn": "Base64.encode",
      "offset": [
        749,
        752
      ],
      "op": "DUP7",
      "path": "21"
    },
    "11978": {
      "fn": "Base64.encode",
      "offset": [
        753,
        754
      ],
      "op": "DUP4",
      "path": "21"
    },
    "11979": {
      "fn": "Base64.encode",
      "offset": [
        749,
        755
      ],
      "op": "DUP2",
      "path": "21"
    },
    "11980": {
      "fn": "Base64.encode",
      "offset": [
        749,
        755
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "11981": {
      "fn": "Base64.encode",
      "offset": [
        749,
        755
      ],
      "op": "DUP2",
      "path": "21"
    },
    "11982": {
      "fn": "Base64.encode",
      "offset": [
        749,
        755
      ],
      "op": "LT",
      "path": "21"
    },
    "11983": {
      "fn": "Base64.encode",
      "offset": [
        749,
        755
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2ED4"
    },
    "11986": {
      "fn": "Base64.encode",
      "offset": [
        749,
        755
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "11987": {
      "dev": "Index out of range",
      "fn": "Base64.encode",
      "offset": [
        749,
        755
      ],
      "op": "INVALID",
      "path": "21"
    },
    "11988": {
      "fn": "Base64.encode",
      "offset": [
        749,
        755
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "11989": {
      "fn": "Base64.encode",
      "offset": [
        749,
        755
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "11991": {
      "fn": "Base64.encode",
      "offset": [
        749,
        755
      ],
      "op": "ADD",
      "path": "21"
    },
    "11992": {
      "fn": "Base64.encode",
      "offset": [
        749,
        755
      ],
      "op": "ADD",
      "path": "21"
    },
    "11993": {
      "fn": "Base64.encode",
      "offset": [
        749,
        755
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "11994": {
      "fn": "Base64.encode",
      "offset": [
        749,
        755
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xF8"
    },
    "11996": {
      "fn": "Base64.encode",
      "offset": [
        749,
        755
      ],
      "op": "SHR",
      "path": "21"
    },
    "11997": {
      "fn": "Base64.encode",
      "offset": [
        749,
        755
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xF8"
    },
    "11999": {
      "fn": "Base64.encode",
      "offset": [
        749,
        755
      ],
      "op": "SHL",
      "path": "21"
    },
    "12000": {
      "fn": "Base64.encode",
      "offset": [
        743,
        756
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xF8"
    },
    "12002": {
      "fn": "Base64.encode",
      "offset": [
        743,
        756
      ],
      "op": "SHR",
      "path": "21"
    },
    "12003": {
      "fn": "Base64.encode",
      "offset": [
        717,
        839
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xFF"
    },
    "12005": {
      "fn": "Base64.encode",
      "offset": [
        717,
        839
      ],
      "op": "AND",
      "path": "21"
    },
    "12006": {
      "fn": "Base64.encode",
      "offset": [
        781,
        784
      ],
      "op": "DUP8",
      "path": "21"
    },
    "12007": {
      "fn": "Base64.encode",
      "offset": [
        785,
        786
      ],
      "op": "DUP5",
      "path": "21"
    },
    "12008": {
      "fn": "Base64.encode",
      "offset": [
        787,
        788
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1"
    },
    "12010": {
      "fn": "Base64.encode",
      "offset": [
        785,
        788
      ],
      "op": "ADD",
      "path": "21"
    },
    "12011": {
      "fn": "Base64.encode",
      "offset": [
        781,
        789
      ],
      "op": "DUP2",
      "path": "21"
    },
    "12012": {
      "fn": "Base64.encode",
      "offset": [
        781,
        789
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "12013": {
      "fn": "Base64.encode",
      "offset": [
        781,
        789
      ],
      "op": "DUP2",
      "path": "21"
    },
    "12014": {
      "fn": "Base64.encode",
      "offset": [
        781,
        789
      ],
      "op": "LT",
      "path": "21"
    },
    "12015": {
      "fn": "Base64.encode",
      "offset": [
        781,
        789
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2EF4"
    },
    "12018": {
      "fn": "Base64.encode",
      "offset": [
        781,
        789
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "12019": {
      "dev": "Index out of range",
      "fn": "Base64.encode",
      "offset": [
        781,
        789
      ],
      "op": "INVALID",
      "path": "21"
    },
    "12020": {
      "fn": "Base64.encode",
      "offset": [
        781,
        789
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "12021": {
      "fn": "Base64.encode",
      "offset": [
        781,
        789
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "12023": {
      "fn": "Base64.encode",
      "offset": [
        781,
        789
      ],
      "op": "ADD",
      "path": "21"
    },
    "12024": {
      "fn": "Base64.encode",
      "offset": [
        781,
        789
      ],
      "op": "ADD",
      "path": "21"
    },
    "12025": {
      "fn": "Base64.encode",
      "offset": [
        781,
        789
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "12026": {
      "fn": "Base64.encode",
      "offset": [
        781,
        789
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xF8"
    },
    "12028": {
      "fn": "Base64.encode",
      "offset": [
        781,
        789
      ],
      "op": "SHR",
      "path": "21"
    },
    "12029": {
      "fn": "Base64.encode",
      "offset": [
        781,
        789
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xF8"
    },
    "12031": {
      "fn": "Base64.encode",
      "offset": [
        781,
        789
      ],
      "op": "SHL",
      "path": "21"
    },
    "12032": {
      "fn": "Base64.encode",
      "offset": [
        775,
        790
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xF8"
    },
    "12034": {
      "fn": "Base64.encode",
      "offset": [
        775,
        790
      ],
      "op": "SHR",
      "path": "21"
    },
    "12035": {
      "fn": "Base64.encode",
      "offset": [
        717,
        839
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xFF"
    },
    "12037": {
      "fn": "Base64.encode",
      "offset": [
        717,
        839
      ],
      "op": "AND",
      "path": "21"
    },
    "12038": {
      "fn": "Base64.encode",
      "offset": [
        815,
        818
      ],
      "op": "DUP9",
      "path": "21"
    },
    "12039": {
      "fn": "Base64.encode",
      "offset": [
        819,
        820
      ],
      "op": "DUP6",
      "path": "21"
    },
    "12040": {
      "fn": "Base64.encode",
      "offset": [
        821,
        822
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x2"
    },
    "12042": {
      "fn": "Base64.encode",
      "offset": [
        819,
        822
      ],
      "op": "ADD",
      "path": "21"
    },
    "12043": {
      "fn": "Base64.encode",
      "offset": [
        815,
        823
      ],
      "op": "DUP2",
      "path": "21"
    },
    "12044": {
      "fn": "Base64.encode",
      "offset": [
        815,
        823
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "12045": {
      "fn": "Base64.encode",
      "offset": [
        815,
        823
      ],
      "op": "DUP2",
      "path": "21"
    },
    "12046": {
      "fn": "Base64.encode",
      "offset": [
        815,
        823
      ],
      "op": "LT",
      "path": "21"
    },
    "12047": {
      "fn": "Base64.encode",
      "offset": [
        815,
        823
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2F14"
    },
    "12050": {
      "fn": "Base64.encode",
      "offset": [
        815,
        823
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "12051": {
      "dev": "Index out of range",
      "fn": "Base64.encode",
      "offset": [
        815,
        823
      ],
      "op": "INVALID",
      "path": "21"
    },
    "12052": {
      "fn": "Base64.encode",
      "offset": [
        815,
        823
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "12053": {
      "fn": "Base64.encode",
      "offset": [
        815,
        823
      ],
      "op": "ADD",
      "path": "21"
    },
    "12054": {
      "fn": "Base64.encode",
      "offset": [
        815,
        823
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "12056": {
      "fn": "Base64.encode",
      "offset": [
        815,
        823
      ],
      "op": "ADD",
      "path": "21"
    },
    "12057": {
      "fn": "Base64.encode",
      "offset": [
        815,
        823
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "12058": {
      "fn": "Base64.encode",
      "offset": [
        815,
        823
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xF8"
    },
    "12060": {
      "fn": "Base64.encode",
      "offset": [
        815,
        823
      ],
      "op": "SHR",
      "path": "21"
    },
    "12061": {
      "fn": "Base64.encode",
      "offset": [
        717,
        724
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x4137"
    },
    "12064": {
      "fn": "Base64.encode",
      "jump": "i",
      "offset": [
        717,
        839
      ],
      "op": "JUMP",
      "path": "21"
    },
    "12065": {
      "fn": "Base64.encode",
      "offset": [
        717,
        839
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "12066": {
      "fn": "Base64.encode",
      "offset": [
        677,
        680
      ],
      "op": "DUP7",
      "path": "21"
    },
    "12067": {
      "fn": "Base64.encode",
      "offset": [
        681,
        682
      ],
      "op": "DUP6",
      "path": "21"
    },
    "12068": {
      "fn": "Base64.encode",
      "offset": [
        677,
        683
      ],
      "op": "DUP2",
      "path": "21"
    },
    "12069": {
      "fn": "Base64.encode",
      "offset": [
        677,
        683
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "12070": {
      "fn": "Base64.encode",
      "offset": [
        677,
        683
      ],
      "op": "DUP2",
      "path": "21"
    },
    "12071": {
      "fn": "Base64.encode",
      "offset": [
        677,
        683
      ],
      "op": "LT",
      "path": "21"
    },
    "12072": {
      "fn": "Base64.encode",
      "offset": [
        677,
        683
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2F2D"
    },
    "12075": {
      "fn": "Base64.encode",
      "offset": [
        677,
        683
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "12076": {
      "dev": "Index out of range",
      "fn": "Base64.encode",
      "offset": [
        677,
        683
      ],
      "op": "INVALID",
      "path": "21"
    },
    "12077": {
      "fn": "Base64.encode",
      "offset": [
        677,
        683
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "12078": {
      "fn": "Base64.encode",
      "offset": [
        677,
        683
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "12080": {
      "fn": "Base64.encode",
      "offset": [
        677,
        683
      ],
      "op": "ADD",
      "path": "21"
    },
    "12081": {
      "fn": "Base64.encode",
      "offset": [
        677,
        683
      ],
      "op": "ADD",
      "path": "21"
    },
    "12082": {
      "fn": "Base64.encode",
      "offset": [
        685,
        688
      ],
      "op": "DUP8",
      "path": "21"
    },
    "12083": {
      "fn": "Base64.encode",
      "offset": [
        689,
        690
      ],
      "op": "DUP7",
      "path": "21"
    },
    "12084": {
      "fn": "Base64.encode",
      "offset": [
        691,
        692
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1"
    },
    "12086": {
      "fn": "Base64.encode",
      "offset": [
        689,
        692
      ],
      "op": "ADD",
      "path": "21"
    },
    "12087": {
      "fn": "Base64.encode",
      "offset": [
        685,
        693
      ],
      "op": "DUP2",
      "path": "21"
    },
    "12088": {
      "fn": "Base64.encode",
      "offset": [
        685,
        693
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "12089": {
      "fn": "Base64.encode",
      "offset": [
        685,
        693
      ],
      "op": "DUP2",
      "path": "21"
    },
    "12090": {
      "fn": "Base64.encode",
      "offset": [
        685,
        693
      ],
      "op": "LT",
      "path": "21"
    },
    "12091": {
      "fn": "Base64.encode",
      "offset": [
        685,
        693
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2F40"
    },
    "12094": {
      "fn": "Base64.encode",
      "offset": [
        685,
        693
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "12095": {
      "dev": "Index out of range",
      "fn": "Base64.encode",
      "offset": [
        685,
        693
      ],
      "op": "INVALID",
      "path": "21"
    },
    "12096": {
      "fn": "Base64.encode",
      "offset": [
        685,
        693
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "12097": {
      "fn": "Base64.encode",
      "offset": [
        685,
        693
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "12099": {
      "fn": "Base64.encode",
      "offset": [
        685,
        693
      ],
      "op": "ADD",
      "path": "21"
    },
    "12100": {
      "fn": "Base64.encode",
      "offset": [
        685,
        693
      ],
      "op": "ADD",
      "path": "21"
    },
    "12101": {
      "fn": "Base64.encode",
      "offset": [
        695,
        698
      ],
      "op": "DUP9",
      "path": "21"
    },
    "12102": {
      "fn": "Base64.encode",
      "offset": [
        699,
        700
      ],
      "op": "DUP8",
      "path": "21"
    },
    "12103": {
      "fn": "Base64.encode",
      "offset": [
        701,
        702
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x2"
    },
    "12105": {
      "fn": "Base64.encode",
      "offset": [
        699,
        702
      ],
      "op": "ADD",
      "path": "21"
    },
    "12106": {
      "fn": "Base64.encode",
      "offset": [
        695,
        703
      ],
      "op": "DUP2",
      "path": "21"
    },
    "12107": {
      "fn": "Base64.encode",
      "offset": [
        695,
        703
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "12108": {
      "fn": "Base64.encode",
      "offset": [
        695,
        703
      ],
      "op": "DUP2",
      "path": "21"
    },
    "12109": {
      "fn": "Base64.encode",
      "offset": [
        695,
        703
      ],
      "op": "LT",
      "path": "21"
    },
    "12110": {
      "fn": "Base64.encode",
      "offset": [
        695,
        703
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2F53"
    },
    "12113": {
      "fn": "Base64.encode",
      "offset": [
        695,
        703
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "12114": {
      "dev": "Index out of range",
      "fn": "Base64.encode",
      "offset": [
        695,
        703
      ],
      "op": "INVALID",
      "path": "21"
    },
    "12115": {
      "fn": "Base64.encode",
      "offset": [
        695,
        703
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "12116": {
      "fn": "Base64.encode",
      "offset": [
        695,
        703
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "12118": {
      "fn": "Base64.encode",
      "offset": [
        695,
        703
      ],
      "op": "ADD",
      "path": "21"
    },
    "12119": {
      "fn": "Base64.encode",
      "offset": [
        695,
        703
      ],
      "op": "ADD",
      "path": "21"
    },
    "12120": {
      "fn": "Base64.encode",
      "offset": [
        705,
        708
      ],
      "op": "DUP10",
      "path": "21"
    },
    "12121": {
      "fn": "Base64.encode",
      "offset": [
        709,
        710
      ],
      "op": "DUP9",
      "path": "21"
    },
    "12122": {
      "fn": "Base64.encode",
      "offset": [
        711,
        712
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x3"
    },
    "12124": {
      "fn": "Base64.encode",
      "offset": [
        709,
        712
      ],
      "op": "ADD",
      "path": "21"
    },
    "12125": {
      "fn": "Base64.encode",
      "offset": [
        705,
        713
      ],
      "op": "DUP2",
      "path": "21"
    },
    "12126": {
      "fn": "Base64.encode",
      "offset": [
        705,
        713
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "12127": {
      "fn": "Base64.encode",
      "offset": [
        705,
        713
      ],
      "op": "DUP2",
      "path": "21"
    },
    "12128": {
      "fn": "Base64.encode",
      "offset": [
        705,
        713
      ],
      "op": "LT",
      "path": "21"
    },
    "12129": {
      "fn": "Base64.encode",
      "offset": [
        705,
        713
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2F66"
    },
    "12132": {
      "fn": "Base64.encode",
      "offset": [
        705,
        713
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "12133": {
      "dev": "Index out of range",
      "fn": "Base64.encode",
      "offset": [
        705,
        713
      ],
      "op": "INVALID",
      "path": "21"
    },
    "12134": {
      "fn": "Base64.encode",
      "offset": [
        705,
        713
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "12135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12139": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "12141": {
      "op": "SHL"
    },
    "12142": {
      "op": "SUB"
    },
    "12143": {
      "op": "NOT"
    },
    "12144": {
      "fn": "Base64.encode",
      "offset": [
        676,
        839
      ],
      "op": "DUP7",
      "path": "21"
    },
    "12145": {
      "fn": "Base64.encode",
      "offset": [
        676,
        839
      ],
      "op": "AND",
      "path": "21"
    },
    "12146": {
      "fn": "Base64.encode",
      "offset": [
        676,
        839
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "12148": {
      "fn": "Base64.encode",
      "offset": [
        676,
        839
      ],
      "op": "BYTE",
      "path": "21"
    },
    "12149": {
      "fn": "Base64.encode",
      "offset": [
        676,
        839
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "12150": {
      "fn": "Base64.encode",
      "offset": [
        705,
        713
      ],
      "op": "ADD",
      "path": "21"
    },
    "12151": {
      "fn": "Base64.encode",
      "offset": [
        705,
        713
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "12153": {
      "fn": "Base64.encode",
      "offset": [
        705,
        713
      ],
      "op": "ADD",
      "path": "21"
    },
    "12154": {
      "fn": "Base64.encode",
      "offset": [
        676,
        839
      ],
      "op": "MSTORE8",
      "path": "21"
    },
    "12155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12159": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "12161": {
      "op": "SHL"
    },
    "12162": {
      "op": "SUB"
    },
    "12163": {
      "op": "NOT"
    },
    "12164": {
      "fn": "Base64.encode",
      "offset": [
        676,
        839
      ],
      "op": "DUP6",
      "path": "21"
    },
    "12165": {
      "fn": "Base64.encode",
      "offset": [
        676,
        839
      ],
      "op": "AND",
      "path": "21"
    },
    "12166": {
      "fn": "Base64.encode",
      "offset": [
        676,
        839
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "12168": {
      "fn": "Base64.encode",
      "offset": [
        676,
        839
      ],
      "op": "BYTE",
      "path": "21"
    },
    "12169": {
      "fn": "Base64.encode",
      "offset": [
        676,
        839
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "12170": {
      "fn": "Base64.encode",
      "offset": [
        676,
        839
      ],
      "op": "MSTORE8",
      "path": "21"
    },
    "12171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12175": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "12177": {
      "op": "SHL"
    },
    "12178": {
      "op": "SUB"
    },
    "12179": {
      "op": "NOT"
    },
    "12180": {
      "fn": "Base64.encode",
      "offset": [
        676,
        839
      ],
      "op": "DUP6",
      "path": "21"
    },
    "12181": {
      "fn": "Base64.encode",
      "offset": [
        676,
        839
      ],
      "op": "AND",
      "path": "21"
    },
    "12182": {
      "fn": "Base64.encode",
      "offset": [
        676,
        839
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "12184": {
      "fn": "Base64.encode",
      "offset": [
        676,
        839
      ],
      "op": "BYTE",
      "path": "21"
    },
    "12185": {
      "fn": "Base64.encode",
      "offset": [
        676,
        839
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "12186": {
      "fn": "Base64.encode",
      "offset": [
        676,
        839
      ],
      "op": "MSTORE8",
      "path": "21"
    },
    "12187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12191": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "12193": {
      "op": "SHL"
    },
    "12194": {
      "op": "SUB"
    },
    "12195": {
      "op": "NOT"
    },
    "12196": {
      "fn": "Base64.encode",
      "offset": [
        676,
        839
      ],
      "op": "DUP6",
      "path": "21"
    },
    "12197": {
      "fn": "Base64.encode",
      "offset": [
        676,
        839
      ],
      "op": "AND",
      "path": "21"
    },
    "12198": {
      "fn": "Base64.encode",
      "offset": [
        676,
        839
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "12200": {
      "fn": "Base64.encode",
      "offset": [
        676,
        839
      ],
      "op": "BYTE",
      "path": "21"
    },
    "12201": {
      "fn": "Base64.encode",
      "offset": [
        676,
        839
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "12202": {
      "fn": "Base64.encode",
      "offset": [
        676,
        839
      ],
      "op": "MSTORE8",
      "path": "21"
    },
    "12203": {
      "op": "POP"
    },
    "12204": {
      "op": "POP"
    },
    "12205": {
      "op": "POP"
    },
    "12206": {
      "fn": "Base64.encode",
      "offset": [
        658,
        659
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 108,
      "value": "0x3"
    },
    "12208": {
      "fn": "Base64.encode",
      "offset": [
        653,
        659
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "12209": {
      "fn": "Base64.encode",
      "offset": [
        653,
        659
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "12210": {
      "fn": "Base64.encode",
      "offset": [
        653,
        659
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "12211": {
      "fn": "Base64.encode",
      "offset": [
        653,
        659
      ],
      "op": "ADD",
      "path": "21"
    },
    "12212": {
      "fn": "Base64.encode",
      "offset": [
        653,
        659
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "12213": {
      "op": "POP"
    },
    "12214": {
      "fn": "Base64.encode",
      "offset": [
        861,
        862
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 109,
      "value": "0x4"
    },
    "12216": {
      "fn": "Base64.encode",
      "offset": [
        856,
        862
      ],
      "op": "ADD",
      "path": "21"
    },
    "12217": {
      "fn": "Base64.encode",
      "offset": [
        625,
        874
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2EBA"
    },
    "12220": {
      "fn": "Base64.encode",
      "offset": [
        625,
        874
      ],
      "op": "JUMP",
      "path": "21"
    },
    "12221": {
      "fn": "Base64.encode",
      "offset": [
        625,
        874
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "12222": {
      "fn": "Base64.encode",
      "offset": [
        890,
        898
      ],
      "op": "DUP5",
      "path": "21"
    },
    "12223": {
      "branch": 257,
      "fn": "Base64.encode",
      "offset": [
        890,
        898
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "12224": {
      "fn": "Base64.encode",
      "offset": [
        886,
        1296
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x30A7"
    },
    "12227": {
      "branch": 257,
      "fn": "Base64.encode",
      "offset": [
        886,
        1296
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "12228": {
      "fn": "Base64.encode",
      "offset": [
        915,
        924
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "12230": {
      "fn": "Base64.encode",
      "offset": [
        933,
        936
      ],
      "op": "DUP7",
      "path": "21"
    },
    "12231": {
      "fn": "Base64.encode",
      "offset": [
        950,
        953
      ],
      "op": "DUP7",
      "path": "21"
    },
    "12232": {
      "fn": "Base64.encode",
      "offset": [
        937,
        940
      ],
      "op": "DUP9",
      "path": "21"
    },
    "12233": {
      "fn": "Base64.encode",
      "offset": [
        937,
        947
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "12234": {
      "fn": "Base64.encode",
      "offset": [
        937,
        953
      ],
      "op": "SUB",
      "path": "21"
    },
    "12235": {
      "fn": "Base64.encode",
      "offset": [
        933,
        954
      ],
      "op": "DUP2",
      "path": "21"
    },
    "12236": {
      "fn": "Base64.encode",
      "offset": [
        933,
        954
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "12237": {
      "fn": "Base64.encode",
      "offset": [
        933,
        954
      ],
      "op": "DUP2",
      "path": "21"
    },
    "12238": {
      "fn": "Base64.encode",
      "offset": [
        933,
        954
      ],
      "op": "LT",
      "path": "21"
    },
    "12239": {
      "fn": "Base64.encode",
      "offset": [
        933,
        954
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2FD4"
    },
    "12242": {
      "fn": "Base64.encode",
      "offset": [
        933,
        954
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "12243": {
      "dev": "Index out of range",
      "fn": "Base64.encode",
      "offset": [
        933,
        954
      ],
      "op": "INVALID",
      "path": "21"
    },
    "12244": {
      "fn": "Base64.encode",
      "offset": [
        933,
        954
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "12245": {
      "fn": "Base64.encode",
      "offset": [
        933,
        954
      ],
      "op": "ADD",
      "path": "21"
    },
    "12246": {
      "fn": "Base64.encode",
      "offset": [
        933,
        954
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "12248": {
      "fn": "Base64.encode",
      "offset": [
        933,
        954
      ],
      "op": "ADD",
      "path": "21"
    },
    "12249": {
      "fn": "Base64.encode",
      "offset": [
        933,
        954
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "12250": {
      "fn": "Base64.encode",
      "offset": [
        933,
        954
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xF8"
    },
    "12252": {
      "fn": "Base64.encode",
      "offset": [
        933,
        954
      ],
      "op": "SHR",
      "path": "21"
    },
    "12253": {
      "fn": "Base64.encode",
      "offset": [
        933,
        954
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "12254": {
      "op": "POP"
    },
    "12255": {
      "fn": "Base64.encode",
      "offset": [
        970,
        979
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "12257": {
      "fn": "Base64.encode",
      "offset": [
        1011,
        1012
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x2"
    },
    "12259": {
      "fn": "Base64.encode",
      "offset": [
        1004,
        1012
      ],
      "op": "DUP8",
      "path": "21"
    },
    "12260": {
      "branch": 258,
      "fn": "Base64.encode",
      "offset": [
        1004,
        1012
      ],
      "op": "EQ",
      "path": "21"
    },
    "12261": {
      "fn": "Base64.encode",
      "offset": [
        1000,
        1081
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "12262": {
      "fn": "Base64.encode",
      "offset": [
        1000,
        1081
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x3004"
    },
    "12265": {
      "branch": 258,
      "fn": "Base64.encode",
      "offset": [
        1000,
        1081
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "12266": {
      "fn": "Base64.encode",
      "offset": [
        1045,
        1048
      ],
      "op": "DUP8",
      "path": "21",
      "statement": 110
    },
    "12267": {
      "fn": "Base64.encode",
      "offset": [
        1062,
        1063
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1"
    },
    "12269": {
      "fn": "Base64.encode",
      "offset": [
        1049,
        1052
      ],
      "op": "DUP10",
      "path": "21"
    },
    "12270": {
      "fn": "Base64.encode",
      "offset": [
        1049,
        1059
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "12271": {
      "fn": "Base64.encode",
      "offset": [
        1049,
        1063
      ],
      "op": "SUB",
      "path": "21"
    },
    "12272": {
      "fn": "Base64.encode",
      "offset": [
        1045,
        1064
      ],
      "op": "DUP2",
      "path": "21"
    },
    "12273": {
      "fn": "Base64.encode",
      "offset": [
        1045,
        1064
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "12274": {
      "fn": "Base64.encode",
      "offset": [
        1045,
        1064
      ],
      "op": "DUP2",
      "path": "21"
    },
    "12275": {
      "fn": "Base64.encode",
      "offset": [
        1045,
        1064
      ],
      "op": "LT",
      "path": "21"
    },
    "12276": {
      "fn": "Base64.encode",
      "offset": [
        1045,
        1064
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x2FF9"
    },
    "12279": {
      "fn": "Base64.encode",
      "offset": [
        1045,
        1064
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "12280": {
      "dev": "Index out of range",
      "fn": "Base64.encode",
      "offset": [
        1045,
        1064
      ],
      "op": "INVALID",
      "path": "21"
    },
    "12281": {
      "fn": "Base64.encode",
      "offset": [
        1045,
        1064
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "12282": {
      "fn": "Base64.encode",
      "offset": [
        1045,
        1064
      ],
      "op": "ADD",
      "path": "21"
    },
    "12283": {
      "fn": "Base64.encode",
      "offset": [
        1045,
        1064
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "12285": {
      "fn": "Base64.encode",
      "offset": [
        1045,
        1064
      ],
      "op": "ADD",
      "path": "21"
    },
    "12286": {
      "fn": "Base64.encode",
      "offset": [
        1045,
        1064
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "12287": {
      "fn": "Base64.encode",
      "offset": [
        1045,
        1064
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xF8"
    },
    "12289": {
      "fn": "Base64.encode",
      "offset": [
        1045,
        1064
      ],
      "op": "SHR",
      "path": "21"
    },
    "12290": {
      "fn": "Base64.encode",
      "offset": [
        1045,
        1064
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "12291": {
      "op": "POP"
    },
    "12292": {
      "fn": "Base64.encode",
      "offset": [
        1000,
        1081
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "12293": {
      "fn": "Base64.encode",
      "offset": [
        1098,
        1105
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "12295": {
      "fn": "Base64.encode",
      "offset": [
        1107,
        1114
      ],
      "op": "DUP1",
      "path": "21"
    },
    "12296": {
      "fn": "Base64.encode",
      "offset": [
        1116,
        1123
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "12298": {
      "fn": "Base64.encode",
      "offset": [
        1125,
        1132
      ],
      "op": "DUP1",
      "path": "21"
    },
    "12299": {
      "fn": "Base64.encode",
      "offset": [
        1136,
        1156
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x301C"
    },
    "12302": {
      "fn": "Base64.encode",
      "offset": [
        1144,
        1147
      ],
      "op": "DUP7",
      "path": "21"
    },
    "12303": {
      "fn": "Base64.encode",
      "offset": [
        1136,
        1156
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xFF"
    },
    "12305": {
      "fn": "Base64.encode",
      "offset": [
        1136,
        1156
      ],
      "op": "AND",
      "path": "21"
    },
    "12306": {
      "fn": "Base64.encode",
      "offset": [
        1149,
        1152
      ],
      "op": "DUP7",
      "path": "21"
    },
    "12307": {
      "fn": "Base64.encode",
      "offset": [
        1136,
        1156
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xFF"
    },
    "12309": {
      "fn": "Base64.encode",
      "offset": [
        1136,
        1156
      ],
      "op": "AND",
      "path": "21"
    },
    "12310": {
      "fn": "Base64.encode",
      "offset": [
        1154,
        1155
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "12312": {
      "fn": "Base64.encode",
      "offset": [
        1136,
        1143
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x4137"
    },
    "12315": {
      "fn": "Base64.encode",
      "jump": "i",
      "offset": [
        1136,
        1156
      ],
      "op": "JUMP",
      "path": "21"
    },
    "12316": {
      "fn": "Base64.encode",
      "offset": [
        1136,
        1156
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "12317": {
      "fn": "Base64.encode",
      "offset": [
        1097,
        1156
      ],
      "op": "SWAP4",
      "path": "21"
    },
    "12318": {
      "fn": "Base64.encode",
      "offset": [
        1097,
        1156
      ],
      "op": "POP",
      "path": "21"
    },
    "12319": {
      "fn": "Base64.encode",
      "offset": [
        1097,
        1156
      ],
      "op": "SWAP4",
      "path": "21"
    },
    "12320": {
      "fn": "Base64.encode",
      "offset": [
        1097,
        1156
      ],
      "op": "POP",
      "path": "21"
    },
    "12321": {
      "fn": "Base64.encode",
      "offset": [
        1097,
        1156
      ],
      "op": "SWAP4",
      "path": "21"
    },
    "12322": {
      "fn": "Base64.encode",
      "offset": [
        1097,
        1156
      ],
      "op": "POP",
      "path": "21"
    },
    "12323": {
      "fn": "Base64.encode",
      "offset": [
        1097,
        1156
      ],
      "op": "SWAP4",
      "path": "21"
    },
    "12324": {
      "fn": "Base64.encode",
      "offset": [
        1097,
        1156
      ],
      "op": "POP",
      "path": "21"
    },
    "12325": {
      "fn": "Base64.encode",
      "offset": [
        1180,
        1182
      ],
      "op": "DUP4",
      "path": "21",
      "statement": 111
    },
    "12326": {
      "fn": "Base64.encode",
      "offset": [
        1171,
        1174
      ],
      "op": "DUP10",
      "path": "21"
    },
    "12327": {
      "fn": "Base64.encode",
      "offset": [
        1175,
        1176
      ],
      "op": "DUP9",
      "path": "21"
    },
    "12328": {
      "fn": "Base64.encode",
      "offset": [
        1171,
        1177
      ],
      "op": "DUP2",
      "path": "21"
    },
    "12329": {
      "fn": "Base64.encode",
      "offset": [
        1171,
        1177
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "12330": {
      "fn": "Base64.encode",
      "offset": [
        1171,
        1177
      ],
      "op": "DUP2",
      "path": "21"
    },
    "12331": {
      "fn": "Base64.encode",
      "offset": [
        1171,
        1177
      ],
      "op": "LT",
      "path": "21"
    },
    "12332": {
      "fn": "Base64.encode",
      "offset": [
        1171,
        1177
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x3031"
    },
    "12335": {
      "fn": "Base64.encode",
      "offset": [
        1171,
        1177
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "12336": {
      "dev": "Index out of range",
      "fn": "Base64.encode",
      "offset": [
        1171,
        1177
      ],
      "op": "INVALID",
      "path": "21"
    },
    "12337": {
      "fn": "Base64.encode",
      "offset": [
        1171,
        1177
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "12338": {
      "fn": "Base64.encode",
      "offset": [
        1171,
        1177
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "12340": {
      "fn": "Base64.encode",
      "offset": [
        1171,
        1177
      ],
      "op": "ADD",
      "path": "21"
    },
    "12341": {
      "fn": "Base64.encode",
      "offset": [
        1171,
        1177
      ],
      "op": "ADD",
      "path": "21"
    },
    "12342": {
      "fn": "Base64.encode",
      "offset": [
        1171,
        1182
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "12343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12347": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "12349": {
      "op": "SHL"
    },
    "12350": {
      "op": "SUB"
    },
    "12351": {
      "fn": "Base64.encode",
      "offset": [
        1171,
        1182
      ],
      "op": "NOT",
      "path": "21"
    },
    "12352": {
      "fn": "Base64.encode",
      "offset": [
        1171,
        1182
      ],
      "op": "AND",
      "path": "21"
    },
    "12353": {
      "fn": "Base64.encode",
      "offset": [
        1171,
        1182
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "12354": {
      "fn": "Base64.encode",
      "offset": [
        1171,
        1182
      ],
      "op": "DUP2",
      "path": "21"
    },
    "12355": {
      "fn": "Base64.encode",
      "offset": [
        1171,
        1182
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "12357": {
      "fn": "Base64.encode",
      "offset": [
        1171,
        1182
      ],
      "op": "BYTE",
      "path": "21"
    },
    "12358": {
      "fn": "Base64.encode",
      "offset": [
        1171,
        1182
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "12359": {
      "fn": "Base64.encode",
      "offset": [
        1171,
        1182
      ],
      "op": "MSTORE8",
      "path": "21"
    },
    "12360": {
      "fn": "Base64.encode",
      "offset": [
        1171,
        1182
      ],
      "op": "POP",
      "path": "21"
    },
    "12361": {
      "fn": "Base64.encode",
      "offset": [
        1208,
        1210
      ],
      "op": "DUP3",
      "path": "21",
      "statement": 112
    },
    "12362": {
      "fn": "Base64.encode",
      "offset": [
        1197,
        1200
      ],
      "op": "DUP10",
      "path": "21"
    },
    "12363": {
      "fn": "Base64.encode",
      "offset": [
        1201,
        1202
      ],
      "op": "DUP9",
      "path": "21"
    },
    "12364": {
      "fn": "Base64.encode",
      "offset": [
        1203,
        1204
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x1"
    },
    "12366": {
      "fn": "Base64.encode",
      "offset": [
        1201,
        1204
      ],
      "op": "ADD",
      "path": "21"
    },
    "12367": {
      "fn": "Base64.encode",
      "offset": [
        1197,
        1205
      ],
      "op": "DUP2",
      "path": "21"
    },
    "12368": {
      "fn": "Base64.encode",
      "offset": [
        1197,
        1205
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "12369": {
      "fn": "Base64.encode",
      "offset": [
        1197,
        1205
      ],
      "op": "DUP2",
      "path": "21"
    },
    "12370": {
      "fn": "Base64.encode",
      "offset": [
        1197,
        1205
      ],
      "op": "LT",
      "path": "21"
    },
    "12371": {
      "fn": "Base64.encode",
      "offset": [
        1197,
        1205
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x3058"
    },
    "12374": {
      "fn": "Base64.encode",
      "offset": [
        1197,
        1205
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "12375": {
      "dev": "Index out of range",
      "fn": "Base64.encode",
      "offset": [
        1197,
        1205
      ],
      "op": "INVALID",
      "path": "21"
    },
    "12376": {
      "fn": "Base64.encode",
      "offset": [
        1197,
        1205
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "12377": {
      "fn": "Base64.encode",
      "offset": [
        1197,
        1205
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "12379": {
      "fn": "Base64.encode",
      "offset": [
        1197,
        1205
      ],
      "op": "ADD",
      "path": "21"
    },
    "12380": {
      "fn": "Base64.encode",
      "offset": [
        1197,
        1205
      ],
      "op": "ADD",
      "path": "21"
    },
    "12381": {
      "fn": "Base64.encode",
      "offset": [
        1197,
        1210
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "12382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12386": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "12388": {
      "op": "SHL"
    },
    "12389": {
      "op": "SUB"
    },
    "12390": {
      "fn": "Base64.encode",
      "offset": [
        1197,
        1210
      ],
      "op": "NOT",
      "path": "21"
    },
    "12391": {
      "fn": "Base64.encode",
      "offset": [
        1197,
        1210
      ],
      "op": "AND",
      "path": "21"
    },
    "12392": {
      "fn": "Base64.encode",
      "offset": [
        1197,
        1210
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "12393": {
      "fn": "Base64.encode",
      "offset": [
        1197,
        1210
      ],
      "op": "DUP2",
      "path": "21"
    },
    "12394": {
      "fn": "Base64.encode",
      "offset": [
        1197,
        1210
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "12396": {
      "fn": "Base64.encode",
      "offset": [
        1197,
        1210
      ],
      "op": "BYTE",
      "path": "21"
    },
    "12397": {
      "fn": "Base64.encode",
      "offset": [
        1197,
        1210
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "12398": {
      "fn": "Base64.encode",
      "offset": [
        1197,
        1210
      ],
      "op": "MSTORE8",
      "path": "21"
    },
    "12399": {
      "fn": "Base64.encode",
      "offset": [
        1197,
        1210
      ],
      "op": "POP",
      "path": "21"
    },
    "12400": {
      "fn": "Base64.encode",
      "offset": [
        1229,
        1232
      ],
      "op": "DUP11",
      "path": "21"
    },
    "12401": {
      "fn": "Base64.encode",
      "offset": [
        1236,
        1237
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x2"
    },
    "12403": {
      "branch": 259,
      "fn": "Base64.encode",
      "offset": [
        1229,
        1237
      ],
      "op": "EQ",
      "path": "21"
    },
    "12404": {
      "fn": "Base64.encode",
      "offset": [
        1225,
        1285
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "12405": {
      "fn": "Base64.encode",
      "offset": [
        1225,
        1285
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x30A0"
    },
    "12408": {
      "branch": 259,
      "fn": "Base64.encode",
      "offset": [
        1225,
        1285
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "12409": {
      "fn": "Base64.encode",
      "offset": [
        1267,
        1269
      ],
      "op": "DUP2",
      "path": "21",
      "statement": 113
    },
    "12410": {
      "fn": "Base64.encode",
      "offset": [
        1256,
        1259
      ],
      "op": "DUP10",
      "path": "21"
    },
    "12411": {
      "fn": "Base64.encode",
      "offset": [
        1260,
        1261
      ],
      "op": "DUP9",
      "path": "21"
    },
    "12412": {
      "fn": "Base64.encode",
      "offset": [
        1262,
        1263
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x2"
    },
    "12414": {
      "fn": "Base64.encode",
      "offset": [
        1260,
        1263
      ],
      "op": "ADD",
      "path": "21"
    },
    "12415": {
      "fn": "Base64.encode",
      "offset": [
        1256,
        1264
      ],
      "op": "DUP2",
      "path": "21"
    },
    "12416": {
      "fn": "Base64.encode",
      "offset": [
        1256,
        1264
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "12417": {
      "fn": "Base64.encode",
      "offset": [
        1256,
        1264
      ],
      "op": "DUP2",
      "path": "21"
    },
    "12418": {
      "fn": "Base64.encode",
      "offset": [
        1256,
        1264
      ],
      "op": "LT",
      "path": "21"
    },
    "12419": {
      "fn": "Base64.encode",
      "offset": [
        1256,
        1264
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x3088"
    },
    "12422": {
      "fn": "Base64.encode",
      "offset": [
        1256,
        1264
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "12423": {
      "dev": "Index out of range",
      "fn": "Base64.encode",
      "offset": [
        1256,
        1264
      ],
      "op": "INVALID",
      "path": "21"
    },
    "12424": {
      "fn": "Base64.encode",
      "offset": [
        1256,
        1264
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "12425": {
      "fn": "Base64.encode",
      "offset": [
        1256,
        1264
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "12427": {
      "fn": "Base64.encode",
      "offset": [
        1256,
        1264
      ],
      "op": "ADD",
      "path": "21"
    },
    "12428": {
      "fn": "Base64.encode",
      "offset": [
        1256,
        1264
      ],
      "op": "ADD",
      "path": "21"
    },
    "12429": {
      "fn": "Base64.encode",
      "offset": [
        1256,
        1269
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "12430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12434": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "12436": {
      "op": "SHL"
    },
    "12437": {
      "op": "SUB"
    },
    "12438": {
      "fn": "Base64.encode",
      "offset": [
        1256,
        1269
      ],
      "op": "NOT",
      "path": "21"
    },
    "12439": {
      "fn": "Base64.encode",
      "offset": [
        1256,
        1269
      ],
      "op": "AND",
      "path": "21"
    },
    "12440": {
      "fn": "Base64.encode",
      "offset": [
        1256,
        1269
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "12441": {
      "fn": "Base64.encode",
      "offset": [
        1256,
        1269
      ],
      "op": "DUP2",
      "path": "21"
    },
    "12442": {
      "fn": "Base64.encode",
      "offset": [
        1256,
        1269
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "12444": {
      "fn": "Base64.encode",
      "offset": [
        1256,
        1269
      ],
      "op": "BYTE",
      "path": "21"
    },
    "12445": {
      "fn": "Base64.encode",
      "offset": [
        1256,
        1269
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "12446": {
      "fn": "Base64.encode",
      "offset": [
        1256,
        1269
      ],
      "op": "MSTORE8",
      "path": "21"
    },
    "12447": {
      "fn": "Base64.encode",
      "offset": [
        1256,
        1269
      ],
      "op": "POP",
      "path": "21"
    },
    "12448": {
      "fn": "Base64.encode",
      "offset": [
        1225,
        1285
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "12449": {
      "fn": "Base64.encode",
      "offset": [
        886,
        1296
      ],
      "op": "POP",
      "path": "21"
    },
    "12450": {
      "fn": "Base64.encode",
      "offset": [
        886,
        1296
      ],
      "op": "POP",
      "path": "21"
    },
    "12451": {
      "fn": "Base64.encode",
      "offset": [
        886,
        1296
      ],
      "op": "POP",
      "path": "21"
    },
    "12452": {
      "fn": "Base64.encode",
      "offset": [
        886,
        1296
      ],
      "op": "POP",
      "path": "21"
    },
    "12453": {
      "fn": "Base64.encode",
      "offset": [
        886,
        1296
      ],
      "op": "POP",
      "path": "21"
    },
    "12454": {
      "fn": "Base64.encode",
      "offset": [
        886,
        1296
      ],
      "op": "POP",
      "path": "21"
    },
    "12455": {
      "fn": "Base64.encode",
      "offset": [
        886,
        1296
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "12456": {
      "op": "POP"
    },
    "12457": {
      "fn": "Base64.encode",
      "offset": [
        1322,
        1325
      ],
      "op": "SWAP1",
      "path": "21",
      "statement": 114
    },
    "12458": {
      "fn": "Base64.encode",
      "offset": [
        1322,
        1325
      ],
      "op": "SWAP7",
      "path": "21"
    },
    "12459": {
      "fn": "Base64.encode",
      "offset": [
        279,
        1334
      ],
      "op": "SWAP6",
      "path": "21"
    },
    "12460": {
      "op": "POP"
    },
    "12461": {
      "op": "POP"
    },
    "12462": {
      "op": "POP"
    },
    "12463": {
      "op": "POP"
    },
    "12464": {
      "op": "POP"
    },
    "12465": {
      "op": "POP"
    },
    "12466": {
      "fn": "Base64.encode",
      "jump": "o",
      "offset": [
        279,
        1334
      ],
      "op": "JUMP",
      "path": "21"
    },
    "12467": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44281,
        45057
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12468": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44370,
        44377
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "12470": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44406,
        44435
      ],
      "op": "DUP3",
      "path": "20"
    },
    "12471": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44406,
        44435
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12472": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44406,
        44435
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12473": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44406,
        44425
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xF"
    },
    "12475": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44406,
        44435
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "12477": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44406,
        44435
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12478": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44406,
        44435
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12479": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44406,
        44435
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12480": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44406,
        44435
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "12482": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44406,
        44435
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12483": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44406,
        44435
      ],
      "op": "DUP4",
      "path": "20"
    },
    "12484": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44406,
        44435
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "12485": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44406,
        44435
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "12486": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44474
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1E"
    },
    "12488": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44474
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "12489": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "DUP3",
      "path": "20"
    },
    "12490": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "12491": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "12496": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12498": {
      "op": "SHL"
    },
    "12499": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12500": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12501": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44493,
        44497
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "12502": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "12504": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "DUP3",
      "path": "20"
    },
    "12505": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "ADD",
      "path": "20"
    },
    "12506": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12507": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "12508": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "12509": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44406,
        44435
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "12510": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44406,
        44435
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "12511": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44370,
        44377
      ],
      "op": "DUP6",
      "path": "20"
    },
    "12512": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44370,
        44377
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "12513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12517": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12519": {
      "op": "SHL"
    },
    "12520": {
      "op": "SUB"
    },
    "12521": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44474
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12522": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44474
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "12523": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44474
      ],
      "op": "AND",
      "path": "20"
    },
    "12524": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44474
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "12525": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44484
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x70A08231"
    },
    "12530": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44484
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "12531": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "12533": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12534": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "DUP3",
      "path": "20"
    },
    "12535": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "ADD",
      "path": "20"
    },
    "12536": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "12537": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44406,
        44435
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "12538": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "12539": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "DUP3",
      "path": "20"
    },
    "12540": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12541": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "SUB",
      "path": "20"
    },
    "12542": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "ADD",
      "path": "20"
    },
    "12543": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12544": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44474
      ],
      "op": "DUP7",
      "path": "20"
    },
    "12545": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12546": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "12547": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "12548": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12549": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "12550": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x310E"
    },
    "12553": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "12554": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "12556": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12557": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "REVERT",
      "path": "20"
    },
    "12558": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12559": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "POP",
      "path": "20"
    },
    "12560": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "GAS",
      "path": "20"
    },
    "12561": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "12562": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "12563": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12564": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "12565": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3122"
    },
    "12568": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "12569": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "12570": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "12572": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12573": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "12574": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "12575": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "12577": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "REVERT",
      "path": "20"
    },
    "12578": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12579": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "POP",
      "path": "20"
    },
    "12580": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "POP",
      "path": "20"
    },
    "12581": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "POP",
      "path": "20"
    },
    "12582": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "POP",
      "path": "20"
    },
    "12583": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "12585": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "12586": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "12587": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "12589": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12590": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "LT",
      "path": "20"
    },
    "12591": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "12592": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3138"
    },
    "12595": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "12596": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "12598": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12599": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "REVERT",
      "path": "20"
    },
    "12600": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12601": {
      "op": "POP"
    },
    "12602": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "12603": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44558,
        44573
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x14"
    },
    "12605": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44558,
        44573
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "12606": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12607": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44469,
        44499
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "12608": {
      "op": "POP"
    },
    "12609": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44509,
        44530
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "12611": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44509,
        44530
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12612": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44533,
        44555
      ],
      "op": "DUP4",
      "path": "20"
    },
    "12613": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44533,
        44555
      ],
      "op": "DUP4",
      "path": "20"
    },
    "12614": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44533,
        44555
      ],
      "op": "MUL",
      "path": "20"
    },
    "12615": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44558,
        44573
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12616": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44533,
        44573
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x314D"
    },
    "12619": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44533,
        44573
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "12620": {
      "dev": "Division by zero",
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44533,
        44573
      ],
      "op": "INVALID",
      "path": "20"
    },
    "12621": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44533,
        44573
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12622": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44616,
        44617
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 115,
      "value": "0x0"
    },
    "12624": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44584,
        44613
      ],
      "op": "DUP9",
      "path": "20"
    },
    "12625": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44584,
        44613
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12626": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44584,
        44613
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12627": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44584,
        44603
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xF"
    },
    "12629": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44584,
        44613
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "12631": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44584,
        44613
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12632": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44584,
        44613
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "12634": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44584,
        44613
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12635": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44584,
        44613
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "12636": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44584,
        44617
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "12637": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44645,
        44660
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 116,
      "value": "0x14"
    },
    "12639": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44645,
        44660
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12640": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44645,
        44660
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "12641": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44645,
        44669
      ],
      "op": "DUP7",
      "path": "20"
    },
    "12642": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44645,
        44669
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12643": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44645,
        44669
      ],
      "op": "SUB",
      "path": "20"
    },
    "12644": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44627,
        44669
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12645": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44627,
        44669
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "12646": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44724
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 117,
      "value": "0x1E"
    },
    "12648": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44724
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "12649": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44533,
        44573
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "12650": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44533,
        44573
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12651": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44533,
        44573
      ],
      "op": "DIV",
      "path": "20"
    },
    "12652": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44533,
        44573
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "12653": {
      "op": "POP"
    },
    "12654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12658": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12660": {
      "op": "SHL"
    },
    "12661": {
      "op": "SUB"
    },
    "12662": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44724
      ],
      "op": "AND",
      "path": "20"
    },
    "12663": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44733
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x2E1A7D4D"
    },
    "12668": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44770,
        44775
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2710"
    },
    "12671": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44749,
        44768
      ],
      "op": "DUP8",
      "path": "20"
    },
    "12672": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44749,
        44768
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12673": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44749,
        44768
      ],
      "op": "SUB",
      "path": "20"
    },
    "12674": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44734,
        44769
      ],
      "op": "DUP5",
      "path": "20"
    },
    "12675": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44734,
        44769
      ],
      "op": "MUL",
      "path": "20"
    },
    "12676": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44734,
        44775
      ],
      "op": "DIV",
      "path": "20"
    },
    "12677": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "12679": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "12680": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "DUP3",
      "path": "20"
    },
    "12681": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "12686": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "AND",
      "path": "20"
    },
    "12687": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "12689": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "SHL",
      "path": "20"
    },
    "12690": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12691": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12692": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "12694": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "ADD",
      "path": "20"
    },
    "12695": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12696": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "DUP3",
      "path": "20"
    },
    "12697": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12698": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12699": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "12701": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "ADD",
      "path": "20"
    },
    "12702": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "12703": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "POP",
      "path": "20"
    },
    "12704": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "POP",
      "path": "20"
    },
    "12705": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "12707": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "12709": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "12710": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12711": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "DUP4",
      "path": "20"
    },
    "12712": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "SUB",
      "path": "20"
    },
    "12713": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12714": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "12716": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "DUP8",
      "path": "20"
    },
    "12717": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12718": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "12719": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "12720": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12721": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "12722": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x31BA"
    },
    "12725": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "12726": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "12728": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12729": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "REVERT",
      "path": "20"
    },
    "12730": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12731": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "POP",
      "path": "20"
    },
    "12732": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "GAS",
      "path": "20"
    },
    "12733": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "CALL",
      "path": "20"
    },
    "12734": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "12735": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12736": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "12737": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x31CE"
    },
    "12740": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "12741": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "12742": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "12744": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12745": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "12746": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "12747": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "12749": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "REVERT",
      "path": "20"
    },
    "12750": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44719,
        44776
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12751": {
      "op": "POP"
    },
    "12752": {
      "op": "POP"
    },
    "12753": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44790
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 118,
      "value": "0x22"
    },
    "12755": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44790
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "12756": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "12758": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12759": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "12760": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "12765": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12767": {
      "op": "SHL"
    },
    "12768": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12769": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12770": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44808,
        44812
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "12771": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "12773": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "DUP3",
      "path": "20"
    },
    "12774": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "ADD",
      "path": "20"
    },
    "12775": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12776": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44851,
        44856
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2710"
    },
    "12779": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44830,
        44849
      ],
      "op": "DUP11",
      "path": "20"
    },
    "12780": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44830,
        44849
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12781": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44830,
        44849
      ],
      "op": "SUB",
      "path": "20"
    },
    "12782": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44815,
        44850
      ],
      "op": "DUP8",
      "path": "20"
    },
    "12783": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44815,
        44850
      ],
      "op": "MUL",
      "path": "20"
    },
    "12784": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44815,
        44856
      ],
      "op": "DIV",
      "path": "20"
    },
    "12785": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "12787": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "DUP3",
      "path": "20"
    },
    "12788": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "ADD",
      "path": "20"
    },
    "12789": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12790": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12791": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "12792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12796": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12798": {
      "op": "SHL"
    },
    "12799": {
      "op": "SUB"
    },
    "12800": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44790
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12801": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44790
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "12802": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44790
      ],
      "op": "AND",
      "path": "20"
    },
    "12803": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44790
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "12804": {
      "op": "POP"
    },
    "12805": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44799
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xA9059CBB"
    },
    "12810": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44799
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "12811": {
      "op": "POP"
    },
    "12812": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "12814": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12815": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "DUP3",
      "path": "20"
    },
    "12816": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "ADD",
      "path": "20"
    },
    "12817": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "12818": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "12820": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "12821": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12822": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "12823": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12824": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "DUP3",
      "path": "20"
    },
    "12825": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12826": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "SUB",
      "path": "20"
    },
    "12827": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "ADD",
      "path": "20"
    },
    "12828": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12829": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12831": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44790
      ],
      "op": "DUP8",
      "path": "20"
    },
    "12832": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12833": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "12834": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "12835": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12836": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "12837": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x322D"
    },
    "12840": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "12841": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "12843": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12844": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "REVERT",
      "path": "20"
    },
    "12845": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12846": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "POP",
      "path": "20"
    },
    "12847": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "GAS",
      "path": "20"
    },
    "12848": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "CALL",
      "path": "20"
    },
    "12849": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "12850": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12851": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "12852": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3241"
    },
    "12855": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "12856": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "12857": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "12859": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12860": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "12861": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "12862": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "12864": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "REVERT",
      "path": "20"
    },
    "12865": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12866": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "POP",
      "path": "20"
    },
    "12867": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "POP",
      "path": "20"
    },
    "12868": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "POP",
      "path": "20"
    },
    "12869": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "POP",
      "path": "20"
    },
    "12870": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "12872": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "12873": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "12874": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "12876": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12877": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "LT",
      "path": "20"
    },
    "12878": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "12879": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3257"
    },
    "12882": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "12883": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "12885": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12886": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "REVERT",
      "path": "20"
    },
    "12887": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44786,
        44857
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12888": {
      "op": "POP"
    },
    "12889": {
      "op": "POP"
    },
    "12890": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44907,
        44931
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 119,
      "value": "0x1D"
    },
    "12892": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44907,
        44966
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12893": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44907,
        44966
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "12894": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44961,
        44966
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2710"
    },
    "12897": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44935,
        44960
      ],
      "op": "DUP8",
      "path": "20"
    },
    "12898": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44935,
        44960
      ],
      "op": "DUP5",
      "path": "20"
    },
    "12899": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44935,
        44960
      ],
      "op": "MUL",
      "path": "20"
    },
    "12900": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44935,
        44966
      ],
      "op": "DIV",
      "path": "20"
    },
    "12901": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44907,
        44966
      ],
      "op": "ADD",
      "path": "20"
    },
    "12902": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44907,
        44966
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12903": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44907,
        44966
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "12904": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44977,
        44993
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 120,
      "value": "0x326F"
    },
    "12907": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44977,
        44991
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x423A"
    },
    "12910": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "jump": "i",
      "offset": [
        44977,
        44993
      ],
      "op": "JUMP",
      "path": "20"
    },
    "12911": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44977,
        44993
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12912": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        45047,
        45052
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 121,
      "value": "0x2710"
    },
    "12915": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        45026,
        45045
      ],
      "op": "DUP6",
      "path": "20"
    },
    "12916": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        45026,
        45045
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12917": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        45026,
        45045
      ],
      "op": "SUB",
      "path": "20"
    },
    "12918": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        45011,
        45046
      ],
      "op": "DUP3",
      "path": "20"
    },
    "12919": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        45011,
        45046
      ],
      "op": "MUL",
      "path": "20"
    },
    "12920": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        45011,
        45052
      ],
      "op": "DIV",
      "path": "20"
    },
    "12921": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        45011,
        45052
      ],
      "op": "SWAP7",
      "path": "20"
    },
    "12922": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "offset": [
        44281,
        45057
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "12923": {
      "op": "POP"
    },
    "12924": {
      "op": "POP"
    },
    "12925": {
      "op": "POP"
    },
    "12926": {
      "op": "POP"
    },
    "12927": {
      "op": "POP"
    },
    "12928": {
      "op": "POP"
    },
    "12929": {
      "fn": "BuyTheDipNFT.retrieveLentStablecoins",
      "jump": "o",
      "offset": [
        44281,
        45057
      ],
      "op": "JUMP",
      "path": "20"
    },
    "12930": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1062,
        2923
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12931": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1279,
        1295
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "12933": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1279,
        1295
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12934": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1279,
        1295
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "12935": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1293,
        1294
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "12937": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1279,
        1295
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12938": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1279,
        1295
      ],
      "op": "DUP3",
      "path": "20"
    },
    "12939": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1279,
        1295
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12940": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1255,
        1276
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "12942": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1279,
        1295
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12943": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1279,
        1295
      ],
      "op": "DUP4",
      "path": "20"
    },
    "12944": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1279,
        1295
      ],
      "op": "ADD",
      "path": "20"
    },
    "12945": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1279,
        1295
      ],
      "op": "DUP5",
      "path": "20"
    },
    "12946": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1279,
        1295
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "12947": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1227,
        1234
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "12949": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1227,
        1234
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "12950": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1227,
        1234
      ],
      "op": "DUP5",
      "path": "20"
    },
    "12951": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1227,
        1234
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "12952": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1255,
        1276
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "12953": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1255,
        1276
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "12954": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1293,
        1294
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12955": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1279,
        1295
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "12957": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1279,
        1295
      ],
      "op": "DUP4",
      "path": "20"
    },
    "12958": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1279,
        1295
      ],
      "op": "ADD",
      "path": "20"
    },
    "12959": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1279,
        1295
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12960": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1279,
        1295
      ],
      "op": "DUP1",
      "path": "20"
    },
    "12961": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1279,
        1295
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "12962": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1279,
        1295
      ],
      "op": "DUP4",
      "path": "20"
    },
    "12963": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1279,
        1295
      ],
      "op": "CALLDATACOPY",
      "path": "20"
    },
    "12964": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1279,
        1295
      ],
      "op": "ADD",
      "path": "20"
    },
    "12965": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1279,
        1295
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12966": {
      "op": "POP"
    },
    "12967": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1279,
        1295
      ],
      "op": "POP",
      "path": "20"
    },
    "12968": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1255,
        1295
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12969": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1255,
        1295
      ],
      "op": "POP",
      "path": "20"
    },
    "12970": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1315,
        1335
      ],
      "op": "DUP7",
      "path": "20",
      "statement": 122
    },
    "12971": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1305,
        1309
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12972": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1310,
        1311
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "12974": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1305,
        1312
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12975": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1305,
        1312
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "12976": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1305,
        1312
      ],
      "op": "DUP2",
      "path": "20"
    },
    "12977": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1305,
        1312
      ],
      "op": "LT",
      "path": "20"
    },
    "12978": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1305,
        1312
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x32B7"
    },
    "12981": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1305,
        1312
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "12982": {
      "dev": "Index out of range",
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1305,
        1312
      ],
      "op": "INVALID",
      "path": "20"
    },
    "12983": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1305,
        1312
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "12984": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1305,
        1312
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "12986": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1305,
        1312
      ],
      "op": "MUL",
      "path": "20"
    },
    "12987": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1305,
        1312
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "12989": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1305,
        1312
      ],
      "op": "ADD",
      "path": "20"
    },
    "12990": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1305,
        1312
      ],
      "op": "ADD",
      "path": "20"
    },
    "12991": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1305,
        1335
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "12992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12996": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "12998": {
      "op": "SHL"
    },
    "12999": {
      "op": "SUB"
    },
    "13000": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1305,
        1335
      ],
      "op": "AND",
      "path": "20"
    },
    "13001": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1305,
        1335
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13002": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1305,
        1335
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13007": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13009": {
      "op": "SHL"
    },
    "13010": {
      "op": "SUB"
    },
    "13011": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1305,
        1335
      ],
      "op": "AND",
      "path": "20"
    },
    "13012": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1305,
        1335
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13013": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1305,
        1335
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13014": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1305,
        1335
      ],
      "op": "POP",
      "path": "20"
    },
    "13015": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1305,
        1335
      ],
      "op": "POP",
      "path": "20"
    },
    "13016": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1433
      ],
      "op": "DUP5",
      "path": "20",
      "statement": 123
    },
    "13017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13021": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13023": {
      "op": "SHL"
    },
    "13024": {
      "op": "SUB"
    },
    "13025": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1438
      ],
      "op": "AND",
      "path": "20"
    },
    "13026": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1438
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xAD5C4648"
    },
    "13031": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "13033": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13034": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13035": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "13040": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "AND",
      "path": "20"
    },
    "13041": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "13043": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "SHL",
      "path": "20"
    },
    "13044": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13045": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13046": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "13048": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "ADD",
      "path": "20"
    },
    "13049": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "13051": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "13053": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13054": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13055": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "DUP4",
      "path": "20"
    },
    "13056": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "SUB",
      "path": "20"
    },
    "13057": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13058": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "DUP7",
      "path": "20"
    },
    "13059": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13060": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "13061": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "13062": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13063": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "13064": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3310"
    },
    "13067": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13068": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13070": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13071": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "REVERT",
      "path": "20"
    },
    "13072": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13073": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "POP",
      "path": "20"
    },
    "13074": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "GAS",
      "path": "20"
    },
    "13075": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "13076": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "13077": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13078": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "13079": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3324"
    },
    "13082": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13083": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "13084": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13086": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13087": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "13088": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "13089": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13091": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "REVERT",
      "path": "20"
    },
    "13092": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13093": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "POP",
      "path": "20"
    },
    "13094": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "POP",
      "path": "20"
    },
    "13095": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "POP",
      "path": "20"
    },
    "13096": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "POP",
      "path": "20"
    },
    "13097": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "13099": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13100": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "13101": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "13103": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13104": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "LT",
      "path": "20"
    },
    "13105": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "13106": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x333A"
    },
    "13109": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13110": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13112": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13113": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "REVERT",
      "path": "20"
    },
    "13114": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13115": {
      "op": "POP"
    },
    "13116": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1426,
        1440
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13117": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1416,
        1423
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13118": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1416,
        1423
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13119": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1416,
        1420
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13120": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1416,
        1420
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13121": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1421,
        1422
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "13123": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1421,
        1422
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13124": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1416,
        1423
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13125": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1416,
        1423
      ],
      "op": "LT",
      "path": "20"
    },
    "13126": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1416,
        1423
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x334B"
    },
    "13129": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1416,
        1423
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13130": {
      "dev": "Index out of range",
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1416,
        1423
      ],
      "op": "INVALID",
      "path": "20"
    },
    "13131": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1416,
        1423
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13132": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1416,
        1423
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "13134": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1416,
        1423
      ],
      "op": "MUL",
      "path": "20"
    },
    "13135": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1416,
        1423
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "13137": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1416,
        1423
      ],
      "op": "ADD",
      "path": "20"
    },
    "13138": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1416,
        1423
      ],
      "op": "ADD",
      "path": "20"
    },
    "13139": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1416,
        1440
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13144": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13146": {
      "op": "SHL"
    },
    "13147": {
      "op": "SUB"
    },
    "13148": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1416,
        1440
      ],
      "op": "AND",
      "path": "20"
    },
    "13149": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1416,
        1440
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13150": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1416,
        1440
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13155": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13157": {
      "op": "SHL"
    },
    "13158": {
      "op": "SUB"
    },
    "13159": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1416,
        1440
      ],
      "op": "AND",
      "path": "20"
    },
    "13160": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1416,
        1440
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13161": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1416,
        1440
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13162": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1416,
        1440
      ],
      "op": "POP",
      "path": "20"
    },
    "13163": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1416,
        1440
      ],
      "op": "POP",
      "path": "20"
    },
    "13164": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2316,
        2342
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13166": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2400,
        2418
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13167": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2428
      ],
      "op": "DUP7",
      "path": "20"
    },
    "13168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13172": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13174": {
      "op": "SHL"
    },
    "13175": {
      "op": "SUB"
    },
    "13176": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2442
      ],
      "op": "AND",
      "path": "20"
    },
    "13177": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2442
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xD06CA61F"
    },
    "13182": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2443,
        2454
      ],
      "op": "DUP12",
      "path": "20"
    },
    "13183": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2456,
        2460
      ],
      "op": "DUP6",
      "path": "20"
    },
    "13184": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "13186": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13187": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP4",
      "path": "20"
    },
    "13188": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "13193": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "AND",
      "path": "20"
    },
    "13194": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "13196": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "SHL",
      "path": "20"
    },
    "13197": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13198": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13199": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "13201": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "ADD",
      "path": "20"
    },
    "13202": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13203": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP4",
      "path": "20"
    },
    "13204": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13205": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13206": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "13208": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "ADD",
      "path": "20"
    },
    "13209": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13210": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "13212": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "ADD",
      "path": "20"
    },
    "13213": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13214": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13215": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "SUB",
      "path": "20"
    },
    "13216": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13217": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13218": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP4",
      "path": "20"
    },
    "13219": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13220": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13221": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13222": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13223": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13224": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "13226": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "ADD",
      "path": "20"
    },
    "13227": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "13228": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "POP",
      "path": "20"
    },
    "13229": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13230": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13231": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13232": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "13234": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "ADD",
      "path": "20"
    },
    "13235": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13236": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "13238": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "MUL",
      "path": "20"
    },
    "13239": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13240": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP4",
      "path": "20"
    },
    "13241": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP4",
      "path": "20"
    },
    "13242": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13244": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13245": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP4",
      "path": "20"
    },
    "13246": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13247": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "LT",
      "path": "20"
    },
    "13248": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "13249": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x33D4"
    },
    "13252": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13253": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13254": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13255": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "ADD",
      "path": "20"
    },
    "13256": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13257": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP4",
      "path": "20"
    },
    "13258": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13259": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "ADD",
      "path": "20"
    },
    "13260": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13261": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "13263": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "ADD",
      "path": "20"
    },
    "13264": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x33BC"
    },
    "13267": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "JUMP",
      "path": "20"
    },
    "13268": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13269": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "POP",
      "path": "20"
    },
    "13270": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "POP",
      "path": "20"
    },
    "13271": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "POP",
      "path": "20"
    },
    "13272": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "POP",
      "path": "20"
    },
    "13273": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13274": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "POP",
      "path": "20"
    },
    "13275": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "ADD",
      "path": "20"
    },
    "13276": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "13277": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "POP",
      "path": "20"
    },
    "13278": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "POP",
      "path": "20"
    },
    "13279": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "POP",
      "path": "20"
    },
    "13280": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "POP",
      "path": "20"
    },
    "13281": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13283": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "13285": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13286": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13287": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP4",
      "path": "20"
    },
    "13288": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "SUB",
      "path": "20"
    },
    "13289": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13290": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP7",
      "path": "20"
    },
    "13291": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13292": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "13293": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "13294": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13295": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "13296": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x33F8"
    },
    "13299": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13300": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13302": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13303": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "REVERT",
      "path": "20"
    },
    "13304": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13305": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "POP",
      "path": "20"
    },
    "13306": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "GAS",
      "path": "20"
    },
    "13307": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "13308": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "13309": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13310": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "13311": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x340C"
    },
    "13314": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13315": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "13316": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13318": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13319": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "13320": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "13321": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13323": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "REVERT",
      "path": "20"
    },
    "13324": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13325": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "POP",
      "path": "20"
    },
    "13326": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "POP",
      "path": "20"
    },
    "13327": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "POP",
      "path": "20"
    },
    "13328": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "POP",
      "path": "20"
    },
    "13329": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "13331": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13332": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "13333": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13335": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13336": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "13337": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "13339": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "13340": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13341": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13342": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "ADD",
      "path": "20"
    },
    "13343": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13345": {
      "op": "NOT"
    },
    "13346": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "AND",
      "path": "20"
    },
    "13347": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13348": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "ADD",
      "path": "20"
    },
    "13349": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "13351": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13352": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "13354": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13355": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "LT",
      "path": "20"
    },
    "13356": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "13357": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3435"
    },
    "13360": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13361": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13363": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13364": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "REVERT",
      "path": "20"
    },
    "13365": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13366": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13367": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "ADD",
      "path": "20"
    },
    "13368": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13369": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13370": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13371": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13372": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "13374": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13375": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "13376": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "13377": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "13378": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13379": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP5",
      "path": "20"
    },
    "13380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13382": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13384": {
      "op": "SHL"
    },
    "13385": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13386": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "GT",
      "path": "20"
    },
    "13387": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "13388": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3454"
    },
    "13391": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13392": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13394": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13395": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "REVERT",
      "path": "20"
    },
    "13396": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13397": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13398": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP4",
      "path": "20"
    },
    "13399": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "ADD",
      "path": "20"
    },
    "13400": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13401": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "13403": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13404": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "ADD",
      "path": "20"
    },
    "13405": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP6",
      "path": "20"
    },
    "13406": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13407": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "GT",
      "path": "20"
    },
    "13408": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "13409": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3469"
    },
    "13412": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13413": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13415": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13416": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "REVERT",
      "path": "20"
    },
    "13417": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13418": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13419": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13420": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP7",
      "path": "20"
    },
    "13421": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "13423": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13424": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "MUL",
      "path": "20"
    },
    "13425": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP4",
      "path": "20"
    },
    "13426": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "ADD",
      "path": "20"
    },
    "13427": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "GT",
      "path": "20"
    },
    "13428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13430": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13432": {
      "op": "SHL"
    },
    "13433": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13434": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "GT",
      "path": "20"
    },
    "13435": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "OR",
      "path": "20"
    },
    "13436": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "13437": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3485"
    },
    "13440": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13441": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13443": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13444": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "REVERT",
      "path": "20"
    },
    "13445": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13446": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13447": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13448": {
      "op": "POP"
    },
    "13449": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13450": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13451": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "13453": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "13454": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13455": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "ADD",
      "path": "20"
    },
    "13456": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "13457": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13458": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "ADD",
      "path": "20"
    },
    "13459": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "13460": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "MUL",
      "path": "20"
    },
    "13461": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13462": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP4",
      "path": "20"
    },
    "13463": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP4",
      "path": "20"
    },
    "13464": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13466": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13467": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP4",
      "path": "20"
    },
    "13468": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13469": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "LT",
      "path": "20"
    },
    "13470": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "13471": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x34B2"
    },
    "13474": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13475": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13476": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13477": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "ADD",
      "path": "20"
    },
    "13478": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13479": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP4",
      "path": "20"
    },
    "13480": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13481": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "ADD",
      "path": "20"
    },
    "13482": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13483": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "13485": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "ADD",
      "path": "20"
    },
    "13486": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x349A"
    },
    "13489": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "JUMP",
      "path": "20"
    },
    "13490": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13491": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "POP",
      "path": "20"
    },
    "13492": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "POP",
      "path": "20"
    },
    "13493": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "POP",
      "path": "20"
    },
    "13494": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "POP",
      "path": "20"
    },
    "13495": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13496": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "POP",
      "path": "20"
    },
    "13497": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "ADD",
      "path": "20"
    },
    "13498": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "13500": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13501": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "POP",
      "path": "20"
    },
    "13502": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "POP",
      "path": "20"
    },
    "13503": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2461
      ],
      "op": "POP",
      "path": "20"
    },
    "13504": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2462,
        2463
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13506": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2464
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13507": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2464
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13508": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2464
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13509": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2464
      ],
      "op": "LT",
      "path": "20"
    },
    "13510": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2464
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x34CB"
    },
    "13513": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2464
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13514": {
      "dev": "Index out of range",
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2464
      ],
      "op": "INVALID",
      "path": "20"
    },
    "13515": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2464
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13516": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2464
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "13518": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2464
      ],
      "op": "MUL",
      "path": "20"
    },
    "13519": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2464
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "13521": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2464
      ],
      "op": "ADD",
      "path": "20"
    },
    "13522": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2464
      ],
      "op": "ADD",
      "path": "20"
    },
    "13523": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2421,
        2464
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13524": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2400,
        2464
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13525": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2400,
        2464
      ],
      "op": "POP",
      "path": "20"
    },
    "13526": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2536,
        2541
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 124,
      "value": "0x2710"
    },
    "13529": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2521,
        2534
      ],
      "op": "DUP7",
      "path": "20"
    },
    "13530": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2513,
        2518
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2710"
    },
    "13533": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2513,
        2534
      ],
      "op": "SUB",
      "path": "20"
    },
    "13534": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2499,
        2509
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13535": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2499,
        2535
      ],
      "op": "MUL",
      "path": "20"
    },
    "13536": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2499,
        2541
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13537": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2499,
        2541
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x34E6"
    },
    "13540": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2499,
        2541
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13541": {
      "dev": "Division by zero",
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2499,
        2541
      ],
      "op": "INVALID",
      "path": "20"
    },
    "13542": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2499,
        2541
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13543": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2499,
        2541
      ],
      "op": "DIV",
      "path": "20"
    },
    "13544": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2478,
        2541
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "13545": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2478,
        2541
      ],
      "op": "POP",
      "path": "20"
    },
    "13546": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1062,
        2923
      ],
      "op": "POP",
      "path": "20"
    },
    "13547": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2562,
        2586
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "13549": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2596
      ],
      "op": "DUP7",
      "path": "20"
    },
    "13550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13554": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13556": {
      "op": "SHL"
    },
    "13557": {
      "op": "SUB"
    },
    "13558": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2618
      ],
      "op": "AND",
      "path": "20"
    },
    "13559": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2618
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x18CBAFE5"
    },
    "13564": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2632,
        2643
      ],
      "op": "DUP12",
      "path": "20"
    },
    "13565": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2657,
        2675
      ],
      "op": "DUP5",
      "path": "20"
    },
    "13566": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2738,
        2742
      ],
      "op": "DUP7",
      "path": "20"
    },
    "13567": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2756,
        2758
      ],
      "op": "DUP13",
      "path": "20"
    },
    "13568": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2772,
        2787
      ],
      "op": "TIMESTAMP",
      "path": "20"
    },
    "13569": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "13571": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13572": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP7",
      "path": "20"
    },
    "13573": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "13578": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "AND",
      "path": "20"
    },
    "13579": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "13581": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "SHL",
      "path": "20"
    },
    "13582": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13583": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13584": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "13586": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "ADD",
      "path": "20"
    },
    "13587": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13588": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP7",
      "path": "20"
    },
    "13589": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13590": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13591": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "13593": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "ADD",
      "path": "20"
    },
    "13594": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP6",
      "path": "20"
    },
    "13595": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13596": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13597": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "13599": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "ADD",
      "path": "20"
    },
    "13600": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13601": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "13603": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "ADD",
      "path": "20"
    },
    "13604": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP5",
      "path": "20"
    },
    "13605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13607": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13609": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "13611": {
      "op": "SHL"
    },
    "13612": {
      "op": "SUB"
    },
    "13613": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "AND",
      "path": "20"
    },
    "13614": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13615": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13616": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "13618": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "ADD",
      "path": "20"
    },
    "13619": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP4",
      "path": "20"
    },
    "13620": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13621": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13622": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "13624": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "ADD",
      "path": "20"
    },
    "13625": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13626": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13627": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "SUB",
      "path": "20"
    },
    "13628": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13629": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13630": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP6",
      "path": "20"
    },
    "13631": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13632": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13633": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13634": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13635": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13636": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "13638": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "ADD",
      "path": "20"
    },
    "13639": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "13640": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "POP",
      "path": "20"
    },
    "13641": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13642": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13643": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13644": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "13646": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "ADD",
      "path": "20"
    },
    "13647": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13648": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "13650": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "MUL",
      "path": "20"
    },
    "13651": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13652": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP4",
      "path": "20"
    },
    "13653": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP4",
      "path": "20"
    },
    "13654": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13656": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13657": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP4",
      "path": "20"
    },
    "13658": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13659": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "LT",
      "path": "20"
    },
    "13660": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "13661": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3570"
    },
    "13664": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13665": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13666": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13667": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "ADD",
      "path": "20"
    },
    "13668": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13669": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP4",
      "path": "20"
    },
    "13670": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13671": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "ADD",
      "path": "20"
    },
    "13672": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13673": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "13675": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "ADD",
      "path": "20"
    },
    "13676": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3558"
    },
    "13679": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "JUMP",
      "path": "20"
    },
    "13680": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13681": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "POP",
      "path": "20"
    },
    "13682": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "POP",
      "path": "20"
    },
    "13683": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "POP",
      "path": "20"
    },
    "13684": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "POP",
      "path": "20"
    },
    "13685": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13686": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "POP",
      "path": "20"
    },
    "13687": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "ADD",
      "path": "20"
    },
    "13688": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "SWAP7",
      "path": "20"
    },
    "13689": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "POP",
      "path": "20"
    },
    "13690": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "POP",
      "path": "20"
    },
    "13691": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "POP",
      "path": "20"
    },
    "13692": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "POP",
      "path": "20"
    },
    "13693": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "POP",
      "path": "20"
    },
    "13694": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "POP",
      "path": "20"
    },
    "13695": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "POP",
      "path": "20"
    },
    "13696": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13698": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "13700": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13701": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13702": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP4",
      "path": "20"
    },
    "13703": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "SUB",
      "path": "20"
    },
    "13704": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13705": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13707": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP8",
      "path": "20"
    },
    "13708": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13709": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "13710": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "13711": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13712": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "13713": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3599"
    },
    "13716": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13717": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13719": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13720": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "REVERT",
      "path": "20"
    },
    "13721": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13722": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "POP",
      "path": "20"
    },
    "13723": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "GAS",
      "path": "20"
    },
    "13724": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "CALL",
      "path": "20"
    },
    "13725": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "13726": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13727": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "13728": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x35AD"
    },
    "13731": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13732": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "13733": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13735": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13736": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "13737": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "13738": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13740": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "REVERT",
      "path": "20"
    },
    "13741": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13742": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "POP",
      "path": "20"
    },
    "13743": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "POP",
      "path": "20"
    },
    "13744": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "POP",
      "path": "20"
    },
    "13745": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "POP",
      "path": "20"
    },
    "13746": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "13748": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13749": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "13750": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13752": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13753": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "13754": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "13756": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "13757": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13758": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13759": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "ADD",
      "path": "20"
    },
    "13760": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "13762": {
      "op": "NOT"
    },
    "13763": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "AND",
      "path": "20"
    },
    "13764": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13765": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "ADD",
      "path": "20"
    },
    "13766": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "13768": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13769": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "13771": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13772": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "LT",
      "path": "20"
    },
    "13773": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "13774": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x35D6"
    },
    "13777": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13778": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13780": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13781": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "REVERT",
      "path": "20"
    },
    "13782": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13783": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13784": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "ADD",
      "path": "20"
    },
    "13785": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13786": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13787": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13788": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13789": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "13791": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13792": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "13793": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "13794": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "13795": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13796": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP5",
      "path": "20"
    },
    "13797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13799": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13801": {
      "op": "SHL"
    },
    "13802": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13803": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "GT",
      "path": "20"
    },
    "13804": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "13805": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x35F5"
    },
    "13808": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13809": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13811": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13812": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "REVERT",
      "path": "20"
    },
    "13813": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13814": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13815": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP4",
      "path": "20"
    },
    "13816": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "ADD",
      "path": "20"
    },
    "13817": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13818": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "13820": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13821": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "ADD",
      "path": "20"
    },
    "13822": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP6",
      "path": "20"
    },
    "13823": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13824": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "GT",
      "path": "20"
    },
    "13825": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "13826": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x360A"
    },
    "13829": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13830": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13832": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13833": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "REVERT",
      "path": "20"
    },
    "13834": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13835": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13836": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13837": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP7",
      "path": "20"
    },
    "13838": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "13840": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13841": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "MUL",
      "path": "20"
    },
    "13842": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP4",
      "path": "20"
    },
    "13843": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "ADD",
      "path": "20"
    },
    "13844": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "GT",
      "path": "20"
    },
    "13845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "13847": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "13849": {
      "op": "SHL"
    },
    "13850": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13851": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "GT",
      "path": "20"
    },
    "13852": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "OR",
      "path": "20"
    },
    "13853": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "13854": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3626"
    },
    "13857": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13858": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13860": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13861": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "REVERT",
      "path": "20"
    },
    "13862": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13863": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13864": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13865": {
      "op": "POP"
    },
    "13866": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13867": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13868": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "13870": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "13871": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13872": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "ADD",
      "path": "20"
    },
    "13873": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "13874": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13875": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "ADD",
      "path": "20"
    },
    "13876": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "13877": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "MUL",
      "path": "20"
    },
    "13878": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13879": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP4",
      "path": "20"
    },
    "13880": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP4",
      "path": "20"
    },
    "13881": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13883": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13884": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP4",
      "path": "20"
    },
    "13885": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13886": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "LT",
      "path": "20"
    },
    "13887": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "13888": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3653"
    },
    "13891": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13892": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13893": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13894": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "ADD",
      "path": "20"
    },
    "13895": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13896": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP4",
      "path": "20"
    },
    "13897": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "DUP3",
      "path": "20"
    },
    "13898": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "ADD",
      "path": "20"
    },
    "13899": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13900": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "13902": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "ADD",
      "path": "20"
    },
    "13903": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x363B"
    },
    "13906": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "JUMP",
      "path": "20"
    },
    "13907": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13908": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "POP",
      "path": "20"
    },
    "13909": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "POP",
      "path": "20"
    },
    "13910": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "POP",
      "path": "20"
    },
    "13911": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "POP",
      "path": "20"
    },
    "13912": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13913": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "POP",
      "path": "20"
    },
    "13914": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "ADD",
      "path": "20"
    },
    "13915": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "13917": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13918": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "POP",
      "path": "20"
    },
    "13919": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "POP",
      "path": "20"
    },
    "13920": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2589,
        2797
      ],
      "op": "POP",
      "path": "20"
    },
    "13921": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2562,
        2797
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "13922": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2562,
        2797
      ],
      "op": "POP",
      "path": "20"
    },
    "13923": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2816,
        2823
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 125
    },
    "13924": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2824,
        2825
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13926": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2816,
        2826
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13927": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2816,
        2826
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13928": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2816,
        2826
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13929": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2816,
        2826
      ],
      "op": "LT",
      "path": "20"
    },
    "13930": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2816,
        2826
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x366F"
    },
    "13933": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2816,
        2826
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13934": {
      "dev": "Index out of range",
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2816,
        2826
      ],
      "op": "INVALID",
      "path": "20"
    },
    "13935": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2816,
        2826
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13936": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2816,
        2826
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "13938": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2816,
        2826
      ],
      "op": "MUL",
      "path": "20"
    },
    "13939": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2816,
        2826
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "13941": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2816,
        2826
      ],
      "op": "ADD",
      "path": "20"
    },
    "13942": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2816,
        2826
      ],
      "op": "ADD",
      "path": "20"
    },
    "13943": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2816,
        2826
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13944": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2830,
        2831
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13946": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2816,
        2831
      ],
      "op": "EQ",
      "path": "20"
    },
    "13947": {
      "branch": 245,
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2816,
        2831
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "13948": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2816,
        2850
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13949": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2816,
        2850
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "13950": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2816,
        2850
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x369C"
    },
    "13953": {
      "branch": 245,
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2816,
        2850
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13954": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2816,
        2850
      ],
      "op": "POP",
      "path": "20"
    },
    "13955": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2840,
        2847
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13956": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2848,
        2849
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "13958": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2840,
        2850
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13959": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2840,
        2850
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13960": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2840,
        2850
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13961": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2840,
        2850
      ],
      "op": "LT",
      "path": "20"
    },
    "13962": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2840,
        2850
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x368F"
    },
    "13965": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2840,
        2850
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13966": {
      "dev": "Index out of range",
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2840,
        2850
      ],
      "op": "INVALID",
      "path": "20"
    },
    "13967": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2840,
        2850
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13968": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2840,
        2850
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "13970": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2840,
        2850
      ],
      "op": "MUL",
      "path": "20"
    },
    "13971": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2840,
        2850
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "13973": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2840,
        2850
      ],
      "op": "ADD",
      "path": "20"
    },
    "13974": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2840,
        2850
      ],
      "op": "ADD",
      "path": "20"
    },
    "13975": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2840,
        2850
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13976": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2835,
        2836
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "13978": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2835,
        2850
      ],
      "op": "EQ",
      "path": "20"
    },
    "13979": {
      "branch": 246,
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2835,
        2850
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "13980": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2816,
        2850
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "13981": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2808,
        2875
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x36E4"
    },
    "13984": {
      "branch": 246,
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2808,
        2875
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "13985": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2808,
        2875
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "13987": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2808,
        2875
      ],
      "op": "DUP1",
      "path": "20"
    },
    "13988": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2808,
        2875
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "13989": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "13993": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "13995": {
      "op": "SHL"
    },
    "13996": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2808,
        2875
      ],
      "op": "DUP2",
      "path": "20"
    },
    "13997": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2808,
        2875
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "13998": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2808,
        2875
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "14000": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2808,
        2875
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "14002": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2808,
        2875
      ],
      "op": "DUP3",
      "path": "20"
    },
    "14003": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2808,
        2875
      ],
      "op": "ADD",
      "path": "20"
    },
    "14004": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2808,
        2875
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "14005": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2808,
        2875
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x14"
    },
    "14007": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2808,
        2875
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "14009": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2808,
        2875
      ],
      "op": "DUP3",
      "path": "20"
    },
    "14010": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2808,
        2875
      ],
      "op": "ADD",
      "path": "20"
    },
    "14011": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2808,
        2875
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "14012": {
      "op": "PUSH20",
      "value": "0x39BBB0B822BC30B1BA22AA24103330B4B632B217"
    },
    "14033": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "14035": {
      "op": "SHL"
    },
    "14036": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2808,
        2875
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "14038": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2808,
        2875
      ],
      "op": "DUP3",
      "path": "20"
    },
    "14039": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2808,
        2875
      ],
      "op": "ADD",
      "path": "20"
    },
    "14040": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2808,
        2875
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "14041": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2808,
        2875
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "14042": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2808,
        2875
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "14043": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2808,
        2875
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "14044": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2808,
        2875
      ],
      "op": "DUP2",
      "path": "20"
    },
    "14045": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2808,
        2875
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "14046": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2808,
        2875
      ],
      "op": "SUB",
      "path": "20"
    },
    "14047": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2808,
        2875
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "14049": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2808,
        2875
      ],
      "op": "ADD",
      "path": "20"
    },
    "14050": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2808,
        2875
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "14051": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2808,
        2875
      ],
      "op": "REVERT",
      "path": "20"
    },
    "14052": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2808,
        2875
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14053": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2893,
        2900
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 126
    },
    "14054": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2901,
        2902
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "14056": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2893,
        2903
      ],
      "op": "DUP2",
      "path": "20"
    },
    "14057": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2893,
        2903
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "14058": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2893,
        2903
      ],
      "op": "DUP2",
      "path": "20"
    },
    "14059": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2893,
        2903
      ],
      "op": "LT",
      "path": "20"
    },
    "14060": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2893,
        2903
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x36F1"
    },
    "14063": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2893,
        2903
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "14064": {
      "dev": "Index out of range",
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2893,
        2903
      ],
      "op": "INVALID",
      "path": "20"
    },
    "14065": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2893,
        2903
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14066": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2893,
        2903
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "14068": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2893,
        2903
      ],
      "op": "MUL",
      "path": "20"
    },
    "14069": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2893,
        2903
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "14071": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2893,
        2903
      ],
      "op": "ADD",
      "path": "20"
    },
    "14072": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2893,
        2903
      ],
      "op": "ADD",
      "path": "20"
    },
    "14073": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2893,
        2903
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "14074": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2905,
        2912
      ],
      "op": "DUP2",
      "path": "20"
    },
    "14075": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2913,
        2914
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "14077": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2905,
        2915
      ],
      "op": "DUP2",
      "path": "20"
    },
    "14078": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2905,
        2915
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "14079": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2905,
        2915
      ],
      "op": "DUP2",
      "path": "20"
    },
    "14080": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2905,
        2915
      ],
      "op": "LT",
      "path": "20"
    },
    "14081": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2905,
        2915
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3706"
    },
    "14084": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2905,
        2915
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "14085": {
      "dev": "Index out of range",
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2905,
        2915
      ],
      "op": "INVALID",
      "path": "20"
    },
    "14086": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2905,
        2915
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14087": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2905,
        2915
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "14089": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2905,
        2915
      ],
      "op": "MUL",
      "path": "20"
    },
    "14090": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2905,
        2915
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "14092": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2905,
        2915
      ],
      "op": "ADD",
      "path": "20"
    },
    "14093": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2905,
        2915
      ],
      "op": "ADD",
      "path": "20"
    },
    "14094": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2905,
        2915
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "14095": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2885,
        2916
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "14096": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2885,
        2916
      ],
      "op": "POP",
      "path": "20"
    },
    "14097": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2885,
        2916
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "14098": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2885,
        2916
      ],
      "op": "POP",
      "path": "20"
    },
    "14099": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2885,
        2916
      ],
      "op": "POP",
      "path": "20"
    },
    "14100": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2885,
        2916
      ],
      "op": "POP",
      "path": "20"
    },
    "14101": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        2885,
        2916
      ],
      "op": "POP",
      "path": "20"
    },
    "14102": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1062,
        2923
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "14103": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1062,
        2923
      ],
      "op": "POP",
      "path": "20"
    },
    "14104": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1062,
        2923
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "14105": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1062,
        2923
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "14106": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1062,
        2923
      ],
      "op": "POP",
      "path": "20"
    },
    "14107": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1062,
        2923
      ],
      "op": "POP",
      "path": "20"
    },
    "14108": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1062,
        2923
      ],
      "op": "POP",
      "path": "20"
    },
    "14109": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "offset": [
        1062,
        2923
      ],
      "op": "POP",
      "path": "20"
    },
    "14110": {
      "fn": "UniswapHelpers._swapExactTokensForETH",
      "jump": "o",
      "offset": [
        1062,
        2923
      ],
      "op": "JUMP",
      "path": "20"
    },
    "14111": {
      "fn": "ERC721._exists",
      "offset": [
        10383,
        10508
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "14112": {
      "fn": "ERC721._exists",
      "offset": [
        10448,
        10452
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "14114": {
      "fn": "ERC721._exists",
      "offset": [
        10471,
        10501
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 127,
      "value": "0x10EE"
    },
    "14117": {
      "fn": "ERC721._exists",
      "offset": [
        10471,
        10483
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "14119": {
      "fn": "ERC721._exists",
      "offset": [
        10493,
        10500
      ],
      "op": "DUP4",
      "path": "4"
    },
    "14120": {
      "fn": "ERC721._exists",
      "offset": [
        10471,
        10492
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4323"
    },
    "14123": {
      "fn": "ERC721._exists",
      "jump": "i",
      "offset": [
        10471,
        10501
      ],
      "op": "JUMP",
      "path": "4"
    },
    "14124": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "14125": {
      "fn": "Context._msgSender",
      "offset": [
        685,
        695
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 128
    },
    "14126": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "14127": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        598,
        702
      ],
      "op": "JUMP",
      "path": "10"
    },
    "14128": {
      "fn": "ERC721._approve",
      "offset": [
        16119,
        16299
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "14129": {
      "fn": "ERC721._approve",
      "offset": [
        16184,
        16208
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 129,
      "value": "0x0"
    },
    "14131": {
      "fn": "ERC721._approve",
      "offset": [
        16184,
        16208
      ],
      "op": "DUP2",
      "path": "4"
    },
    "14132": {
      "fn": "ERC721._approve",
      "offset": [
        16184,
        16208
      ],
      "op": "DUP2",
      "path": "4"
    },
    "14133": {
      "fn": "ERC721._approve",
      "offset": [
        16184,
        16208
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "14134": {
      "fn": "ERC721._approve",
      "offset": [
        16184,
        16199
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "14136": {
      "fn": "ERC721._approve",
      "offset": [
        16184,
        16208
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "14138": {
      "fn": "ERC721._approve",
      "offset": [
        16184,
        16208
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "14139": {
      "fn": "ERC721._approve",
      "offset": [
        16184,
        16208
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "14141": {
      "fn": "ERC721._approve",
      "offset": [
        16184,
        16208
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "14142": {
      "fn": "ERC721._approve",
      "offset": [
        16184,
        16208
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "14143": {
      "fn": "ERC721._approve",
      "offset": [
        16184,
        16213
      ],
      "op": "DUP1",
      "path": "4"
    },
    "14144": {
      "fn": "ERC721._approve",
      "offset": [
        16184,
        16213
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "14145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14149": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14151": {
      "op": "SHL"
    },
    "14152": {
      "op": "SUB"
    },
    "14153": {
      "op": "NOT"
    },
    "14154": {
      "fn": "ERC721._approve",
      "offset": [
        16184,
        16213
      ],
      "op": "AND",
      "path": "4"
    },
    "14155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14159": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14161": {
      "op": "SHL"
    },
    "14162": {
      "op": "SUB"
    },
    "14163": {
      "fn": "ERC721._approve",
      "offset": [
        16184,
        16213
      ],
      "op": "DUP5",
      "path": "4"
    },
    "14164": {
      "fn": "ERC721._approve",
      "offset": [
        16184,
        16213
      ],
      "op": "AND",
      "path": "4"
    },
    "14165": {
      "fn": "ERC721._approve",
      "offset": [
        16184,
        16213
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "14166": {
      "fn": "ERC721._approve",
      "offset": [
        16184,
        16213
      ],
      "op": "DUP2",
      "path": "4"
    },
    "14167": {
      "fn": "ERC721._approve",
      "offset": [
        16184,
        16213
      ],
      "op": "OR",
      "path": "4"
    },
    "14168": {
      "fn": "ERC721._approve",
      "offset": [
        16184,
        16213
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "14169": {
      "fn": "ERC721._approve",
      "offset": [
        16184,
        16213
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "14170": {
      "fn": "ERC721._approve",
      "offset": [
        16184,
        16213
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "14171": {
      "fn": "ERC721._approve",
      "offset": [
        16184,
        16208
      ],
      "op": "DUP2",
      "path": "4"
    },
    "14172": {
      "fn": "ERC721._approve",
      "offset": [
        16184,
        16208
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "14173": {
      "fn": "ERC721._approve",
      "offset": [
        16237,
        16260
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 130,
      "value": "0x3765"
    },
    "14176": {
      "fn": "ERC721._approve",
      "offset": [
        16184,
        16208
      ],
      "op": "DUP3",
      "path": "4"
    },
    "14177": {
      "fn": "ERC721._approve",
      "offset": [
        16237,
        16251
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E50"
    },
    "14180": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        16237,
        16260
      ],
      "op": "JUMP",
      "path": "4"
    },
    "14181": {
      "fn": "ERC721._approve",
      "offset": [
        16237,
        16260
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "14182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14186": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14188": {
      "op": "SHL"
    },
    "14189": {
      "op": "SUB"
    },
    "14190": {
      "fn": "ERC721._approve",
      "offset": [
        16228,
        16274
      ],
      "op": "AND",
      "path": "4"
    },
    "14191": {
      "fn": "ERC721._approve",
      "offset": [
        16228,
        16274
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "14224": {
      "fn": "ERC721._approve",
      "offset": [
        16228,
        16274
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "14226": {
      "fn": "ERC721._approve",
      "offset": [
        16228,
        16274
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "14227": {
      "fn": "ERC721._approve",
      "offset": [
        16228,
        16274
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "14229": {
      "fn": "ERC721._approve",
      "offset": [
        16228,
        16274
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "14230": {
      "fn": "ERC721._approve",
      "offset": [
        16228,
        16274
      ],
      "op": "DUP1",
      "path": "4"
    },
    "14231": {
      "fn": "ERC721._approve",
      "offset": [
        16228,
        16274
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "14232": {
      "fn": "ERC721._approve",
      "offset": [
        16228,
        16274
      ],
      "op": "SUB",
      "path": "4"
    },
    "14233": {
      "fn": "ERC721._approve",
      "offset": [
        16228,
        16274
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "14234": {
      "fn": "ERC721._approve",
      "offset": [
        16228,
        16274
      ],
      "op": "LOG4",
      "path": "4"
    },
    "14235": {
      "fn": "ERC721._approve",
      "offset": [
        16119,
        16299
      ],
      "op": "POP",
      "path": "4"
    },
    "14236": {
      "fn": "ERC721._approve",
      "offset": [
        16119,
        16299
      ],
      "op": "POP",
      "path": "4"
    },
    "14237": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        16119,
        16299
      ],
      "op": "JUMP",
      "path": "4"
    },
    "14238": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10666,
        11017
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "14239": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10759,
        10763
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "14241": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10783,
        10799
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 131,
      "value": "0x37A9"
    },
    "14244": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10791,
        10798
      ],
      "op": "DUP3",
      "path": "4"
    },
    "14245": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10783,
        10790
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x371F"
    },
    "14248": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        10783,
        10799
      ],
      "op": "JUMP",
      "path": "4"
    },
    "14249": {
      "branch": 268,
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10783,
        10799
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "14250": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10775,
        10848
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x37E4"
    },
    "14253": {
      "branch": 268,
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10775,
        10848
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "14254": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10775,
        10848
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "14256": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10775,
        10848
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "14257": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14261": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14263": {
      "op": "SHL"
    },
    "14264": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10775,
        10848
      ],
      "op": "DUP2",
      "path": "4"
    },
    "14265": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10775,
        10848
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "14266": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10775,
        10848
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "14268": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10775,
        10848
      ],
      "op": "ADD",
      "path": "4"
    },
    "14269": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10775,
        10848
      ],
      "op": "DUP1",
      "path": "4"
    },
    "14270": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10775,
        10848
      ],
      "op": "DUP1",
      "path": "4"
    },
    "14271": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10775,
        10848
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "14273": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10775,
        10848
      ],
      "op": "ADD",
      "path": "4"
    },
    "14274": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10775,
        10848
      ],
      "op": "DUP3",
      "path": "4"
    },
    "14275": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10775,
        10848
      ],
      "op": "DUP2",
      "path": "4"
    },
    "14276": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10775,
        10848
      ],
      "op": "SUB",
      "path": "4"
    },
    "14277": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10775,
        10848
      ],
      "op": "DUP3",
      "path": "4"
    },
    "14278": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10775,
        10848
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "14279": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10775,
        10848
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2C"
    },
    "14281": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10775,
        10848
      ],
      "op": "DUP2",
      "path": "4"
    },
    "14282": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10775,
        10848
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "14283": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10775,
        10848
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "14285": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10775,
        10848
      ],
      "op": "ADD",
      "path": "4"
    },
    "14286": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10775,
        10848
      ],
      "op": "DUP1",
      "path": "4"
    },
    "14287": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10775,
        10848
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x530D"
    },
    "14290": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10775,
        10848
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2C"
    },
    "14292": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10775,
        10848
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "14293": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10775,
        10848
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "14294": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10775,
        10848
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "14296": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10775,
        10848
      ],
      "op": "ADD",
      "path": "4"
    },
    "14297": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10775,
        10848
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "14298": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10775,
        10848
      ],
      "op": "POP",
      "path": "4"
    },
    "14299": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10775,
        10848
      ],
      "op": "POP",
      "path": "4"
    },
    "14300": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10775,
        10848
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "14302": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10775,
        10848
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "14303": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10775,
        10848
      ],
      "op": "DUP1",
      "path": "4"
    },
    "14304": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10775,
        10848
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "14305": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10775,
        10848
      ],
      "op": "SUB",
      "path": "4"
    },
    "14306": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10775,
        10848
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "14307": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10775,
        10848
      ],
      "op": "REVERT",
      "path": "4"
    },
    "14308": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10775,
        10848
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "14309": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10858,
        10871
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "14311": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10874,
        10897
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x37EF"
    },
    "14314": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10889,
        10896
      ],
      "op": "DUP4",
      "path": "4"
    },
    "14315": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10874,
        10888
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E50"
    },
    "14318": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        10874,
        10897
      ],
      "op": "JUMP",
      "path": "4"
    },
    "14319": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10874,
        10897
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "14320": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10858,
        10897
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "14321": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10858,
        10897
      ],
      "op": "POP",
      "path": "4"
    },
    "14322": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10926,
        10931
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 132
    },
    "14323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14327": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14329": {
      "op": "SHL"
    },
    "14330": {
      "op": "SUB"
    },
    "14331": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10915,
        10931
      ],
      "op": "AND",
      "path": "4"
    },
    "14332": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10915,
        10922
      ],
      "op": "DUP5",
      "path": "4"
    },
    "14333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14337": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14339": {
      "op": "SHL"
    },
    "14340": {
      "op": "SUB"
    },
    "14341": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10915,
        10931
      ],
      "op": "AND",
      "path": "4"
    },
    "14342": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10915,
        10931
      ],
      "op": "EQ",
      "path": "4"
    },
    "14343": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10915,
        10966
      ],
      "op": "DUP1",
      "path": "4"
    },
    "14344": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10915,
        10966
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x382A"
    },
    "14347": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10915,
        10966
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "14348": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10915,
        10966
      ],
      "op": "POP",
      "path": "4"
    },
    "14349": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10959,
        10966
      ],
      "op": "DUP4",
      "path": "4"
    },
    "14350": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14354": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14356": {
      "op": "SHL"
    },
    "14357": {
      "op": "SUB"
    },
    "14358": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10935,
        10966
      ],
      "op": "AND",
      "path": "4"
    },
    "14359": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10935,
        10955
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x381F"
    },
    "14362": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10947,
        10954
      ],
      "op": "DUP5",
      "path": "4"
    },
    "14363": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10935,
        10946
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1364"
    },
    "14366": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        10935,
        10955
      ],
      "op": "JUMP",
      "path": "4"
    },
    "14367": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10935,
        10955
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "14368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14372": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14374": {
      "op": "SHL"
    },
    "14375": {
      "op": "SUB"
    },
    "14376": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10935,
        10966
      ],
      "op": "AND",
      "path": "4"
    },
    "14377": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10935,
        10966
      ],
      "op": "EQ",
      "path": "4"
    },
    "14378": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10915,
        10966
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "14379": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10915,
        11009
      ],
      "op": "DUP1",
      "path": "4"
    },
    "14380": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10915,
        11009
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x383A"
    },
    "14383": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10915,
        11009
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "14384": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10915,
        11009
      ],
      "op": "POP",
      "path": "4"
    },
    "14385": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10970,
        11009
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x383A"
    },
    "14388": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10994,
        10999
      ],
      "op": "DUP2",
      "path": "4"
    },
    "14389": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        11001,
        11008
      ],
      "op": "DUP6",
      "path": "4"
    },
    "14390": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10970,
        10993
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2BF4"
    },
    "14393": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        10970,
        11009
      ],
      "op": "JUMP",
      "path": "4"
    },
    "14394": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10970,
        11009
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "14395": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10907,
        11010
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "14396": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10666,
        11017
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "14397": {
      "op": "POP"
    },
    "14398": {
      "op": "POP"
    },
    "14399": {
      "op": "POP"
    },
    "14400": {
      "op": "POP"
    },
    "14401": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        10666,
        11017
      ],
      "op": "JUMP",
      "path": "4"
    },
    "14402": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14438,
        14650
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "14403": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14537,
        14553
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 133,
      "value": "0x384B"
    },
    "14406": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14545,
        14552
      ],
      "op": "DUP3",
      "path": "4"
    },
    "14407": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14537,
        14544
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x371F"
    },
    "14410": {
      "fn": "ERC721._setTokenURI",
      "jump": "i",
      "offset": [
        14537,
        14553
      ],
      "op": "JUMP",
      "path": "4"
    },
    "14411": {
      "branch": 269,
      "fn": "ERC721._setTokenURI",
      "offset": [
        14537,
        14553
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "14412": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14529,
        14602
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3886"
    },
    "14415": {
      "branch": 269,
      "fn": "ERC721._setTokenURI",
      "offset": [
        14529,
        14602
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "14416": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14529,
        14602
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "14418": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14529,
        14602
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "14419": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14423": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14425": {
      "op": "SHL"
    },
    "14426": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14529,
        14602
      ],
      "op": "DUP2",
      "path": "4"
    },
    "14427": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14529,
        14602
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "14428": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14529,
        14602
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "14430": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14529,
        14602
      ],
      "op": "ADD",
      "path": "4"
    },
    "14431": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14529,
        14602
      ],
      "op": "DUP1",
      "path": "4"
    },
    "14432": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14529,
        14602
      ],
      "op": "DUP1",
      "path": "4"
    },
    "14433": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14529,
        14602
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "14435": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14529,
        14602
      ],
      "op": "ADD",
      "path": "4"
    },
    "14436": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14529,
        14602
      ],
      "op": "DUP3",
      "path": "4"
    },
    "14437": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14529,
        14602
      ],
      "op": "DUP2",
      "path": "4"
    },
    "14438": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14529,
        14602
      ],
      "op": "SUB",
      "path": "4"
    },
    "14439": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14529,
        14602
      ],
      "op": "DUP3",
      "path": "4"
    },
    "14440": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14529,
        14602
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "14441": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14529,
        14602
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2C"
    },
    "14443": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14529,
        14602
      ],
      "op": "DUP2",
      "path": "4"
    },
    "14444": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14529,
        14602
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "14445": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14529,
        14602
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "14447": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14529,
        14602
      ],
      "op": "ADD",
      "path": "4"
    },
    "14448": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14529,
        14602
      ],
      "op": "DUP1",
      "path": "4"
    },
    "14449": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14529,
        14602
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5651"
    },
    "14452": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14529,
        14602
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2C"
    },
    "14454": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14529,
        14602
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "14455": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14529,
        14602
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "14456": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14529,
        14602
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "14458": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14529,
        14602
      ],
      "op": "ADD",
      "path": "4"
    },
    "14459": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14529,
        14602
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "14460": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14529,
        14602
      ],
      "op": "POP",
      "path": "4"
    },
    "14461": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14529,
        14602
      ],
      "op": "POP",
      "path": "4"
    },
    "14462": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14529,
        14602
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "14464": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14529,
        14602
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "14465": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14529,
        14602
      ],
      "op": "DUP1",
      "path": "4"
    },
    "14466": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14529,
        14602
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "14467": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14529,
        14602
      ],
      "op": "SUB",
      "path": "4"
    },
    "14468": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14529,
        14602
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "14469": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14529,
        14602
      ],
      "op": "REVERT",
      "path": "4"
    },
    "14470": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14529,
        14602
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "14471": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14612,
        14631
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 134,
      "value": "0x0"
    },
    "14473": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14612,
        14631
      ],
      "op": "DUP3",
      "path": "4"
    },
    "14474": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14612,
        14631
      ],
      "op": "DUP2",
      "path": "4"
    },
    "14475": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14612,
        14631
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "14476": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14612,
        14622
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "14478": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14612,
        14631
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "14480": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14612,
        14631
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "14481": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14612,
        14631
      ],
      "op": "DUP2",
      "path": "4"
    },
    "14482": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14612,
        14631
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "14483": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14612,
        14631
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "14485": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14612,
        14631
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "14486": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14612,
        14631
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "14487": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14612,
        14631
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "14488": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14612,
        14643
      ],
      "op": "DUP3",
      "path": "4"
    },
    "14489": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14612,
        14643
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "14490": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14612,
        14643
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x149C"
    },
    "14493": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14612,
        14643
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "14494": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14612,
        14643
      ],
      "op": "DUP5",
      "path": "4"
    },
    "14495": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14612,
        14643
      ],
      "op": "ADD",
      "path": "4"
    },
    "14496": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14612,
        14643
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "14497": {
      "fn": "ERC721._setTokenURI",
      "offset": [
        14612,
        14643
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4D68"
    },
    "14500": {
      "fn": "ERC721._setTokenURI",
      "jump": "i",
      "offset": [
        14612,
        14643
      ],
      "op": "JUMP",
      "path": "4"
    },
    "14501": {
      "fn": "EnumerableMap.length",
      "offset": [
        7820,
        7941
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "14502": {
      "fn": "EnumerableMap.length",
      "offset": [
        7889,
        7896
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "14504": {
      "fn": "EnumerableMap.length",
      "offset": [
        7915,
        7934
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 135,
      "value": "0x10EE"
    },
    "14507": {
      "fn": "EnumerableMap.length",
      "offset": [
        7923,
        7926
      ],
      "op": "DUP3",
      "path": "11"
    },
    "14508": {
      "fn": "EnumerableMap.length",
      "offset": [
        7915,
        7922
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x432F"
    },
    "14511": {
      "fn": "EnumerableMap.length",
      "jump": "i",
      "offset": [
        7915,
        7934
      ],
      "op": "JUMP",
      "path": "11"
    },
    "14512": {
      "fn": "ERC721._transfer",
      "offset": [
        13707,
        14291
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "14513": {
      "fn": "ERC721._transfer",
      "offset": [
        13831,
        13835
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 136
    },
    "14514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14518": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14520": {
      "op": "SHL"
    },
    "14521": {
      "op": "SUB"
    },
    "14522": {
      "fn": "ERC721._transfer",
      "offset": [
        13804,
        13835
      ],
      "op": "AND",
      "path": "4"
    },
    "14523": {
      "fn": "ERC721._transfer",
      "offset": [
        13804,
        13827
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x38C3"
    },
    "14526": {
      "fn": "ERC721._transfer",
      "offset": [
        13819,
        13826
      ],
      "op": "DUP3",
      "path": "4"
    },
    "14527": {
      "fn": "ERC721._transfer",
      "offset": [
        13804,
        13818
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E50"
    },
    "14530": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        13804,
        13827
      ],
      "op": "JUMP",
      "path": "4"
    },
    "14531": {
      "fn": "ERC721._transfer",
      "offset": [
        13804,
        13827
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "14532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14536": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14538": {
      "op": "SHL"
    },
    "14539": {
      "op": "SUB"
    },
    "14540": {
      "fn": "ERC721._transfer",
      "offset": [
        13804,
        13835
      ],
      "op": "AND",
      "path": "4"
    },
    "14541": {
      "branch": 270,
      "fn": "ERC721._transfer",
      "offset": [
        13804,
        13835
      ],
      "op": "EQ",
      "path": "4"
    },
    "14542": {
      "fn": "ERC721._transfer",
      "offset": [
        13796,
        13881
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3908"
    },
    "14545": {
      "branch": 270,
      "fn": "ERC721._transfer",
      "offset": [
        13796,
        13881
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "14546": {
      "fn": "ERC721._transfer",
      "offset": [
        13796,
        13881
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "14548": {
      "fn": "ERC721._transfer",
      "offset": [
        13796,
        13881
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "14549": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14553": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14555": {
      "op": "SHL"
    },
    "14556": {
      "fn": "ERC721._transfer",
      "offset": [
        13796,
        13881
      ],
      "op": "DUP2",
      "path": "4"
    },
    "14557": {
      "fn": "ERC721._transfer",
      "offset": [
        13796,
        13881
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "14558": {
      "fn": "ERC721._transfer",
      "offset": [
        13796,
        13881
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "14560": {
      "fn": "ERC721._transfer",
      "offset": [
        13796,
        13881
      ],
      "op": "ADD",
      "path": "4"
    },
    "14561": {
      "fn": "ERC721._transfer",
      "offset": [
        13796,
        13881
      ],
      "op": "DUP1",
      "path": "4"
    },
    "14562": {
      "fn": "ERC721._transfer",
      "offset": [
        13796,
        13881
      ],
      "op": "DUP1",
      "path": "4"
    },
    "14563": {
      "fn": "ERC721._transfer",
      "offset": [
        13796,
        13881
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "14565": {
      "fn": "ERC721._transfer",
      "offset": [
        13796,
        13881
      ],
      "op": "ADD",
      "path": "4"
    },
    "14566": {
      "fn": "ERC721._transfer",
      "offset": [
        13796,
        13881
      ],
      "op": "DUP3",
      "path": "4"
    },
    "14567": {
      "fn": "ERC721._transfer",
      "offset": [
        13796,
        13881
      ],
      "op": "DUP2",
      "path": "4"
    },
    "14568": {
      "fn": "ERC721._transfer",
      "offset": [
        13796,
        13881
      ],
      "op": "SUB",
      "path": "4"
    },
    "14569": {
      "fn": "ERC721._transfer",
      "offset": [
        13796,
        13881
      ],
      "op": "DUP3",
      "path": "4"
    },
    "14570": {
      "fn": "ERC721._transfer",
      "offset": [
        13796,
        13881
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "14571": {
      "fn": "ERC721._transfer",
      "offset": [
        13796,
        13881
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x29"
    },
    "14573": {
      "fn": "ERC721._transfer",
      "offset": [
        13796,
        13881
      ],
      "op": "DUP2",
      "path": "4"
    },
    "14574": {
      "fn": "ERC721._transfer",
      "offset": [
        13796,
        13881
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "14575": {
      "fn": "ERC721._transfer",
      "offset": [
        13796,
        13881
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "14577": {
      "fn": "ERC721._transfer",
      "offset": [
        13796,
        13881
      ],
      "op": "ADD",
      "path": "4"
    },
    "14578": {
      "fn": "ERC721._transfer",
      "offset": [
        13796,
        13881
      ],
      "op": "DUP1",
      "path": "4"
    },
    "14579": {
      "fn": "ERC721._transfer",
      "offset": [
        13796,
        13881
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x56F0"
    },
    "14582": {
      "fn": "ERC721._transfer",
      "offset": [
        13796,
        13881
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x29"
    },
    "14584": {
      "fn": "ERC721._transfer",
      "offset": [
        13796,
        13881
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "14585": {
      "fn": "ERC721._transfer",
      "offset": [
        13796,
        13881
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "14586": {
      "fn": "ERC721._transfer",
      "offset": [
        13796,
        13881
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "14588": {
      "fn": "ERC721._transfer",
      "offset": [
        13796,
        13881
      ],
      "op": "ADD",
      "path": "4"
    },
    "14589": {
      "fn": "ERC721._transfer",
      "offset": [
        13796,
        13881
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "14590": {
      "fn": "ERC721._transfer",
      "offset": [
        13796,
        13881
      ],
      "op": "POP",
      "path": "4"
    },
    "14591": {
      "fn": "ERC721._transfer",
      "offset": [
        13796,
        13881
      ],
      "op": "POP",
      "path": "4"
    },
    "14592": {
      "fn": "ERC721._transfer",
      "offset": [
        13796,
        13881
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "14594": {
      "fn": "ERC721._transfer",
      "offset": [
        13796,
        13881
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "14595": {
      "fn": "ERC721._transfer",
      "offset": [
        13796,
        13881
      ],
      "op": "DUP1",
      "path": "4"
    },
    "14596": {
      "fn": "ERC721._transfer",
      "offset": [
        13796,
        13881
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "14597": {
      "fn": "ERC721._transfer",
      "offset": [
        13796,
        13881
      ],
      "op": "SUB",
      "path": "4"
    },
    "14598": {
      "fn": "ERC721._transfer",
      "offset": [
        13796,
        13881
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "14599": {
      "fn": "ERC721._transfer",
      "offset": [
        13796,
        13881
      ],
      "op": "REVERT",
      "path": "4"
    },
    "14600": {
      "fn": "ERC721._transfer",
      "offset": [
        13796,
        13881
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "14601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14605": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14607": {
      "op": "SHL"
    },
    "14608": {
      "op": "SUB"
    },
    "14609": {
      "fn": "ERC721._transfer",
      "offset": [
        13917,
        13933
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 137
    },
    "14610": {
      "branch": 271,
      "fn": "ERC721._transfer",
      "offset": [
        13917,
        13933
      ],
      "op": "AND",
      "path": "4"
    },
    "14611": {
      "fn": "ERC721._transfer",
      "offset": [
        13909,
        13974
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x394D"
    },
    "14614": {
      "branch": 271,
      "fn": "ERC721._transfer",
      "offset": [
        13909,
        13974
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "14615": {
      "fn": "ERC721._transfer",
      "offset": [
        13909,
        13974
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "14617": {
      "fn": "ERC721._transfer",
      "offset": [
        13909,
        13974
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "14618": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "14622": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "14624": {
      "op": "SHL"
    },
    "14625": {
      "fn": "ERC721._transfer",
      "offset": [
        13909,
        13974
      ],
      "op": "DUP2",
      "path": "4"
    },
    "14626": {
      "fn": "ERC721._transfer",
      "offset": [
        13909,
        13974
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "14627": {
      "fn": "ERC721._transfer",
      "offset": [
        13909,
        13974
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "14629": {
      "fn": "ERC721._transfer",
      "offset": [
        13909,
        13974
      ],
      "op": "ADD",
      "path": "4"
    },
    "14630": {
      "fn": "ERC721._transfer",
      "offset": [
        13909,
        13974
      ],
      "op": "DUP1",
      "path": "4"
    },
    "14631": {
      "fn": "ERC721._transfer",
      "offset": [
        13909,
        13974
      ],
      "op": "DUP1",
      "path": "4"
    },
    "14632": {
      "fn": "ERC721._transfer",
      "offset": [
        13909,
        13974
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "14634": {
      "fn": "ERC721._transfer",
      "offset": [
        13909,
        13974
      ],
      "op": "ADD",
      "path": "4"
    },
    "14635": {
      "fn": "ERC721._transfer",
      "offset": [
        13909,
        13974
      ],
      "op": "DUP3",
      "path": "4"
    },
    "14636": {
      "fn": "ERC721._transfer",
      "offset": [
        13909,
        13974
      ],
      "op": "DUP2",
      "path": "4"
    },
    "14637": {
      "fn": "ERC721._transfer",
      "offset": [
        13909,
        13974
      ],
      "op": "SUB",
      "path": "4"
    },
    "14638": {
      "fn": "ERC721._transfer",
      "offset": [
        13909,
        13974
      ],
      "op": "DUP3",
      "path": "4"
    },
    "14639": {
      "fn": "ERC721._transfer",
      "offset": [
        13909,
        13974
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "14640": {
      "fn": "ERC721._transfer",
      "offset": [
        13909,
        13974
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "14642": {
      "fn": "ERC721._transfer",
      "offset": [
        13909,
        13974
      ],
      "op": "DUP2",
      "path": "4"
    },
    "14643": {
      "fn": "ERC721._transfer",
      "offset": [
        13909,
        13974
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "14644": {
      "fn": "ERC721._transfer",
      "offset": [
        13909,
        13974
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "14646": {
      "fn": "ERC721._transfer",
      "offset": [
        13909,
        13974
      ],
      "op": "ADD",
      "path": "4"
    },
    "14647": {
      "fn": "ERC721._transfer",
      "offset": [
        13909,
        13974
      ],
      "op": "DUP1",
      "path": "4"
    },
    "14648": {
      "fn": "ERC721._transfer",
      "offset": [
        13909,
        13974
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x529A"
    },
    "14651": {
      "fn": "ERC721._transfer",
      "offset": [
        13909,
        13974
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "14653": {
      "fn": "ERC721._transfer",
      "offset": [
        13909,
        13974
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "14654": {
      "fn": "ERC721._transfer",
      "offset": [
        13909,
        13974
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "14655": {
      "fn": "ERC721._transfer",
      "offset": [
        13909,
        13974
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "14657": {
      "fn": "ERC721._transfer",
      "offset": [
        13909,
        13974
      ],
      "op": "ADD",
      "path": "4"
    },
    "14658": {
      "fn": "ERC721._transfer",
      "offset": [
        13909,
        13974
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "14659": {
      "fn": "ERC721._transfer",
      "offset": [
        13909,
        13974
      ],
      "op": "POP",
      "path": "4"
    },
    "14660": {
      "fn": "ERC721._transfer",
      "offset": [
        13909,
        13974
      ],
      "op": "POP",
      "path": "4"
    },
    "14661": {
      "fn": "ERC721._transfer",
      "offset": [
        13909,
        13974
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "14663": {
      "fn": "ERC721._transfer",
      "offset": [
        13909,
        13974
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "14664": {
      "fn": "ERC721._transfer",
      "offset": [
        13909,
        13974
      ],
      "op": "DUP1",
      "path": "4"
    },
    "14665": {
      "fn": "ERC721._transfer",
      "offset": [
        13909,
        13974
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "14666": {
      "fn": "ERC721._transfer",
      "offset": [
        13909,
        13974
      ],
      "op": "SUB",
      "path": "4"
    },
    "14667": {
      "fn": "ERC721._transfer",
      "offset": [
        13909,
        13974
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "14668": {
      "fn": "ERC721._transfer",
      "offset": [
        13909,
        13974
      ],
      "op": "REVERT",
      "path": "4"
    },
    "14669": {
      "fn": "ERC721._transfer",
      "offset": [
        13909,
        13974
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "14670": {
      "fn": "ERC721._transfer",
      "offset": [
        13985,
        14024
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 138,
      "value": "0x3958"
    },
    "14673": {
      "fn": "ERC721._transfer",
      "offset": [
        14006,
        14010
      ],
      "op": "DUP4",
      "path": "4"
    },
    "14674": {
      "fn": "ERC721._transfer",
      "offset": [
        14012,
        14014
      ],
      "op": "DUP4",
      "path": "4"
    },
    "14675": {
      "fn": "ERC721._transfer",
      "offset": [
        14016,
        14023
      ],
      "op": "DUP4",
      "path": "4"
    },
    "14676": {
      "fn": "ERC721._transfer",
      "offset": [
        13985,
        14005
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x149C"
    },
    "14679": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        13985,
        14024
      ],
      "op": "JUMP",
      "path": "4"
    },
    "14680": {
      "fn": "ERC721._transfer",
      "offset": [
        13985,
        14024
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "14681": {
      "fn": "ERC721._transfer",
      "offset": [
        14086,
        14115
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 139,
      "value": "0x3963"
    },
    "14684": {
      "fn": "ERC721._transfer",
      "offset": [
        14103,
        14104
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "14686": {
      "fn": "ERC721._transfer",
      "offset": [
        14107,
        14114
      ],
      "op": "DUP3",
      "path": "4"
    },
    "14687": {
      "fn": "ERC721._transfer",
      "offset": [
        14086,
        14094
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3730"
    },
    "14690": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        14086,
        14115
      ],
      "op": "JUMP",
      "path": "4"
    },
    "14691": {
      "fn": "ERC721._transfer",
      "offset": [
        14086,
        14115
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "14692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14696": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14698": {
      "op": "SHL"
    },
    "14699": {
      "op": "SUB"
    },
    "14700": {
      "fn": "ERC721._transfer",
      "offset": [
        14126,
        14145
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 140
    },
    "14701": {
      "fn": "ERC721._transfer",
      "offset": [
        14126,
        14145
      ],
      "op": "AND",
      "path": "4"
    },
    "14702": {
      "fn": "ERC721._transfer",
      "offset": [
        14126,
        14145
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "14704": {
      "fn": "ERC721._transfer",
      "offset": [
        14126,
        14145
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "14705": {
      "fn": "ERC721._transfer",
      "offset": [
        14126,
        14145
      ],
      "op": "DUP2",
      "path": "4"
    },
    "14706": {
      "fn": "ERC721._transfer",
      "offset": [
        14126,
        14145
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "14707": {
      "fn": "ERC721._transfer",
      "offset": [
        14126,
        14139
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "14709": {
      "fn": "ERC721._transfer",
      "offset": [
        14126,
        14145
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "14711": {
      "fn": "ERC721._transfer",
      "offset": [
        14126,
        14145
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "14712": {
      "fn": "ERC721._transfer",
      "offset": [
        14126,
        14145
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "14714": {
      "fn": "ERC721._transfer",
      "offset": [
        14126,
        14145
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "14715": {
      "fn": "ERC721._transfer",
      "offset": [
        14126,
        14145
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "14716": {
      "fn": "ERC721._transfer",
      "offset": [
        14126,
        14161
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3985"
    },
    "14719": {
      "fn": "ERC721._transfer",
      "offset": [
        14126,
        14161
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "14720": {
      "fn": "ERC721._transfer",
      "offset": [
        14153,
        14160
      ],
      "op": "DUP3",
      "path": "4"
    },
    "14721": {
      "fn": "ERC721._transfer",
      "offset": [
        14126,
        14152
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4333"
    },
    "14724": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        14126,
        14161
      ],
      "op": "JUMP",
      "path": "4"
    },
    "14725": {
      "fn": "ERC721._transfer",
      "offset": [
        14126,
        14161
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "14726": {
      "op": "POP"
    },
    "14727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14731": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14733": {
      "op": "SHL"
    },
    "14734": {
      "op": "SUB"
    },
    "14735": {
      "fn": "ERC721._transfer",
      "offset": [
        14171,
        14188
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 141
    },
    "14736": {
      "fn": "ERC721._transfer",
      "offset": [
        14171,
        14188
      ],
      "op": "AND",
      "path": "4"
    },
    "14737": {
      "fn": "ERC721._transfer",
      "offset": [
        14171,
        14188
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "14739": {
      "fn": "ERC721._transfer",
      "offset": [
        14171,
        14188
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "14740": {
      "fn": "ERC721._transfer",
      "offset": [
        14171,
        14188
      ],
      "op": "DUP2",
      "path": "4"
    },
    "14741": {
      "fn": "ERC721._transfer",
      "offset": [
        14171,
        14188
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "14742": {
      "fn": "ERC721._transfer",
      "offset": [
        14171,
        14184
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "14744": {
      "fn": "ERC721._transfer",
      "offset": [
        14171,
        14188
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "14746": {
      "fn": "ERC721._transfer",
      "offset": [
        14171,
        14188
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "14747": {
      "fn": "ERC721._transfer",
      "offset": [
        14171,
        14188
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "14749": {
      "fn": "ERC721._transfer",
      "offset": [
        14171,
        14188
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "14750": {
      "fn": "ERC721._transfer",
      "offset": [
        14171,
        14188
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "14751": {
      "fn": "ERC721._transfer",
      "offset": [
        14171,
        14201
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x39A8"
    },
    "14754": {
      "fn": "ERC721._transfer",
      "offset": [
        14171,
        14201
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "14755": {
      "fn": "ERC721._transfer",
      "offset": [
        14193,
        14200
      ],
      "op": "DUP3",
      "path": "4"
    },
    "14756": {
      "fn": "ERC721._transfer",
      "offset": [
        14171,
        14192
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x433F"
    },
    "14759": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        14171,
        14201
      ],
      "op": "JUMP",
      "path": "4"
    },
    "14760": {
      "fn": "ERC721._transfer",
      "offset": [
        14171,
        14201
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "14761": {
      "op": "POP"
    },
    "14762": {
      "fn": "ERC721._transfer",
      "offset": [
        14212,
        14241
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 142,
      "value": "0x39B5"
    },
    "14765": {
      "fn": "ERC721._transfer",
      "offset": [
        14212,
        14224
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "14767": {
      "fn": "ERC721._transfer",
      "offset": [
        14229,
        14236
      ],
      "op": "DUP3",
      "path": "4"
    },
    "14768": {
      "fn": "ERC721._transfer",
      "offset": [
        14238,
        14240
      ],
      "op": "DUP5",
      "path": "4"
    },
    "14769": {
      "fn": "ERC721._transfer",
      "offset": [
        14212,
        14228
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x434B"
    },
    "14772": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        14212,
        14241
      ],
      "op": "JUMP",
      "path": "4"
    },
    "14773": {
      "fn": "ERC721._transfer",
      "offset": [
        14212,
        14241
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "14774": {
      "fn": "ERC721._transfer",
      "offset": [
        14212,
        14241
      ],
      "op": "POP",
      "path": "4"
    },
    "14775": {
      "fn": "ERC721._transfer",
      "offset": [
        14276,
        14283
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 143
    },
    "14776": {
      "fn": "ERC721._transfer",
      "offset": [
        14272,
        14274
      ],
      "op": "DUP3",
      "path": "4"
    },
    "14777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14781": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14783": {
      "op": "SHL"
    },
    "14784": {
      "op": "SUB"
    },
    "14785": {
      "fn": "ERC721._transfer",
      "offset": [
        14257,
        14284
      ],
      "op": "AND",
      "path": "4"
    },
    "14786": {
      "fn": "ERC721._transfer",
      "offset": [
        14266,
        14270
      ],
      "op": "DUP5",
      "path": "4"
    },
    "14787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "14791": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "14793": {
      "op": "SHL"
    },
    "14794": {
      "op": "SUB"
    },
    "14795": {
      "fn": "ERC721._transfer",
      "offset": [
        14257,
        14284
      ],
      "op": "AND",
      "path": "4"
    },
    "14796": {
      "fn": "ERC721._transfer",
      "offset": [
        14257,
        14284
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "14829": {
      "fn": "ERC721._transfer",
      "offset": [
        14257,
        14284
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "14831": {
      "fn": "ERC721._transfer",
      "offset": [
        14257,
        14284
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "14832": {
      "fn": "ERC721._transfer",
      "offset": [
        14257,
        14284
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "14834": {
      "fn": "ERC721._transfer",
      "offset": [
        14257,
        14284
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "14835": {
      "fn": "ERC721._transfer",
      "offset": [
        14257,
        14284
      ],
      "op": "DUP1",
      "path": "4"
    },
    "14836": {
      "fn": "ERC721._transfer",
      "offset": [
        14257,
        14284
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "14837": {
      "fn": "ERC721._transfer",
      "offset": [
        14257,
        14284
      ],
      "op": "SUB",
      "path": "4"
    },
    "14838": {
      "fn": "ERC721._transfer",
      "offset": [
        14257,
        14284
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "14839": {
      "fn": "ERC721._transfer",
      "offset": [
        14257,
        14284
      ],
      "op": "LOG4",
      "path": "4"
    },
    "14840": {
      "fn": "ERC721._transfer",
      "offset": [
        13707,
        14291
      ],
      "op": "POP",
      "path": "4"
    },
    "14841": {
      "fn": "ERC721._transfer",
      "offset": [
        13707,
        14291
      ],
      "op": "POP",
      "path": "4"
    },
    "14842": {
      "fn": "ERC721._transfer",
      "offset": [
        13707,
        14291
      ],
      "op": "POP",
      "path": "4"
    },
    "14843": {
      "fn": "ERC721._transfer",
      "jump": "o",
      "offset": [
        13707,
        14291
      ],
      "op": "JUMP",
      "path": "4"
    },
    "14844": {
      "fn": "EnumerableSet.at",
      "offset": [
        9250,
        9385
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "14845": {
      "fn": "EnumerableSet.at",
      "offset": [
        9321,
        9328
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "14847": {
      "fn": "EnumerableSet.at",
      "offset": [
        9355,
        9377
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 144,
      "value": "0x1638"
    },
    "14850": {
      "fn": "EnumerableSet.at",
      "offset": [
        9359,
        9362
      ],
      "op": "DUP4",
      "path": "12"
    },
    "14851": {
      "fn": "EnumerableSet.at",
      "offset": [
        9371,
        9376
      ],
      "op": "DUP4",
      "path": "12"
    },
    "14852": {
      "fn": "EnumerableSet.at",
      "offset": [
        9355,
        9358
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4361"
    },
    "14855": {
      "fn": "EnumerableSet.at",
      "jump": "i",
      "offset": [
        9355,
        9377
      ],
      "op": "JUMP",
      "path": "12"
    },
    "14856": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26106,
        26960
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14857": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26204,
        26219
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x14"
    },
    "14859": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26204,
        26219
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "14860": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26154,
        26174
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "14862": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26154,
        26174
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "14863": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26154,
        26174
      ],
      "op": "DUP2",
      "path": "20"
    },
    "14864": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26154,
        26174
      ],
      "op": "DUP1",
      "path": "20"
    },
    "14865": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26268,
        26917
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14866": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26291,
        26303
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xB"
    },
    "14868": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26291,
        26303
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "14869": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26287,
        26288
      ],
      "op": "DUP2",
      "path": "20"
    },
    "14870": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26287,
        26303
      ],
      "op": "LT",
      "path": "20"
    },
    "14871": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26268,
        26917
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "14872": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26268,
        26917
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3A9B"
    },
    "14875": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26268,
        26917
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "14876": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26325,
        26351
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "14878": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26325,
        26351
      ],
      "op": "DUP2",
      "path": "20"
    },
    "14879": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26325,
        26351
      ],
      "op": "DUP2",
      "path": "20"
    },
    "14880": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26325,
        26351
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "14881": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26325,
        26348
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x10"
    },
    "14883": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26325,
        26351
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "14885": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26325,
        26351
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "14886": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26325,
        26351
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "14888": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26325,
        26351
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "14889": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26325,
        26351
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "14890": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26325,
        26351
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "14891": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26325,
        26351
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "14893": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26325,
        26351
      ],
      "op": "AND",
      "path": "20"
    },
    "14894": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26325,
        26357
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "14895": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26325,
        26357
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "14896": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26325,
        26351
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "14898": {
      "branch": 247,
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26325,
        26357
      ],
      "op": "EQ",
      "path": "20"
    },
    "14899": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26322,
        26907
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "14900": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26322,
        26907
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3A93"
    },
    "14903": {
      "branch": 247,
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26322,
        26907
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "14904": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26400,
        26430
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 145,
      "value": "0x3A40"
    },
    "14907": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26428,
        26429
      ],
      "op": "DUP2",
      "path": "20"
    },
    "14908": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26400,
        26427
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x43C5"
    },
    "14911": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "jump": "i",
      "offset": [
        26400,
        26430
      ],
      "op": "JUMP",
      "path": "20"
    },
    "14912": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26400,
        26430
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14913": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26623,
        26645
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 146,
      "value": "0x0"
    },
    "14915": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26623,
        26645
      ],
      "op": "DUP3",
      "path": "20"
    },
    "14916": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26623,
        26645
      ],
      "op": "DUP2",
      "path": "20"
    },
    "14917": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26623,
        26645
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "14918": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26623,
        26642
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xF"
    },
    "14920": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26623,
        26645
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "14922": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26623,
        26645
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "14923": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26623,
        26645
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "14925": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26623,
        26645
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "14926": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26623,
        26645
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "14927": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26623,
        26645
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "14928": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26376,
        26430
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "14929": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26376,
        26430
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "14930": {
      "op": "POP"
    },
    "14931": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26599,
        26645
      ],
      "op": "DUP3",
      "path": "20"
    },
    "14932": {
      "branch": 248,
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26599,
        26645
      ],
      "op": "GT",
      "path": "20"
    },
    "14933": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26599,
        26698
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3A5F"
    },
    "14936": {
      "branch": 248,
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26599,
        26698
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "14937": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26697,
        26698
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "14939": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26599,
        26698
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3A71"
    },
    "14942": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26599,
        26698
      ],
      "op": "JUMP",
      "path": "20"
    },
    "14943": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26599,
        26698
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14944": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26672,
        26694
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "14946": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26672,
        26694
      ],
      "op": "DUP2",
      "path": "20"
    },
    "14947": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26672,
        26694
      ],
      "op": "DUP2",
      "path": "20"
    },
    "14948": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26672,
        26694
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "14949": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26672,
        26691
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xF"
    },
    "14951": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26672,
        26694
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "14953": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26672,
        26694
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "14954": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26672,
        26694
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "14956": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26672,
        26694
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "14957": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26672,
        26694
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "14958": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26672,
        26694
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "14959": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26648,
        26694
      ],
      "op": "DUP3",
      "path": "20"
    },
    "14960": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26648,
        26694
      ],
      "op": "SUB",
      "path": "20"
    },
    "14961": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26599,
        26698
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14962": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26584,
        26698
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "14963": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26584,
        26698
      ],
      "op": "POP",
      "path": "20"
    },
    "14964": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26734,
        26757
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1A"
    },
    "14966": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26734,
        26757
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "14967": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26719,
        26731
      ],
      "op": "DUP5",
      "path": "20"
    },
    "14968": {
      "branch": 249,
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26719,
        26757
      ],
      "op": "GT",
      "path": "20"
    },
    "14969": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26716,
        26893
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "14970": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26716,
        26893
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3A93"
    },
    "14973": {
      "branch": 249,
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26716,
        26893
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "14974": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26781,
        26803
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 147,
      "value": "0x0"
    },
    "14976": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26781,
        26803
      ],
      "op": "DUP2",
      "path": "20"
    },
    "14977": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26781,
        26803
      ],
      "op": "DUP2",
      "path": "20"
    },
    "14978": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26781,
        26803
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "14979": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26781,
        26800
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xF"
    },
    "14981": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26781,
        26803
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "14983": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26781,
        26803
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "14984": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26781,
        26803
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "14986": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26781,
        26803
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "14987": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26781,
        26803
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "14988": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26781,
        26827
      ],
      "op": "DUP3",
      "path": "20"
    },
    "14989": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26781,
        26827
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "14990": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26781,
        26827
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "14991": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26849,
        26874
      ],
      "op": "SWAP2",
      "path": "20",
      "statement": 148
    },
    "14992": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26849,
        26874
      ],
      "op": "DUP4",
      "path": "20"
    },
    "14993": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26849,
        26874
      ],
      "op": "ADD",
      "path": "20"
    },
    "14994": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26849,
        26874
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "14995": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26716,
        26893
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "14996": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26304,
        26307
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 149,
      "value": "0x1"
    },
    "14998": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26304,
        26307
      ],
      "op": "ADD",
      "path": "20"
    },
    "14999": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26268,
        26917
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3A11"
    },
    "15002": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26268,
        26917
      ],
      "op": "JUMP",
      "path": "20"
    },
    "15003": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26268,
        26917
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "15004": {
      "op": "POP"
    },
    "15005": {
      "op": "POP"
    },
    "15006": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26926,
        26941
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 150,
      "value": "0x14"
    },
    "15008": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "offset": [
        26926,
        26953
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "15009": {
      "op": "POP"
    },
    "15010": {
      "fn": "BuyTheDipNFT.updateAllBalances",
      "jump": "o",
      "offset": [
        26106,
        26960
      ],
      "op": "JUMP",
      "path": "20"
    },
    "15011": {
      "fn": "ERC721._safeMint",
      "offset": [
        11348,
        11456
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "15012": {
      "fn": "ERC721._safeMint",
      "offset": [
        11423,
        11449
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 151,
      "value": "0x1509"
    },
    "15015": {
      "fn": "ERC721._safeMint",
      "offset": [
        11433,
        11435
      ],
      "op": "DUP3",
      "path": "4"
    },
    "15016": {
      "fn": "ERC721._safeMint",
      "offset": [
        11437,
        11444
      ],
      "op": "DUP3",
      "path": "4"
    },
    "15017": {
      "fn": "ERC721._safeMint",
      "offset": [
        11423,
        11449
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "15019": {
      "fn": "ERC721._safeMint",
      "offset": [
        11423,
        11449
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "15020": {
      "fn": "ERC721._safeMint",
      "offset": [
        11423,
        11449
      ],
      "op": "DUP1",
      "path": "4"
    },
    "15021": {
      "fn": "ERC721._safeMint",
      "offset": [
        11423,
        11449
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "15023": {
      "fn": "ERC721._safeMint",
      "offset": [
        11423,
        11449
      ],
      "op": "ADD",
      "path": "4"
    },
    "15024": {
      "fn": "ERC721._safeMint",
      "offset": [
        11423,
        11449
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "15026": {
      "fn": "ERC721._safeMint",
      "offset": [
        11423,
        11449
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "15027": {
      "fn": "ERC721._safeMint",
      "offset": [
        11423,
        11449
      ],
      "op": "DUP1",
      "path": "4"
    },
    "15028": {
      "fn": "ERC721._safeMint",
      "offset": [
        11423,
        11449
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "15030": {
      "fn": "ERC721._safeMint",
      "offset": [
        11423,
        11449
      ],
      "op": "DUP2",
      "path": "4"
    },
    "15031": {
      "fn": "ERC721._safeMint",
      "offset": [
        11423,
        11449
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "15032": {
      "fn": "ERC721._safeMint",
      "offset": [
        11423,
        11449
      ],
      "op": "POP",
      "path": "4"
    },
    "15033": {
      "fn": "ERC721._safeMint",
      "offset": [
        11423,
        11432
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4467"
    },
    "15036": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        11423,
        11449
      ],
      "op": "JUMP",
      "path": "4"
    },
    "15037": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3394,
        5548
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "15038": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3603,
        3619
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "15040": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3603,
        3619
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15041": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3603,
        3619
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "15042": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3617,
        3618
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x2"
    },
    "15044": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3603,
        3619
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15045": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3603,
        3619
      ],
      "op": "DUP3",
      "path": "20"
    },
    "15046": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3603,
        3619
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "15047": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3579,
        3600
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "15049": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3603,
        3619
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15050": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3603,
        3619
      ],
      "op": "DUP4",
      "path": "20"
    },
    "15051": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3603,
        3619
      ],
      "op": "ADD",
      "path": "20"
    },
    "15052": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3603,
        3619
      ],
      "op": "DUP5",
      "path": "20"
    },
    "15053": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3603,
        3619
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "15054": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3551,
        3558
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "15056": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3551,
        3558
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "15057": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3551,
        3558
      ],
      "op": "DUP5",
      "path": "20"
    },
    "15058": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3551,
        3558
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "15059": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3579,
        3600
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "15060": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3579,
        3600
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "15061": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3617,
        3618
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "15062": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3603,
        3619
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "15064": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3603,
        3619
      ],
      "op": "DUP4",
      "path": "20"
    },
    "15065": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3603,
        3619
      ],
      "op": "ADD",
      "path": "20"
    },
    "15066": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3603,
        3619
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "15067": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3603,
        3619
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15068": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3603,
        3619
      ],
      "op": "CALLDATASIZE",
      "path": "20"
    },
    "15069": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3603,
        3619
      ],
      "op": "DUP4",
      "path": "20"
    },
    "15070": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3603,
        3619
      ],
      "op": "CALLDATACOPY",
      "path": "20"
    },
    "15071": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3603,
        3619
      ],
      "op": "ADD",
      "path": "20"
    },
    "15072": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3603,
        3619
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "15073": {
      "op": "POP"
    },
    "15074": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3603,
        3619
      ],
      "op": "POP",
      "path": "20"
    },
    "15075": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3579,
        3619
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "15076": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3579,
        3619
      ],
      "op": "POP",
      "path": "20"
    },
    "15077": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3646
      ],
      "op": "DUP5",
      "path": "20",
      "statement": 152
    },
    "15078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15082": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15084": {
      "op": "SHL"
    },
    "15085": {
      "op": "SUB"
    },
    "15086": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3651
      ],
      "op": "AND",
      "path": "20"
    },
    "15087": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3651
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xAD5C4648"
    },
    "15092": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "15094": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "15095": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15096": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "15101": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "AND",
      "path": "20"
    },
    "15102": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "15104": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "SHL",
      "path": "20"
    },
    "15105": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15106": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "15107": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "15109": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "ADD",
      "path": "20"
    },
    "15110": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "15112": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "15114": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "15115": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15116": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "DUP4",
      "path": "20"
    },
    "15117": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "SUB",
      "path": "20"
    },
    "15118": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15119": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "DUP7",
      "path": "20"
    },
    "15120": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15121": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "15122": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "15123": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15124": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "15125": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3B1D"
    },
    "15128": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "15129": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "15131": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15132": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "REVERT",
      "path": "20"
    },
    "15133": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "15134": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "POP",
      "path": "20"
    },
    "15135": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "GAS",
      "path": "20"
    },
    "15136": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "15137": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "15138": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15139": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "15140": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3B31"
    },
    "15143": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "15144": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "15145": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "15147": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15148": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "15149": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "15150": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "15152": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "REVERT",
      "path": "20"
    },
    "15153": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "15154": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "POP",
      "path": "20"
    },
    "15155": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "POP",
      "path": "20"
    },
    "15156": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "POP",
      "path": "20"
    },
    "15157": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "POP",
      "path": "20"
    },
    "15158": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "15160": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "15161": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "15162": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "15164": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15165": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "LT",
      "path": "20"
    },
    "15166": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "15167": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3B47"
    },
    "15170": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "15171": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "15173": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15174": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "REVERT",
      "path": "20"
    },
    "15175": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "15176": {
      "op": "POP"
    },
    "15177": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3639,
        3653
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "15178": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3629,
        3636
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15179": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3629,
        3636
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "15180": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3629,
        3633
      ],
      "op": "DUP3",
      "path": "20"
    },
    "15181": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3629,
        3633
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "15182": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3634,
        3635
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "15184": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3634,
        3635
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "15185": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3629,
        3636
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3B56"
    },
    "15188": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3629,
        3636
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "15189": {
      "dev": "Index out of range",
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3629,
        3636
      ],
      "op": "INVALID",
      "path": "20"
    },
    "15190": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3629,
        3636
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "15191": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3629,
        3636
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "15193": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3629,
        3636
      ],
      "op": "MUL",
      "path": "20"
    },
    "15194": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3629,
        3636
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "15196": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3629,
        3636
      ],
      "op": "ADD",
      "path": "20"
    },
    "15197": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3629,
        3636
      ],
      "op": "ADD",
      "path": "20"
    },
    "15198": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3629,
        3653
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "15199": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15203": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15205": {
      "op": "SHL"
    },
    "15206": {
      "op": "SUB"
    },
    "15207": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3629,
        3653
      ],
      "op": "AND",
      "path": "20"
    },
    "15208": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3629,
        3653
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "15209": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3629,
        3653
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15214": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15216": {
      "op": "SHL"
    },
    "15217": {
      "op": "SUB"
    },
    "15218": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3629,
        3653
      ],
      "op": "AND",
      "path": "20"
    },
    "15219": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3629,
        3653
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15220": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3629,
        3653
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "15221": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3629,
        3653
      ],
      "op": "POP",
      "path": "20"
    },
    "15222": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3629,
        3653
      ],
      "op": "POP",
      "path": "20"
    },
    "15223": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3673,
        3693
      ],
      "op": "DUP7",
      "path": "20",
      "statement": 153
    },
    "15224": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3663,
        3667
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15225": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3668,
        3669
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "15227": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3663,
        3670
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15228": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3663,
        3670
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "15229": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3663,
        3670
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15230": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3663,
        3670
      ],
      "op": "LT",
      "path": "20"
    },
    "15231": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3663,
        3670
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3B84"
    },
    "15234": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3663,
        3670
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "15235": {
      "dev": "Index out of range",
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3663,
        3670
      ],
      "op": "INVALID",
      "path": "20"
    },
    "15236": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3663,
        3670
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "15237": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3663,
        3670
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "15239": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3663,
        3670
      ],
      "op": "MUL",
      "path": "20"
    },
    "15240": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3663,
        3670
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "15242": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3663,
        3670
      ],
      "op": "ADD",
      "path": "20"
    },
    "15243": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3663,
        3670
      ],
      "op": "ADD",
      "path": "20"
    },
    "15244": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3663,
        3693
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "15245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15249": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15251": {
      "op": "SHL"
    },
    "15252": {
      "op": "SUB"
    },
    "15253": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3663,
        3693
      ],
      "op": "AND",
      "path": "20"
    },
    "15254": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3663,
        3693
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "15255": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3663,
        3693
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15260": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15262": {
      "op": "SHL"
    },
    "15263": {
      "op": "SUB"
    },
    "15264": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3663,
        3693
      ],
      "op": "AND",
      "path": "20"
    },
    "15265": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3663,
        3693
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15266": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3663,
        3693
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "15267": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3663,
        3693
      ],
      "op": "POP",
      "path": "20"
    },
    "15268": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3663,
        3693
      ],
      "op": "POP",
      "path": "20"
    },
    "15269": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4604,
        4630
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "15271": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4862,
        4880
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15272": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4890
      ],
      "op": "DUP7",
      "path": "20"
    },
    "15273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15277": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15279": {
      "op": "SHL"
    },
    "15280": {
      "op": "SUB"
    },
    "15281": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4904
      ],
      "op": "AND",
      "path": "20"
    },
    "15282": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4904
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xD06CA61F"
    },
    "15287": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4905,
        4914
      ],
      "op": "DUP12",
      "path": "20"
    },
    "15288": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4916,
        4920
      ],
      "op": "DUP6",
      "path": "20"
    },
    "15289": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "15291": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "15292": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP4",
      "path": "20"
    },
    "15293": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "15298": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "AND",
      "path": "20"
    },
    "15299": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "15301": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "SHL",
      "path": "20"
    },
    "15302": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15303": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "15304": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "15306": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "ADD",
      "path": "20"
    },
    "15307": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15308": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP4",
      "path": "20"
    },
    "15309": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15310": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "15311": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "15313": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "ADD",
      "path": "20"
    },
    "15314": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15315": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "15317": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "ADD",
      "path": "20"
    },
    "15318": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP3",
      "path": "20"
    },
    "15319": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15320": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "SUB",
      "path": "20"
    },
    "15321": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP3",
      "path": "20"
    },
    "15322": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "15323": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP4",
      "path": "20"
    },
    "15324": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15325": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15326": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "15327": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15328": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "15329": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "15331": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "ADD",
      "path": "20"
    },
    "15332": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "15333": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "POP",
      "path": "20"
    },
    "15334": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15335": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "15336": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "15337": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "15339": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "ADD",
      "path": "20"
    },
    "15340": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "15341": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "15343": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "MUL",
      "path": "20"
    },
    "15344": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15345": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP4",
      "path": "20"
    },
    "15346": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP4",
      "path": "20"
    },
    "15347": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "15349": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "15350": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP4",
      "path": "20"
    },
    "15351": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15352": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "LT",
      "path": "20"
    },
    "15353": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "15354": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3C0D"
    },
    "15357": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "15358": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15359": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15360": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "ADD",
      "path": "20"
    },
    "15361": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "15362": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP4",
      "path": "20"
    },
    "15363": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP3",
      "path": "20"
    },
    "15364": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "ADD",
      "path": "20"
    },
    "15365": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "15366": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "15368": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "ADD",
      "path": "20"
    },
    "15369": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3BF5"
    },
    "15372": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "JUMP",
      "path": "20"
    },
    "15373": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "15374": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "POP",
      "path": "20"
    },
    "15375": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "POP",
      "path": "20"
    },
    "15376": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "POP",
      "path": "20"
    },
    "15377": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "POP",
      "path": "20"
    },
    "15378": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "15379": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "POP",
      "path": "20"
    },
    "15380": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "ADD",
      "path": "20"
    },
    "15381": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "15382": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "POP",
      "path": "20"
    },
    "15383": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "POP",
      "path": "20"
    },
    "15384": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "POP",
      "path": "20"
    },
    "15385": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "POP",
      "path": "20"
    },
    "15386": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "15388": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "15390": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "15391": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15392": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP4",
      "path": "20"
    },
    "15393": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "SUB",
      "path": "20"
    },
    "15394": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15395": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP7",
      "path": "20"
    },
    "15396": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15397": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "15398": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "15399": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15400": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "15401": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3C31"
    },
    "15404": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "15405": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "15407": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15408": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "REVERT",
      "path": "20"
    },
    "15409": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "15410": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "POP",
      "path": "20"
    },
    "15411": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "GAS",
      "path": "20"
    },
    "15412": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "15413": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "15414": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15415": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "15416": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3C45"
    },
    "15419": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "15420": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "15421": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "15423": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15424": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "15425": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "15426": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "15428": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "REVERT",
      "path": "20"
    },
    "15429": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "15430": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "POP",
      "path": "20"
    },
    "15431": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "POP",
      "path": "20"
    },
    "15432": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "POP",
      "path": "20"
    },
    "15433": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "POP",
      "path": "20"
    },
    "15434": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "15436": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "15437": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "15438": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "15440": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP3",
      "path": "20"
    },
    "15441": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "15442": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "15444": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "15445": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "15446": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15447": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "ADD",
      "path": "20"
    },
    "15448": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15450": {
      "op": "NOT"
    },
    "15451": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "AND",
      "path": "20"
    },
    "15452": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP3",
      "path": "20"
    },
    "15453": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "ADD",
      "path": "20"
    },
    "15454": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "15456": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "15457": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "15459": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15460": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "LT",
      "path": "20"
    },
    "15461": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "15462": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3C6E"
    },
    "15465": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "15466": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "15468": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15469": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "REVERT",
      "path": "20"
    },
    "15470": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "15471": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15472": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "ADD",
      "path": "20"
    },
    "15473": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "15474": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15475": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15476": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "15477": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "15479": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "15480": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "15481": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "15482": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "15483": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "15484": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP5",
      "path": "20"
    },
    "15485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15487": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15489": {
      "op": "SHL"
    },
    "15490": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP3",
      "path": "20"
    },
    "15491": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "GT",
      "path": "20"
    },
    "15492": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "15493": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3C8D"
    },
    "15496": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "15497": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "15499": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15500": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "REVERT",
      "path": "20"
    },
    "15501": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "15502": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "15503": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP4",
      "path": "20"
    },
    "15504": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "ADD",
      "path": "20"
    },
    "15505": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "15506": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "15508": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP3",
      "path": "20"
    },
    "15509": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "ADD",
      "path": "20"
    },
    "15510": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP6",
      "path": "20"
    },
    "15511": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15512": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "GT",
      "path": "20"
    },
    "15513": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "15514": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CA2"
    },
    "15517": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "15518": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "15520": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15521": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "REVERT",
      "path": "20"
    },
    "15522": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "15523": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP3",
      "path": "20"
    },
    "15524": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "15525": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP7",
      "path": "20"
    },
    "15526": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "15528": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP3",
      "path": "20"
    },
    "15529": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "MUL",
      "path": "20"
    },
    "15530": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP4",
      "path": "20"
    },
    "15531": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "ADD",
      "path": "20"
    },
    "15532": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "GT",
      "path": "20"
    },
    "15533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15535": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "15537": {
      "op": "SHL"
    },
    "15538": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP3",
      "path": "20"
    },
    "15539": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "GT",
      "path": "20"
    },
    "15540": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "OR",
      "path": "20"
    },
    "15541": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "15542": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CBE"
    },
    "15545": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "15546": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "15548": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15549": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "REVERT",
      "path": "20"
    },
    "15550": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "15551": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP3",
      "path": "20"
    },
    "15552": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "15553": {
      "op": "POP"
    },
    "15554": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15555": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "15556": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "15558": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "15559": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP3",
      "path": "20"
    },
    "15560": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "ADD",
      "path": "20"
    },
    "15561": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "15562": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP3",
      "path": "20"
    },
    "15563": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "ADD",
      "path": "20"
    },
    "15564": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "15565": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "MUL",
      "path": "20"
    },
    "15566": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15567": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP4",
      "path": "20"
    },
    "15568": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP4",
      "path": "20"
    },
    "15569": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "15571": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "15572": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP4",
      "path": "20"
    },
    "15573": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15574": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "LT",
      "path": "20"
    },
    "15575": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "15576": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CEB"
    },
    "15579": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "15580": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15581": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15582": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "ADD",
      "path": "20"
    },
    "15583": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "15584": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP4",
      "path": "20"
    },
    "15585": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "DUP3",
      "path": "20"
    },
    "15586": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "ADD",
      "path": "20"
    },
    "15587": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "15588": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "15590": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "ADD",
      "path": "20"
    },
    "15591": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3CD3"
    },
    "15594": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "JUMP",
      "path": "20"
    },
    "15595": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "15596": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "POP",
      "path": "20"
    },
    "15597": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "POP",
      "path": "20"
    },
    "15598": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "POP",
      "path": "20"
    },
    "15599": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "POP",
      "path": "20"
    },
    "15600": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "15601": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "POP",
      "path": "20"
    },
    "15602": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "ADD",
      "path": "20"
    },
    "15603": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "15605": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "15606": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "POP",
      "path": "20"
    },
    "15607": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "POP",
      "path": "20"
    },
    "15608": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4921
      ],
      "op": "POP",
      "path": "20"
    },
    "15609": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4922,
        4923
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "15611": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4924
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15612": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4924
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "15613": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4924
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15614": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4924
      ],
      "op": "LT",
      "path": "20"
    },
    "15615": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4924
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3D04"
    },
    "15618": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4924
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "15619": {
      "dev": "Index out of range",
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4924
      ],
      "op": "INVALID",
      "path": "20"
    },
    "15620": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4924
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "15621": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4924
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "15623": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4924
      ],
      "op": "MUL",
      "path": "20"
    },
    "15624": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4924
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "15626": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4924
      ],
      "op": "ADD",
      "path": "20"
    },
    "15627": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4924
      ],
      "op": "ADD",
      "path": "20"
    },
    "15628": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4883,
        4924
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "15629": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4862,
        4924
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "15630": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4862,
        4924
      ],
      "op": "POP",
      "path": "20"
    },
    "15631": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4996,
        5001
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 154,
      "value": "0x2710"
    },
    "15634": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4981,
        4994
      ],
      "op": "DUP7",
      "path": "20"
    },
    "15635": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4973,
        4978
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2710"
    },
    "15638": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4973,
        4994
      ],
      "op": "SUB",
      "path": "20"
    },
    "15639": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4959,
        4969
      ],
      "op": "DUP3",
      "path": "20"
    },
    "15640": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4959,
        4995
      ],
      "op": "MUL",
      "path": "20"
    },
    "15641": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4959,
        5001
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15642": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4959,
        5001
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3D1F"
    },
    "15645": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4959,
        5001
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "15646": {
      "dev": "Division by zero",
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4959,
        5001
      ],
      "op": "INVALID",
      "path": "20"
    },
    "15647": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4959,
        5001
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "15648": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4959,
        5001
      ],
      "op": "DIV",
      "path": "20"
    },
    "15649": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4938,
        5001
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "15650": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        4938,
        5001
      ],
      "op": "POP",
      "path": "20"
    },
    "15651": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        3394,
        5548
      ],
      "op": "POP",
      "path": "20"
    },
    "15652": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5113,
        5137
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "15654": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5147
      ],
      "op": "DUP7",
      "path": "20"
    },
    "15655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15659": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15661": {
      "op": "SHL"
    },
    "15662": {
      "op": "SUB"
    },
    "15663": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5169
      ],
      "op": "AND",
      "path": "20"
    },
    "15664": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5169
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x7FF36AB5"
    },
    "15669": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5177,
        5186
      ],
      "op": "DUP12",
      "path": "20"
    },
    "15670": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5294,
        5312
      ],
      "op": "DUP5",
      "path": "20"
    },
    "15671": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5326,
        5330
      ],
      "op": "DUP7",
      "path": "20"
    },
    "15672": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5344,
        5346
      ],
      "op": "DUP13",
      "path": "20"
    },
    "15673": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5360,
        5375
      ],
      "op": "TIMESTAMP",
      "path": "20"
    },
    "15674": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5378,
        5381
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x168"
    },
    "15677": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5360,
        5381
      ],
      "op": "ADD",
      "path": "20"
    },
    "15678": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "15680": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "15681": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP7",
      "path": "20"
    },
    "15682": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xFFFFFFFF"
    },
    "15687": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "AND",
      "path": "20"
    },
    "15688": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xE0"
    },
    "15690": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "SHL",
      "path": "20"
    },
    "15691": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15692": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "15693": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "15695": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "ADD",
      "path": "20"
    },
    "15696": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15697": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP6",
      "path": "20"
    },
    "15698": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15699": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "15700": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "15702": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "ADD",
      "path": "20"
    },
    "15703": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15704": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "15706": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "ADD",
      "path": "20"
    },
    "15707": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP5",
      "path": "20"
    },
    "15708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15712": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15714": {
      "op": "SHL"
    },
    "15715": {
      "op": "SUB"
    },
    "15716": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "AND",
      "path": "20"
    },
    "15717": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15718": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "15719": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "15721": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "ADD",
      "path": "20"
    },
    "15722": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP4",
      "path": "20"
    },
    "15723": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15724": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "15725": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "15727": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "ADD",
      "path": "20"
    },
    "15728": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP3",
      "path": "20"
    },
    "15729": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15730": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "SUB",
      "path": "20"
    },
    "15731": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP3",
      "path": "20"
    },
    "15732": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "15733": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP6",
      "path": "20"
    },
    "15734": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15735": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15736": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "15737": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15738": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "15739": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "15741": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "ADD",
      "path": "20"
    },
    "15742": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "15743": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "POP",
      "path": "20"
    },
    "15744": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15745": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "15746": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "15747": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "15749": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "ADD",
      "path": "20"
    },
    "15750": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "15751": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "15753": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "MUL",
      "path": "20"
    },
    "15754": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15755": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP4",
      "path": "20"
    },
    "15756": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP4",
      "path": "20"
    },
    "15757": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "15759": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "15760": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP4",
      "path": "20"
    },
    "15761": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15762": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "LT",
      "path": "20"
    },
    "15763": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "15764": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3DA7"
    },
    "15767": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "15768": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15769": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15770": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "ADD",
      "path": "20"
    },
    "15771": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "15772": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP4",
      "path": "20"
    },
    "15773": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP3",
      "path": "20"
    },
    "15774": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "ADD",
      "path": "20"
    },
    "15775": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "15776": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "15778": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "ADD",
      "path": "20"
    },
    "15779": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3D8F"
    },
    "15782": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "JUMP",
      "path": "20"
    },
    "15783": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "15784": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "POP",
      "path": "20"
    },
    "15785": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "POP",
      "path": "20"
    },
    "15786": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "POP",
      "path": "20"
    },
    "15787": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "POP",
      "path": "20"
    },
    "15788": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "15789": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "POP",
      "path": "20"
    },
    "15790": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "ADD",
      "path": "20"
    },
    "15791": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "15792": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "POP",
      "path": "20"
    },
    "15793": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "POP",
      "path": "20"
    },
    "15794": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "POP",
      "path": "20"
    },
    "15795": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "POP",
      "path": "20"
    },
    "15796": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "POP",
      "path": "20"
    },
    "15797": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "POP",
      "path": "20"
    },
    "15798": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "15800": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "15802": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "15803": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15804": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP4",
      "path": "20"
    },
    "15805": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "SUB",
      "path": "20"
    },
    "15806": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15807": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP6",
      "path": "20"
    },
    "15808": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP9",
      "path": "20"
    },
    "15809": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15810": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "15811": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "15812": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15813": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "15814": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3DCE"
    },
    "15817": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "15818": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "15820": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15821": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "REVERT",
      "path": "20"
    },
    "15822": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "15823": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "POP",
      "path": "20"
    },
    "15824": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "GAS",
      "path": "20"
    },
    "15825": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "CALL",
      "path": "20"
    },
    "15826": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "15827": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15828": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "15829": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3DE2"
    },
    "15832": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "15833": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "15834": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "15836": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15837": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "15838": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "15839": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "15841": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "REVERT",
      "path": "20"
    },
    "15842": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "15843": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "POP",
      "path": "20"
    },
    "15844": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "POP",
      "path": "20"
    },
    "15845": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "POP",
      "path": "20"
    },
    "15846": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "POP",
      "path": "20"
    },
    "15847": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "POP",
      "path": "20"
    },
    "15848": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "15850": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "15851": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "15852": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "15854": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP3",
      "path": "20"
    },
    "15855": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "15856": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "15858": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "15859": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "15860": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15861": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "ADD",
      "path": "20"
    },
    "15862": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "15864": {
      "op": "NOT"
    },
    "15865": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "AND",
      "path": "20"
    },
    "15866": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP3",
      "path": "20"
    },
    "15867": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "ADD",
      "path": "20"
    },
    "15868": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "15870": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "15871": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "15873": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15874": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "LT",
      "path": "20"
    },
    "15875": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "15876": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x35D6"
    },
    "15879": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "15880": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "15882": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15883": {
      "fn": "UniswapHelpers._swapEthForTokens",
      "offset": [
        5140,
        5422
      ],
      "op": "REVERT",
      "path": "20"
    },
    "15884": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46893,
        47019
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "15885": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46953
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 155,
      "value": "0x22"
    },
    "15887": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46953
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "15888": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46970,
        46975
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1E"
    },
    "15890": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46970,
        46975
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "15891": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "15893": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15894": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "15895": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "15900": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "15902": {
      "op": "SHL"
    },
    "15903": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15904": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "15905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "15909": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "15911": {
      "op": "SHL"
    },
    "15912": {
      "op": "SUB"
    },
    "15913": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46970,
        46975
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "15914": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46970,
        46975
      ],
      "op": "DUP4",
      "path": "20"
    },
    "15915": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46970,
        46975
      ],
      "op": "AND",
      "path": "20"
    },
    "15916": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "15918": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "DUP3",
      "path": "20"
    },
    "15919": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "ADD",
      "path": "20"
    },
    "15920": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "15921": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "15923": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15924": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "ADD",
      "path": "20"
    },
    "15925": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "DUP6",
      "path": "20"
    },
    "15926": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "15927": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "15928": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "15929": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "15930": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46953
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "15931": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46953
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "15932": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46953
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "15933": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46953
      ],
      "op": "AND",
      "path": "20"
    },
    "15934": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46953
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "15935": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46961
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x95EA7B3"
    },
    "15940": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46961
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "15941": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "15943": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15944": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "DUP4",
      "path": "20"
    },
    "15945": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "ADD",
      "path": "20"
    },
    "15946": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "15947": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "15949": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "15950": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "15951": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "15952": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "DUP3",
      "path": "20"
    },
    "15953": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "15954": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "SUB",
      "path": "20"
    },
    "15955": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "ADD",
      "path": "20"
    },
    "15956": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "DUP2",
      "path": "20"
    },
    "15957": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46953
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "15959": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46953
      ],
      "op": "DUP8",
      "path": "20"
    },
    "15960": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15961": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "15962": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "15963": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15964": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "15965": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3E65"
    },
    "15968": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "15969": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "15971": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15972": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "REVERT",
      "path": "20"
    },
    "15973": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "15974": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "POP",
      "path": "20"
    },
    "15975": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "GAS",
      "path": "20"
    },
    "15976": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "CALL",
      "path": "20"
    },
    "15977": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "15978": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15979": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "15980": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3E79"
    },
    "15983": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "15984": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "15985": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "15987": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "DUP1",
      "path": "20"
    },
    "15988": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "15989": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "15990": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "15992": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "REVERT",
      "path": "20"
    },
    "15993": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "15994": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "POP",
      "path": "20"
    },
    "15995": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "POP",
      "path": "20"
    },
    "15996": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "POP",
      "path": "20"
    },
    "15997": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "POP",
      "path": "20"
    },
    "15998": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "16000": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "16001": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "16002": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "16004": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "DUP2",
      "path": "20"
    },
    "16005": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "LT",
      "path": "20"
    },
    "16006": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "16007": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3E8F"
    },
    "16010": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "16011": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "16013": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "DUP1",
      "path": "20"
    },
    "16014": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "REVERT",
      "path": "20"
    },
    "16015": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46949,
        46986
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "16016": {
      "op": "POP"
    },
    "16017": {
      "op": "POP"
    },
    "16018": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        46997
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 156,
      "value": "0x1E"
    },
    "16020": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        46997
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "16021": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "16023": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "DUP1",
      "path": "20"
    },
    "16024": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "16025": {
      "op": "PUSH4",
      "value": "0xB6B55F25"
    },
    "16030": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16032": {
      "op": "SHL"
    },
    "16033": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "DUP2",
      "path": "20"
    },
    "16034": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "16035": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "16037": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "DUP2",
      "path": "20"
    },
    "16038": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "ADD",
      "path": "20"
    },
    "16039": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "DUP5",
      "path": "20"
    },
    "16040": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "16041": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "16042": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "16043": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "16044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16048": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16050": {
      "op": "SHL"
    },
    "16051": {
      "op": "SUB"
    },
    "16052": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        46997
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "16053": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        46997
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "16054": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        46997
      ],
      "op": "AND",
      "path": "20"
    },
    "16055": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        46997
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "16056": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47005
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xB6B55F25"
    },
    "16061": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47005
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "16062": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "16064": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "DUP1",
      "path": "20"
    },
    "16065": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "DUP3",
      "path": "20"
    },
    "16066": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "ADD",
      "path": "20"
    },
    "16067": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "16068": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        46997
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "16070": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        46997
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "16071": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "16072": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "16073": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "16074": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "DUP3",
      "path": "20"
    },
    "16075": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "16076": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "SUB",
      "path": "20"
    },
    "16077": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "ADD",
      "path": "20"
    },
    "16078": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "DUP2",
      "path": "20"
    },
    "16079": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        46997
      ],
      "op": "DUP4",
      "path": "20"
    },
    "16080": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        46997
      ],
      "op": "DUP8",
      "path": "20"
    },
    "16081": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "DUP1",
      "path": "20"
    },
    "16082": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "16083": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "16084": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "DUP1",
      "path": "20"
    },
    "16085": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "16086": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3EDE"
    },
    "16089": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "16090": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "16092": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "DUP1",
      "path": "20"
    },
    "16093": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "REVERT",
      "path": "20"
    },
    "16094": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "16095": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "POP",
      "path": "20"
    },
    "16096": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "GAS",
      "path": "20"
    },
    "16097": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "CALL",
      "path": "20"
    },
    "16098": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "16099": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "DUP1",
      "path": "20"
    },
    "16100": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "16101": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3EF2"
    },
    "16104": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "16105": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "16106": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "16108": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "DUP1",
      "path": "20"
    },
    "16109": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "16110": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "16111": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "16113": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "REVERT",
      "path": "20"
    },
    "16114": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "16115": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "POP",
      "path": "20"
    },
    "16116": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "POP",
      "path": "20"
    },
    "16117": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "POP",
      "path": "20"
    },
    "16118": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46992,
        47014
      ],
      "op": "POP",
      "path": "20"
    },
    "16119": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "offset": [
        46893,
        47019
      ],
      "op": "POP",
      "path": "20"
    },
    "16120": {
      "fn": "BuyTheDipNFT.lendStableCoin",
      "jump": "o",
      "offset": [
        46893,
        47019
      ],
      "op": "JUMP",
      "path": "20"
    },
    "16121": {
      "fn": "EnumerableMap.at",
      "offset": [
        8269,
        8502
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "16122": {
      "fn": "EnumerableMap.at",
      "offset": [
        8349,
        8356
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "16124": {
      "fn": "EnumerableMap.at",
      "offset": [
        8349,
        8356
      ],
      "op": "DUP1",
      "path": "11"
    },
    "16125": {
      "fn": "EnumerableMap.at",
      "offset": [
        8349,
        8356
      ],
      "op": "DUP1",
      "path": "11"
    },
    "16126": {
      "fn": "EnumerableMap.at",
      "offset": [
        8349,
        8356
      ],
      "op": "DUP1",
      "path": "11"
    },
    "16127": {
      "fn": "EnumerableMap.at",
      "offset": [
        8408,
        8430
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x3F08"
    },
    "16130": {
      "fn": "EnumerableMap.at",
      "offset": [
        8412,
        8415
      ],
      "op": "DUP7",
      "path": "11"
    },
    "16131": {
      "fn": "EnumerableMap.at",
      "offset": [
        8424,
        8429
      ],
      "op": "DUP7",
      "path": "11"
    },
    "16132": {
      "fn": "EnumerableMap.at",
      "offset": [
        8408,
        8411
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x44B9"
    },
    "16135": {
      "fn": "EnumerableMap.at",
      "jump": "i",
      "offset": [
        8408,
        8430
      ],
      "op": "JUMP",
      "path": "11"
    },
    "16136": {
      "fn": "EnumerableMap.at",
      "offset": [
        8408,
        8430
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "16137": {
      "fn": "EnumerableMap.at",
      "offset": [
        8377,
        8430
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "16138": {
      "fn": "EnumerableMap.at",
      "offset": [
        8377,
        8430
      ],
      "op": "SWAP8",
      "path": "11"
    },
    "16139": {
      "fn": "EnumerableMap.at",
      "offset": [
        8377,
        8430
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "16140": {
      "fn": "EnumerableMap.at",
      "offset": [
        8377,
        8430
      ],
      "op": "SWAP7",
      "path": "11"
    },
    "16141": {
      "op": "POP"
    },
    "16142": {
      "fn": "EnumerableMap.at",
      "offset": [
        8269,
        8502
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "16143": {
      "op": "POP"
    },
    "16144": {
      "op": "POP"
    },
    "16145": {
      "op": "POP"
    },
    "16146": {
      "op": "POP"
    },
    "16147": {
      "op": "POP"
    },
    "16148": {
      "fn": "EnumerableMap.at",
      "jump": "o",
      "offset": [
        8269,
        8502
      ],
      "op": "JUMP",
      "path": "11"
    },
    "16149": {
      "fn": "EnumerableMap.get",
      "offset": [
        9522,
        9733
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "16150": {
      "fn": "EnumerableMap.get",
      "offset": [
        9629,
        9636
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "16152": {
      "fn": "EnumerableMap.get",
      "offset": [
        9679,
        9723
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 157,
      "value": "0x383A"
    },
    "16155": {
      "fn": "EnumerableMap.get",
      "offset": [
        9684,
        9687
      ],
      "op": "DUP5",
      "path": "11"
    },
    "16156": {
      "fn": "EnumerableMap.get",
      "offset": [
        9704,
        9707
      ],
      "op": "DUP5",
      "path": "11"
    },
    "16157": {
      "fn": "EnumerableMap.get",
      "offset": [
        9710,
        9722
      ],
      "op": "DUP5",
      "path": "11"
    },
    "16158": {
      "fn": "EnumerableMap.get",
      "offset": [
        9679,
        9683
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4534"
    },
    "16161": {
      "fn": "EnumerableMap.get",
      "jump": "i",
      "offset": [
        9679,
        9723
      ],
      "op": "JUMP",
      "path": "11"
    },
    "16162": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9811,
        10080
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "16163": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9924,
        9952
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 158,
      "value": "0x3F2D"
    },
    "16166": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9934,
        9938
      ],
      "op": "DUP5",
      "path": "4"
    },
    "16167": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9940,
        9942
      ],
      "op": "DUP5",
      "path": "4"
    },
    "16168": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9944,
        9951
      ],
      "op": "DUP5",
      "path": "4"
    },
    "16169": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9924,
        9933
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x38B0"
    },
    "16172": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        9924,
        9952
      ],
      "op": "JUMP",
      "path": "4"
    },
    "16173": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9924,
        9952
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "16174": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9970,
        10018
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 159,
      "value": "0x3F39"
    },
    "16177": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9993,
        9997
      ],
      "op": "DUP5",
      "path": "4"
    },
    "16178": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9999,
        10001
      ],
      "op": "DUP5",
      "path": "4"
    },
    "16179": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10003,
        10010
      ],
      "op": "DUP5",
      "path": "4"
    },
    "16180": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        10012,
        10017
      ],
      "op": "DUP5",
      "path": "4"
    },
    "16181": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9970,
        9992
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x45FE"
    },
    "16184": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        9970,
        10018
      ],
      "op": "JUMP",
      "path": "4"
    },
    "16185": {
      "branch": 272,
      "fn": "ERC721._safeTransfer",
      "offset": [
        9970,
        10018
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "16186": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9962,
        10073
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2560"
    },
    "16189": {
      "branch": 272,
      "fn": "ERC721._safeTransfer",
      "offset": [
        9962,
        10073
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "16190": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9962,
        10073
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "16192": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9962,
        10073
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "16193": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "16197": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "16199": {
      "op": "SHL"
    },
    "16200": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9962,
        10073
      ],
      "op": "DUP2",
      "path": "4"
    },
    "16201": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9962,
        10073
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "16202": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9962,
        10073
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "16204": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9962,
        10073
      ],
      "op": "ADD",
      "path": "4"
    },
    "16205": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9962,
        10073
      ],
      "op": "DUP1",
      "path": "4"
    },
    "16206": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9962,
        10073
      ],
      "op": "DUP1",
      "path": "4"
    },
    "16207": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9962,
        10073
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "16209": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9962,
        10073
      ],
      "op": "ADD",
      "path": "4"
    },
    "16210": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9962,
        10073
      ],
      "op": "DUP3",
      "path": "4"
    },
    "16211": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9962,
        10073
      ],
      "op": "DUP2",
      "path": "4"
    },
    "16212": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9962,
        10073
      ],
      "op": "SUB",
      "path": "4"
    },
    "16213": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9962,
        10073
      ],
      "op": "DUP3",
      "path": "4"
    },
    "16214": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9962,
        10073
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "16215": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9962,
        10073
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x32"
    },
    "16217": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9962,
        10073
      ],
      "op": "DUP2",
      "path": "4"
    },
    "16218": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9962,
        10073
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "16219": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9962,
        10073
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "16221": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9962,
        10073
      ],
      "op": "ADD",
      "path": "4"
    },
    "16222": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9962,
        10073
      ],
      "op": "DUP1",
      "path": "4"
    },
    "16223": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9962,
        10073
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x517E"
    },
    "16226": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9962,
        10073
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x32"
    },
    "16228": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9962,
        10073
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "16229": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9962,
        10073
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "16230": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9962,
        10073
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "16232": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9962,
        10073
      ],
      "op": "ADD",
      "path": "4"
    },
    "16233": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9962,
        10073
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "16234": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9962,
        10073
      ],
      "op": "POP",
      "path": "4"
    },
    "16235": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9962,
        10073
      ],
      "op": "POP",
      "path": "4"
    },
    "16236": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9962,
        10073
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "16238": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9962,
        10073
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "16239": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9962,
        10073
      ],
      "op": "DUP1",
      "path": "4"
    },
    "16240": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9962,
        10073
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "16241": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9962,
        10073
      ],
      "op": "SUB",
      "path": "4"
    },
    "16242": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9962,
        10073
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "16243": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9962,
        10073
      ],
      "op": "REVERT",
      "path": "4"
    },
    "16244": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42191,
        42561
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "16245": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42292,
        42319
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "16247": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42331,
        42350
      ],
      "op": "DUP1",
      "path": "20"
    },
    "16248": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42353,
        42386
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3F8C"
    },
    "16251": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42371,
        42385
      ],
      "op": "DUP5",
      "path": "20"
    },
    "16252": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42367,
        42369
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "16254": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42367,
        42385
      ],
      "op": "EXP",
      "path": "20"
    },
    "16255": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42362,
        42364
      ],
      "op": "DUP7",
      "path": "20"
    },
    "16256": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42362,
        42385
      ],
      "op": "DUP2",
      "path": "20"
    },
    "16257": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42362,
        42385
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3F86"
    },
    "16260": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42362,
        42385
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "16261": {
      "dev": "Division by zero",
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42362,
        42385
      ],
      "op": "INVALID",
      "path": "20"
    },
    "16262": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42362,
        42385
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "16263": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42362,
        42385
      ],
      "op": "DIV",
      "path": "20"
    },
    "16264": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42353,
        42361
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2D64"
    },
    "16267": {
      "fn": "BuyTheDipNFT.uint2str",
      "jump": "i",
      "offset": [
        42353,
        42386
      ],
      "op": "JUMP",
      "path": "20"
    },
    "16268": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42353,
        42386
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "16269": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42331,
        42386
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "16270": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42331,
        42386
      ],
      "op": "POP",
      "path": "20"
    },
    "16271": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42396,
        42416
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "16273": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42419,
        42493
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3FAD"
    },
    "16276": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42477,
        42491
      ],
      "op": "DUP5",
      "path": "20"
    },
    "16277": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42460,
        42474
      ],
      "op": "DUP7",
      "path": "20"
    },
    "16278": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42460,
        42491
      ],
      "op": "SUB",
      "path": "20"
    },
    "16279": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42455,
        42457
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "16281": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42455,
        42492
      ],
      "op": "EXP",
      "path": "20"
    },
    "16282": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42438,
        42452
      ],
      "op": "DUP7",
      "path": "20"
    },
    "16283": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42434,
        42436
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xA"
    },
    "16285": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42434,
        42452
      ],
      "op": "EXP",
      "path": "20"
    },
    "16286": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42429,
        42431
      ],
      "op": "DUP9",
      "path": "20"
    },
    "16287": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42429,
        42452
      ],
      "op": "DUP2",
      "path": "20"
    },
    "16288": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42429,
        42452
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3FA5"
    },
    "16291": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42429,
        42452
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "16292": {
      "dev": "Modulus by zero",
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42429,
        42452
      ],
      "op": "INVALID",
      "path": "20"
    },
    "16293": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42429,
        42452
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "16294": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42429,
        42452
      ],
      "op": "MOD",
      "path": "20"
    },
    "16295": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42428,
        42492
      ],
      "op": "DUP2",
      "path": "20"
    },
    "16296": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42428,
        42492
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3F86"
    },
    "16299": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42428,
        42492
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "16300": {
      "dev": "Division by zero",
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42428,
        42492
      ],
      "op": "INVALID",
      "path": "20"
    },
    "16301": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42419,
        42493
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "16302": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42396,
        42493
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "16303": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42396,
        42493
      ],
      "op": "POP",
      "path": "20"
    },
    "16304": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42534,
        42539
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 160
    },
    "16305": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42546,
        42552
      ],
      "op": "DUP2",
      "path": "20"
    },
    "16306": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "16308": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "16309": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "16311": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "ADD",
      "path": "20"
    },
    "16312": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "DUP1",
      "path": "20"
    },
    "16313": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "DUP4",
      "path": "20"
    },
    "16314": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "DUP1",
      "path": "20"
    },
    "16315": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "16316": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "16317": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "16319": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "ADD",
      "path": "20"
    },
    "16320": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "16321": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "DUP1",
      "path": "20"
    },
    "16322": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "DUP4",
      "path": "20"
    },
    "16323": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "DUP4",
      "path": "20"
    },
    "16324": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "16325": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "16327": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "DUP4",
      "path": "20"
    },
    "16328": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "LT",
      "path": "20"
    },
    "16329": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3FE3"
    },
    "16332": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "16333": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "DUP1",
      "path": "20"
    },
    "16334": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "16335": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "DUP3",
      "path": "20"
    },
    "16336": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "16337": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16339": {
      "op": "NOT"
    },
    "16340": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "16341": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "16342": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "ADD",
      "path": "20"
    },
    "16343": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "16344": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "16346": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "16347": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "DUP3",
      "path": "20"
    },
    "16348": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "ADD",
      "path": "20"
    },
    "16349": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "16350": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "ADD",
      "path": "20"
    },
    "16351": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3FC4"
    },
    "16354": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "JUMP",
      "path": "20"
    },
    "16355": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "16356": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "16358": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "DUP4",
      "path": "20"
    },
    "16359": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "16361": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "SUB",
      "path": "20"
    },
    "16362": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "16365": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "EXP",
      "path": "20"
    },
    "16366": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "SUB",
      "path": "20"
    },
    "16367": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "DUP1",
      "path": "20"
    },
    "16368": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "NOT",
      "path": "20"
    },
    "16369": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "DUP3",
      "path": "20"
    },
    "16370": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "16371": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "AND",
      "path": "20"
    },
    "16372": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "DUP2",
      "path": "20"
    },
    "16373": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "DUP5",
      "path": "20"
    },
    "16374": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "16375": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "AND",
      "path": "20"
    },
    "16376": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "DUP1",
      "path": "20"
    },
    "16377": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "DUP3",
      "path": "20"
    },
    "16378": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "OR",
      "path": "20"
    },
    "16379": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "DUP6",
      "path": "20"
    },
    "16380": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "16381": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "POP",
      "path": "20"
    },
    "16382": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "POP",
      "path": "20"
    },
    "16383": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "POP",
      "path": "20"
    },
    "16384": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "POP",
      "path": "20"
    },
    "16385": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "POP",
      "path": "20"
    },
    "16386": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "POP",
      "path": "20"
    },
    "16387": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "16388": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "POP",
      "path": "20"
    },
    "16389": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "ADD",
      "path": "20"
    },
    "16390": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "DUP1",
      "path": "20"
    },
    "16391": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "16393": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "16395": {
      "op": "SHL"
    },
    "16396": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "DUP2",
      "path": "20"
    },
    "16397": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "16398": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "POP",
      "path": "20"
    },
    "16399": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "16401": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "ADD",
      "path": "20"
    },
    "16402": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "DUP3",
      "path": "20"
    },
    "16403": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "DUP1",
      "path": "20"
    },
    "16404": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "16405": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "16406": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "16408": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "ADD",
      "path": "20"
    },
    "16409": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "16410": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "DUP1",
      "path": "20"
    },
    "16411": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "DUP4",
      "path": "20"
    },
    "16412": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "DUP4",
      "path": "20"
    },
    "16413": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "16414": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "16416": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "DUP4",
      "path": "20"
    },
    "16417": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "LT",
      "path": "20"
    },
    "16418": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x403C"
    },
    "16421": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "16422": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "DUP1",
      "path": "20"
    },
    "16423": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "16424": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "DUP3",
      "path": "20"
    },
    "16425": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "16426": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "16428": {
      "op": "NOT"
    },
    "16429": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "16430": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "16431": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "ADD",
      "path": "20"
    },
    "16432": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "16433": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "16435": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "16436": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "DUP3",
      "path": "20"
    },
    "16437": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "ADD",
      "path": "20"
    },
    "16438": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "16439": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "ADD",
      "path": "20"
    },
    "16440": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x401D"
    },
    "16443": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "JUMP",
      "path": "20"
    },
    "16444": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "16445": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "16447": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "DUP4",
      "path": "20"
    },
    "16448": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "16450": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "SUB",
      "path": "20"
    },
    "16451": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x100"
    },
    "16454": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "EXP",
      "path": "20"
    },
    "16455": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "SUB",
      "path": "20"
    },
    "16456": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "DUP1",
      "path": "20"
    },
    "16457": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "NOT",
      "path": "20"
    },
    "16458": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "DUP3",
      "path": "20"
    },
    "16459": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "16460": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "AND",
      "path": "20"
    },
    "16461": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "DUP2",
      "path": "20"
    },
    "16462": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "DUP5",
      "path": "20"
    },
    "16463": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "16464": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "AND",
      "path": "20"
    },
    "16465": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "DUP1",
      "path": "20"
    },
    "16466": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "DUP3",
      "path": "20"
    },
    "16467": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "OR",
      "path": "20"
    },
    "16468": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "DUP6",
      "path": "20"
    },
    "16469": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "16470": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "POP",
      "path": "20"
    },
    "16471": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "POP",
      "path": "20"
    },
    "16472": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "POP",
      "path": "20"
    },
    "16473": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "POP",
      "path": "20"
    },
    "16474": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "POP",
      "path": "20"
    },
    "16475": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "POP",
      "path": "20"
    },
    "16476": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "16477": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "POP",
      "path": "20"
    },
    "16478": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "ADD",
      "path": "20"
    },
    "16479": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "16480": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "POP",
      "path": "20"
    },
    "16481": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "POP",
      "path": "20"
    },
    "16482": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "POP",
      "path": "20"
    },
    "16483": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "16485": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "16486": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "16488": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "DUP2",
      "path": "20"
    },
    "16489": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "DUP4",
      "path": "20"
    },
    "16490": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "SUB",
      "path": "20"
    },
    "16491": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "SUB",
      "path": "20"
    },
    "16492": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "DUP2",
      "path": "20"
    },
    "16493": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "16494": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "16495": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "16497": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42517,
        42553
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "16498": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42503,
        42554
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "16499": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42503,
        42554
      ],
      "op": "POP",
      "path": "20"
    },
    "16500": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42503,
        42554
      ],
      "op": "POP",
      "path": "20"
    },
    "16501": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42503,
        42554
      ],
      "op": "POP",
      "path": "20"
    },
    "16502": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42191,
        42561
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "16503": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42191,
        42561
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "16504": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42191,
        42561
      ],
      "op": "POP",
      "path": "20"
    },
    "16505": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42191,
        42561
      ],
      "op": "POP",
      "path": "20"
    },
    "16506": {
      "fn": "BuyTheDipNFT.uint2str",
      "offset": [
        42191,
        42561
      ],
      "op": "POP",
      "path": "20"
    },
    "16507": {
      "fn": "BuyTheDipNFT.uint2str",
      "jump": "o",
      "offset": [
        42191,
        42561
      ],
      "op": "JUMP",
      "path": "20"
    },
    "16508": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47351,
        47702
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "16509": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47534
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1E"
    },
    "16511": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47534
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "16512": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "16514": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "DUP1",
      "path": "20"
    },
    "16515": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "16516": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "16521": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "16523": {
      "op": "SHL"
    },
    "16524": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "DUP2",
      "path": "20"
    },
    "16525": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "16526": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47553,
        47557
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "16527": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "16529": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "DUP3",
      "path": "20"
    },
    "16530": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "ADD",
      "path": "20"
    },
    "16531": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "16532": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "16533": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "16534": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47415,
        47422
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "16536": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47415,
        47422
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "16537": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47498,
        47499
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "16539": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47498,
        47499
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "16540": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47415,
        47422
      ],
      "op": "DUP5",
      "path": "20"
    },
    "16541": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47415,
        47422
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "16542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "16546": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "16548": {
      "op": "SHL"
    },
    "16549": {
      "op": "SUB"
    },
    "16550": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47534
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "16551": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47534
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "16552": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47534
      ],
      "op": "AND",
      "path": "20"
    },
    "16553": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47534
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "16554": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47544
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x70A08231"
    },
    "16559": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47544
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "16560": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "16562": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "DUP1",
      "path": "20"
    },
    "16563": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "DUP3",
      "path": "20"
    },
    "16564": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "ADD",
      "path": "20"
    },
    "16565": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "16566": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "16568": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "16569": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "16570": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "16571": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "16572": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "DUP3",
      "path": "20"
    },
    "16573": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "16574": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "SUB",
      "path": "20"
    },
    "16575": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "ADD",
      "path": "20"
    },
    "16576": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "DUP2",
      "path": "20"
    },
    "16577": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47534
      ],
      "op": "DUP7",
      "path": "20"
    },
    "16578": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "DUP1",
      "path": "20"
    },
    "16579": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "16580": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "16581": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "DUP1",
      "path": "20"
    },
    "16582": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "16583": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x40CF"
    },
    "16586": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "16587": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "16589": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "DUP1",
      "path": "20"
    },
    "16590": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "REVERT",
      "path": "20"
    },
    "16591": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "16592": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "POP",
      "path": "20"
    },
    "16593": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "GAS",
      "path": "20"
    },
    "16594": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "16595": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "16596": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "DUP1",
      "path": "20"
    },
    "16597": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "16598": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x40E3"
    },
    "16601": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "16602": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "16603": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "16605": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "DUP1",
      "path": "20"
    },
    "16606": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "16607": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "16608": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "16610": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "REVERT",
      "path": "20"
    },
    "16611": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "16612": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "POP",
      "path": "20"
    },
    "16613": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "POP",
      "path": "20"
    },
    "16614": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "POP",
      "path": "20"
    },
    "16615": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "POP",
      "path": "20"
    },
    "16616": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "16618": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "16619": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "16620": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "16622": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "DUP2",
      "path": "20"
    },
    "16623": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "LT",
      "path": "20"
    },
    "16624": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "16625": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x40F9"
    },
    "16628": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "16629": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "16631": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "DUP1",
      "path": "20"
    },
    "16632": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "REVERT",
      "path": "20"
    },
    "16633": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "16634": {
      "op": "POP"
    },
    "16635": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "16636": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47565,
        47579
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "16638": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47582,
        47611
      ],
      "op": "DUP6",
      "path": "20"
    },
    "16639": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47582,
        47611
      ],
      "op": "DUP2",
      "path": "20"
    },
    "16640": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47582,
        47611
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "16641": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47582,
        47601
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xF"
    },
    "16643": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "16645": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47582,
        47611
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "16646": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47582,
        47611
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "16648": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47582,
        47611
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "16649": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47582,
        47611
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "16650": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47582,
        47611
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "16651": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47624,
        47639
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 161,
      "value": "0x14"
    },
    "16653": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47624,
        47639
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "16654": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "16655": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47529,
        47559
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "16656": {
      "op": "POP"
    },
    "16657": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47582,
        47611
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "16658": {
      "branch": 250,
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47624,
        47642
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "16659": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47624,
        47697
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x412B"
    },
    "16662": {
      "branch": 250,
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47624,
        47697
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "16663": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47682,
        47697
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x14"
    },
    "16665": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47682,
        47697
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "16666": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47673,
        47679
      ],
      "op": "DUP2",
      "path": "20"
    },
    "16667": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47665,
        47670
      ],
      "op": "DUP5",
      "path": "20"
    },
    "16668": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47649,
        47662
      ],
      "op": "DUP5",
      "path": "20"
    },
    "16669": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47649,
        47670
      ],
      "op": "MUL",
      "path": "20"
    },
    "16670": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47649,
        47679
      ],
      "op": "MUL",
      "path": "20"
    },
    "16671": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47649,
        47697
      ],
      "op": "DUP2",
      "path": "20"
    },
    "16672": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47649,
        47697
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4125"
    },
    "16675": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47649,
        47697
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "16676": {
      "dev": "Division by zero",
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47649,
        47697
      ],
      "op": "INVALID",
      "path": "20"
    },
    "16677": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47649,
        47697
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "16678": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47649,
        47697
      ],
      "op": "DIV",
      "path": "20"
    },
    "16679": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47624,
        47697
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x412E"
    },
    "16682": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47624,
        47697
      ],
      "op": "JUMP",
      "path": "20"
    },
    "16683": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47624,
        47697
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "16684": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47645,
        47646
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "16686": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47624,
        47697
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "16687": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47617,
        47697
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "16688": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "offset": [
        47351,
        47702
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "16689": {
      "op": "POP"
    },
    "16690": {
      "op": "POP"
    },
    "16691": {
      "op": "POP"
    },
    "16692": {
      "op": "POP"
    },
    "16693": {
      "op": "POP"
    },
    "16694": {
      "fn": "BuyTheDipNFT.lendingBalance",
      "jump": "o",
      "offset": [
        47351,
        47702
      ],
      "op": "JUMP",
      "path": "20"
    },
    "16695": {
      "fn": "Base64.encode3",
      "offset": [
        1342,
        1837
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "16696": {
      "fn": "Base64.encode3",
      "offset": [
        1709,
        1723
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 162,
      "value": "0x40"
    },
    "16698": {
      "fn": "Base64.encode3",
      "offset": [
        1709,
        1723
      ],
      "op": "DUP1",
      "path": "21"
    },
    "16699": {
      "fn": "Base64.encode3",
      "offset": [
        1709,
        1723
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "16700": {
      "fn": "Base64.encode3",
      "offset": [
        1709,
        1723
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x60"
    },
    "16702": {
      "fn": "Base64.encode3",
      "offset": [
        1709,
        1723
      ],
      "op": "DUP2",
      "path": "21"
    },
    "16703": {
      "fn": "Base64.encode3",
      "offset": [
        1709,
        1723
      ],
      "op": "ADD",
      "path": "21"
    },
    "16704": {
      "fn": "Base64.encode3",
      "offset": [
        1709,
        1723
      ],
      "op": "DUP3",
      "path": "21"
    },
    "16705": {
      "fn": "Base64.encode3",
      "offset": [
        1709,
        1723
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "16706": {
      "fn": "Base64.encode3",
      "offset": [
        1709,
        1723
      ],
      "op": "DUP2",
      "path": "21"
    },
    "16707": {
      "fn": "Base64.encode3",
      "offset": [
        1709,
        1723
      ],
      "op": "DUP2",
      "path": "21"
    },
    "16708": {
      "fn": "Base64.encode3",
      "offset": [
        1709,
        1723
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "16709": {
      "fn": "Base64.encode3",
      "offset": [
        1444,
        1451
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "16711": {
      "fn": "Base64.encode3",
      "offset": [
        1444,
        1451
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "16712": {
      "fn": "Base64.encode3",
      "offset": [
        1444,
        1451
      ],
      "op": "DUP3",
      "path": "21"
    },
    "16713": {
      "fn": "Base64.encode3",
      "offset": [
        1444,
        1451
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "16714": {
      "fn": "Base64.encode3",
      "offset": [
        1444,
        1451
      ],
      "op": "DUP3",
      "path": "21"
    },
    "16715": {
      "fn": "Base64.encode3",
      "offset": [
        1444,
        1451
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "16716": {
      "fn": "Base64.encode3",
      "offset": [
        1444,
        1451
      ],
      "op": "DUP3",
      "path": "21"
    },
    "16717": {
      "fn": "Base64.encode3",
      "offset": [
        1444,
        1451
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "16718": {
      "fn": "Base64.encode3",
      "offset": [
        1517,
        1519
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x10"
    },
    "16720": {
      "fn": "Base64.encode3",
      "offset": [
        1511,
        1519
      ],
      "op": "DUP10",
      "path": "21"
    },
    "16721": {
      "fn": "Base64.encode3",
      "offset": [
        1511,
        1519
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "16722": {
      "fn": "Base64.encode3",
      "offset": [
        1511,
        1519
      ],
      "op": "SHL",
      "path": "21"
    },
    "16723": {
      "fn": "Base64.encode3",
      "offset": [
        1530,
        1531
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x8"
    },
    "16725": {
      "fn": "Base64.encode3",
      "offset": [
        1524,
        1531
      ],
      "op": "DUP10",
      "path": "21"
    },
    "16726": {
      "fn": "Base64.encode3",
      "offset": [
        1524,
        1531
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "16727": {
      "fn": "Base64.encode3",
      "offset": [
        1524,
        1531
      ],
      "op": "SHL",
      "path": "21"
    },
    "16728": {
      "fn": "Base64.encode3",
      "offset": [
        1510,
        1532
      ],
      "op": "OR",
      "path": "21"
    },
    "16729": {
      "fn": "Base64.encode3",
      "offset": [
        1510,
        1537
      ],
      "op": "DUP8",
      "path": "21"
    },
    "16730": {
      "fn": "Base64.encode3",
      "offset": [
        1510,
        1537
      ],
      "op": "OR",
      "path": "21"
    },
    "16731": {
      "fn": "Base64.encode3",
      "offset": [
        1510,
        1537
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "16732": {
      "fn": "Base64.encode3",
      "offset": [
        1575,
        1577
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x3F"
    },
    "16734": {
      "fn": "Base64.encode3",
      "offset": [
        1569,
        1571
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x12"
    },
    "16736": {
      "fn": "Base64.encode3",
      "offset": [
        1564,
        1571
      ],
      "op": "DUP5",
      "path": "21"
    },
    "16737": {
      "fn": "Base64.encode3",
      "offset": [
        1564,
        1571
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "16738": {
      "fn": "Base64.encode3",
      "offset": [
        1564,
        1571
      ],
      "op": "SHR",
      "path": "21"
    },
    "16739": {
      "fn": "Base64.encode3",
      "offset": [
        1563,
        1577
      ],
      "op": "DUP2",
      "path": "21"
    },
    "16740": {
      "fn": "Base64.encode3",
      "offset": [
        1563,
        1577
      ],
      "op": "AND",
      "path": "21"
    },
    "16741": {
      "fn": "Base64.encode3",
      "offset": [
        1563,
        1577
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "16742": {
      "fn": "Base64.encode3",
      "offset": [
        1607,
        1609
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xC"
    },
    "16744": {
      "fn": "Base64.encode3",
      "offset": [
        1602,
        1609
      ],
      "op": "DUP6",
      "path": "21"
    },
    "16745": {
      "fn": "Base64.encode3",
      "offset": [
        1602,
        1609
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "16746": {
      "fn": "Base64.encode3",
      "offset": [
        1602,
        1609
      ],
      "op": "SHR",
      "path": "21"
    },
    "16747": {
      "fn": "Base64.encode3",
      "offset": [
        1601,
        1615
      ],
      "op": "DUP3",
      "path": "21"
    },
    "16748": {
      "fn": "Base64.encode3",
      "offset": [
        1601,
        1615
      ],
      "op": "AND",
      "path": "21"
    },
    "16749": {
      "fn": "Base64.encode3",
      "offset": [
        1601,
        1615
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "16750": {
      "fn": "Base64.encode3",
      "offset": [
        1646,
        1647
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x6"
    },
    "16752": {
      "fn": "Base64.encode3",
      "offset": [
        1640,
        1647
      ],
      "op": "DUP7",
      "path": "21"
    },
    "16753": {
      "fn": "Base64.encode3",
      "offset": [
        1640,
        1647
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "16754": {
      "fn": "Base64.encode3",
      "offset": [
        1640,
        1647
      ],
      "op": "SHR",
      "path": "21"
    },
    "16755": {
      "fn": "Base64.encode3",
      "offset": [
        1639,
        1653
      ],
      "op": "DUP4",
      "path": "21"
    },
    "16756": {
      "fn": "Base64.encode3",
      "offset": [
        1639,
        1653
      ],
      "op": "AND",
      "path": "21"
    },
    "16757": {
      "fn": "Base64.encode3",
      "offset": [
        1639,
        1653
      ],
      "op": "SWAP3",
      "path": "21"
    },
    "16758": {
      "fn": "Base64.encode3",
      "offset": [
        1677,
        1691
      ],
      "op": "DUP7",
      "path": "21"
    },
    "16759": {
      "fn": "Base64.encode3",
      "offset": [
        1677,
        1691
      ],
      "op": "AND",
      "path": "21"
    },
    "16760": {
      "fn": "Base64.encode3",
      "offset": [
        1677,
        1691
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "16761": {
      "fn": "Base64.encode3",
      "offset": [
        1709,
        1723
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "16762": {
      "fn": "Base64.encode3",
      "offset": [
        1709,
        1723
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x53FA"
    },
    "16765": {
      "fn": "Base64.encode3",
      "offset": [
        1709,
        1723
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "16767": {
      "fn": "Base64.encode3",
      "offset": [
        1709,
        1723
      ],
      "op": "DUP4",
      "path": "21"
    },
    "16768": {
      "fn": "Base64.encode3",
      "offset": [
        1709,
        1723
      ],
      "op": "ADD",
      "path": "21"
    },
    "16769": {
      "fn": "Base64.encode3",
      "offset": [
        1709,
        1723
      ],
      "op": "CODECOPY",
      "path": "21"
    },
    "16770": {
      "fn": "Base64.encode3",
      "offset": [
        1724,
        1726
      ],
      "op": "DUP5",
      "path": "21"
    },
    "16771": {
      "fn": "Base64.encode3",
      "offset": [
        1709,
        1727
      ],
      "op": "DUP2",
      "path": "21"
    },
    "16772": {
      "fn": "Base64.encode3",
      "offset": [
        1709,
        1727
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "16773": {
      "fn": "Base64.encode3",
      "offset": [
        1709,
        1727
      ],
      "op": "DUP2",
      "path": "21"
    },
    "16774": {
      "fn": "Base64.encode3",
      "offset": [
        1709,
        1727
      ],
      "op": "LT",
      "path": "21"
    },
    "16775": {
      "fn": "Base64.encode3",
      "offset": [
        1709,
        1727
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x418C"
    },
    "16778": {
      "fn": "Base64.encode3",
      "offset": [
        1709,
        1727
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "16779": {
      "dev": "Index out of range",
      "fn": "Base64.encode3",
      "offset": [
        1709,
        1727
      ],
      "op": "INVALID",
      "path": "21"
    },
    "16780": {
      "fn": "Base64.encode3",
      "offset": [
        1709,
        1727
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "16781": {
      "fn": "Base64.encode3",
      "offset": [
        1709,
        1727
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "16783": {
      "fn": "Base64.encode3",
      "offset": [
        1709,
        1727
      ],
      "op": "ADD",
      "path": "21"
    },
    "16784": {
      "fn": "Base64.encode3",
      "offset": [
        1709,
        1727
      ],
      "op": "ADD",
      "path": "21"
    },
    "16785": {
      "fn": "Base64.encode3",
      "offset": [
        1709,
        1727
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "16786": {
      "fn": "Base64.encode3",
      "offset": [
        1709,
        1727
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xF8"
    },
    "16788": {
      "fn": "Base64.encode3",
      "offset": [
        1709,
        1727
      ],
      "op": "SHR",
      "path": "21"
    },
    "16789": {
      "fn": "Base64.encode3",
      "offset": [
        1709,
        1727
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xF8"
    },
    "16791": {
      "fn": "Base64.encode3",
      "offset": [
        1709,
        1727
      ],
      "op": "SHL",
      "path": "21"
    },
    "16792": {
      "fn": "Base64.encode3",
      "offset": [
        1704,
        1727
      ],
      "op": "SWAP9",
      "path": "21"
    },
    "16793": {
      "fn": "Base64.encode3",
      "offset": [
        1704,
        1727
      ],
      "op": "POP",
      "path": "21"
    },
    "16794": {
      "fn": "Base64.encode3",
      "offset": [
        1743,
        1757
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 163,
      "value": "0x40"
    },
    "16796": {
      "fn": "Base64.encode3",
      "offset": [
        1743,
        1757
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "16797": {
      "fn": "Base64.encode3",
      "offset": [
        1743,
        1757
      ],
      "op": "DUP1",
      "path": "21"
    },
    "16798": {
      "fn": "Base64.encode3",
      "offset": [
        1743,
        1757
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x60"
    },
    "16800": {
      "fn": "Base64.encode3",
      "offset": [
        1743,
        1757
      ],
      "op": "ADD",
      "path": "21"
    },
    "16801": {
      "fn": "Base64.encode3",
      "offset": [
        1743,
        1757
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "16803": {
      "fn": "Base64.encode3",
      "offset": [
        1743,
        1757
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "16804": {
      "fn": "Base64.encode3",
      "offset": [
        1743,
        1757
      ],
      "op": "DUP1",
      "path": "21"
    },
    "16805": {
      "fn": "Base64.encode3",
      "offset": [
        1743,
        1757
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "16807": {
      "fn": "Base64.encode3",
      "offset": [
        1743,
        1757
      ],
      "op": "DUP2",
      "path": "21"
    },
    "16808": {
      "fn": "Base64.encode3",
      "offset": [
        1743,
        1757
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "16809": {
      "fn": "Base64.encode3",
      "offset": [
        1743,
        1757
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "16811": {
      "fn": "Base64.encode3",
      "offset": [
        1743,
        1757
      ],
      "op": "ADD",
      "path": "21"
    },
    "16812": {
      "fn": "Base64.encode3",
      "offset": [
        1743,
        1757
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x53FA"
    },
    "16815": {
      "fn": "Base64.encode3",
      "offset": [
        1743,
        1757
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "16817": {
      "fn": "Base64.encode3",
      "offset": [
        1743,
        1757
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "16818": {
      "fn": "Base64.encode3",
      "offset": [
        1743,
        1757
      ],
      "op": "CODECOPY",
      "path": "21"
    },
    "16819": {
      "fn": "Base64.encode3",
      "offset": [
        1758,
        1760
      ],
      "op": "DUP4",
      "path": "21"
    },
    "16820": {
      "fn": "Base64.encode3",
      "offset": [
        1743,
        1761
      ],
      "op": "DUP2",
      "path": "21"
    },
    "16821": {
      "fn": "Base64.encode3",
      "offset": [
        1743,
        1761
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "16822": {
      "fn": "Base64.encode3",
      "offset": [
        1743,
        1761
      ],
      "op": "DUP2",
      "path": "21"
    },
    "16823": {
      "fn": "Base64.encode3",
      "offset": [
        1743,
        1761
      ],
      "op": "LT",
      "path": "21"
    },
    "16824": {
      "fn": "Base64.encode3",
      "offset": [
        1743,
        1761
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x41BD"
    },
    "16827": {
      "fn": "Base64.encode3",
      "offset": [
        1743,
        1761
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "16828": {
      "dev": "Index out of range",
      "fn": "Base64.encode3",
      "offset": [
        1743,
        1761
      ],
      "op": "INVALID",
      "path": "21"
    },
    "16829": {
      "fn": "Base64.encode3",
      "offset": [
        1743,
        1761
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "16830": {
      "fn": "Base64.encode3",
      "offset": [
        1743,
        1761
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "16832": {
      "fn": "Base64.encode3",
      "offset": [
        1743,
        1761
      ],
      "op": "ADD",
      "path": "21"
    },
    "16833": {
      "fn": "Base64.encode3",
      "offset": [
        1743,
        1761
      ],
      "op": "ADD",
      "path": "21"
    },
    "16834": {
      "fn": "Base64.encode3",
      "offset": [
        1743,
        1761
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "16835": {
      "fn": "Base64.encode3",
      "offset": [
        1743,
        1761
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xF8"
    },
    "16837": {
      "fn": "Base64.encode3",
      "offset": [
        1743,
        1761
      ],
      "op": "SHR",
      "path": "21"
    },
    "16838": {
      "fn": "Base64.encode3",
      "offset": [
        1743,
        1761
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xF8"
    },
    "16840": {
      "fn": "Base64.encode3",
      "offset": [
        1743,
        1761
      ],
      "op": "SHL",
      "path": "21"
    },
    "16841": {
      "fn": "Base64.encode3",
      "offset": [
        1738,
        1761
      ],
      "op": "SWAP8",
      "path": "21"
    },
    "16842": {
      "fn": "Base64.encode3",
      "offset": [
        1738,
        1761
      ],
      "op": "POP",
      "path": "21"
    },
    "16843": {
      "fn": "Base64.encode3",
      "offset": [
        1777,
        1791
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 164,
      "value": "0x40"
    },
    "16845": {
      "fn": "Base64.encode3",
      "offset": [
        1777,
        1791
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "16846": {
      "fn": "Base64.encode3",
      "offset": [
        1777,
        1791
      ],
      "op": "DUP1",
      "path": "21"
    },
    "16847": {
      "fn": "Base64.encode3",
      "offset": [
        1777,
        1791
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x60"
    },
    "16849": {
      "fn": "Base64.encode3",
      "offset": [
        1777,
        1791
      ],
      "op": "ADD",
      "path": "21"
    },
    "16850": {
      "fn": "Base64.encode3",
      "offset": [
        1777,
        1791
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "16852": {
      "fn": "Base64.encode3",
      "offset": [
        1777,
        1791
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "16853": {
      "fn": "Base64.encode3",
      "offset": [
        1777,
        1791
      ],
      "op": "DUP1",
      "path": "21"
    },
    "16854": {
      "fn": "Base64.encode3",
      "offset": [
        1777,
        1791
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "16856": {
      "fn": "Base64.encode3",
      "offset": [
        1777,
        1791
      ],
      "op": "DUP2",
      "path": "21"
    },
    "16857": {
      "fn": "Base64.encode3",
      "offset": [
        1777,
        1791
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "16858": {
      "fn": "Base64.encode3",
      "offset": [
        1777,
        1791
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "16860": {
      "fn": "Base64.encode3",
      "offset": [
        1777,
        1791
      ],
      "op": "ADD",
      "path": "21"
    },
    "16861": {
      "fn": "Base64.encode3",
      "offset": [
        1777,
        1791
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x53FA"
    },
    "16864": {
      "fn": "Base64.encode3",
      "offset": [
        1777,
        1791
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "16866": {
      "fn": "Base64.encode3",
      "offset": [
        1777,
        1791
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "16867": {
      "fn": "Base64.encode3",
      "offset": [
        1777,
        1791
      ],
      "op": "CODECOPY",
      "path": "21"
    },
    "16868": {
      "fn": "Base64.encode3",
      "offset": [
        1792,
        1794
      ],
      "op": "DUP3",
      "path": "21"
    },
    "16869": {
      "fn": "Base64.encode3",
      "offset": [
        1777,
        1795
      ],
      "op": "DUP2",
      "path": "21"
    },
    "16870": {
      "fn": "Base64.encode3",
      "offset": [
        1777,
        1795
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "16871": {
      "fn": "Base64.encode3",
      "offset": [
        1777,
        1795
      ],
      "op": "DUP2",
      "path": "21"
    },
    "16872": {
      "fn": "Base64.encode3",
      "offset": [
        1777,
        1795
      ],
      "op": "LT",
      "path": "21"
    },
    "16873": {
      "fn": "Base64.encode3",
      "offset": [
        1777,
        1795
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x41EE"
    },
    "16876": {
      "fn": "Base64.encode3",
      "offset": [
        1777,
        1795
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "16877": {
      "dev": "Index out of range",
      "fn": "Base64.encode3",
      "offset": [
        1777,
        1795
      ],
      "op": "INVALID",
      "path": "21"
    },
    "16878": {
      "fn": "Base64.encode3",
      "offset": [
        1777,
        1795
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "16879": {
      "fn": "Base64.encode3",
      "offset": [
        1777,
        1795
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "16881": {
      "fn": "Base64.encode3",
      "offset": [
        1777,
        1795
      ],
      "op": "ADD",
      "path": "21"
    },
    "16882": {
      "fn": "Base64.encode3",
      "offset": [
        1777,
        1795
      ],
      "op": "ADD",
      "path": "21"
    },
    "16883": {
      "fn": "Base64.encode3",
      "offset": [
        1777,
        1795
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "16884": {
      "fn": "Base64.encode3",
      "offset": [
        1777,
        1795
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xF8"
    },
    "16886": {
      "fn": "Base64.encode3",
      "offset": [
        1777,
        1795
      ],
      "op": "SHR",
      "path": "21"
    },
    "16887": {
      "fn": "Base64.encode3",
      "offset": [
        1777,
        1795
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xF8"
    },
    "16889": {
      "fn": "Base64.encode3",
      "offset": [
        1777,
        1795
      ],
      "op": "SHL",
      "path": "21"
    },
    "16890": {
      "fn": "Base64.encode3",
      "offset": [
        1772,
        1795
      ],
      "op": "SWAP7",
      "path": "21"
    },
    "16891": {
      "fn": "Base64.encode3",
      "offset": [
        1772,
        1795
      ],
      "op": "POP",
      "path": "21"
    },
    "16892": {
      "fn": "Base64.encode3",
      "offset": [
        1811,
        1825
      ],
      "op": "PUSH1",
      "path": "21",
      "statement": 165,
      "value": "0x40"
    },
    "16894": {
      "fn": "Base64.encode3",
      "offset": [
        1811,
        1825
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "16895": {
      "fn": "Base64.encode3",
      "offset": [
        1811,
        1825
      ],
      "op": "DUP1",
      "path": "21"
    },
    "16896": {
      "fn": "Base64.encode3",
      "offset": [
        1811,
        1825
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x60"
    },
    "16898": {
      "fn": "Base64.encode3",
      "offset": [
        1811,
        1825
      ],
      "op": "ADD",
      "path": "21"
    },
    "16899": {
      "fn": "Base64.encode3",
      "offset": [
        1811,
        1825
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "16901": {
      "fn": "Base64.encode3",
      "offset": [
        1811,
        1825
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "16902": {
      "fn": "Base64.encode3",
      "offset": [
        1811,
        1825
      ],
      "op": "DUP1",
      "path": "21"
    },
    "16903": {
      "fn": "Base64.encode3",
      "offset": [
        1811,
        1825
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "16905": {
      "fn": "Base64.encode3",
      "offset": [
        1811,
        1825
      ],
      "op": "DUP2",
      "path": "21"
    },
    "16906": {
      "fn": "Base64.encode3",
      "offset": [
        1811,
        1825
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "16907": {
      "fn": "Base64.encode3",
      "offset": [
        1811,
        1825
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "16909": {
      "fn": "Base64.encode3",
      "offset": [
        1811,
        1825
      ],
      "op": "ADD",
      "path": "21"
    },
    "16910": {
      "fn": "Base64.encode3",
      "offset": [
        1811,
        1825
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x53FA"
    },
    "16913": {
      "fn": "Base64.encode3",
      "offset": [
        1811,
        1825
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "16915": {
      "fn": "Base64.encode3",
      "offset": [
        1811,
        1825
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "16916": {
      "fn": "Base64.encode3",
      "offset": [
        1811,
        1825
      ],
      "op": "CODECOPY",
      "path": "21"
    },
    "16917": {
      "fn": "Base64.encode3",
      "offset": [
        1826,
        1828
      ],
      "op": "DUP2",
      "path": "21"
    },
    "16918": {
      "fn": "Base64.encode3",
      "offset": [
        1811,
        1829
      ],
      "op": "DUP2",
      "path": "21"
    },
    "16919": {
      "fn": "Base64.encode3",
      "offset": [
        1811,
        1829
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "16920": {
      "fn": "Base64.encode3",
      "offset": [
        1811,
        1829
      ],
      "op": "DUP2",
      "path": "21"
    },
    "16921": {
      "fn": "Base64.encode3",
      "offset": [
        1811,
        1829
      ],
      "op": "LT",
      "path": "21"
    },
    "16922": {
      "fn": "Base64.encode3",
      "offset": [
        1811,
        1829
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x421F"
    },
    "16925": {
      "fn": "Base64.encode3",
      "offset": [
        1811,
        1829
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "16926": {
      "dev": "Index out of range",
      "fn": "Base64.encode3",
      "offset": [
        1811,
        1829
      ],
      "op": "INVALID",
      "path": "21"
    },
    "16927": {
      "fn": "Base64.encode3",
      "offset": [
        1811,
        1829
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "16928": {
      "fn": "Base64.encode3",
      "offset": [
        1811,
        1829
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "16930": {
      "fn": "Base64.encode3",
      "offset": [
        1811,
        1829
      ],
      "op": "ADD",
      "path": "21"
    },
    "16931": {
      "fn": "Base64.encode3",
      "offset": [
        1811,
        1829
      ],
      "op": "ADD",
      "path": "21"
    },
    "16932": {
      "fn": "Base64.encode3",
      "offset": [
        1811,
        1829
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "16933": {
      "fn": "Base64.encode3",
      "offset": [
        1811,
        1829
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xF8"
    },
    "16935": {
      "fn": "Base64.encode3",
      "offset": [
        1811,
        1829
      ],
      "op": "SHR",
      "path": "21"
    },
    "16936": {
      "fn": "Base64.encode3",
      "offset": [
        1811,
        1829
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xF8"
    },
    "16938": {
      "fn": "Base64.encode3",
      "offset": [
        1811,
        1829
      ],
      "op": "SHL",
      "path": "21"
    },
    "16939": {
      "fn": "Base64.encode3",
      "offset": [
        1806,
        1829
      ],
      "op": "SWAP6",
      "path": "21"
    },
    "16940": {
      "fn": "Base64.encode3",
      "offset": [
        1806,
        1829
      ],
      "op": "POP",
      "path": "21"
    },
    "16941": {
      "fn": "Base64.encode3",
      "offset": [
        1342,
        1837
      ],
      "op": "POP",
      "path": "21"
    },
    "16942": {
      "fn": "Base64.encode3",
      "offset": [
        1342,
        1837
      ],
      "op": "POP",
      "path": "21"
    },
    "16943": {
      "fn": "Base64.encode3",
      "offset": [
        1342,
        1837
      ],
      "op": "POP",
      "path": "21"
    },
    "16944": {
      "fn": "Base64.encode3",
      "offset": [
        1342,
        1837
      ],
      "op": "POP",
      "path": "21"
    },
    "16945": {
      "fn": "Base64.encode3",
      "offset": [
        1342,
        1837
      ],
      "op": "POP",
      "path": "21"
    },
    "16946": {
      "fn": "Base64.encode3",
      "offset": [
        1342,
        1837
      ],
      "op": "SWAP4",
      "path": "21"
    },
    "16947": {
      "fn": "Base64.encode3",
      "offset": [
        1342,
        1837
      ],
      "op": "POP",
      "path": "21"
    },
    "16948": {
      "fn": "Base64.encode3",
      "offset": [
        1342,
        1837
      ],
      "op": "SWAP4",
      "path": "21"
    },
    "16949": {
      "fn": "Base64.encode3",
      "offset": [
        1342,
        1837
      ],
      "op": "POP",
      "path": "21"
    },
    "16950": {
      "fn": "Base64.encode3",
      "offset": [
        1342,
        1837
      ],
      "op": "SWAP4",
      "path": "21"
    },
    "16951": {
      "fn": "Base64.encode3",
      "offset": [
        1342,
        1837
      ],
      "op": "POP",
      "path": "21"
    },
    "16952": {
      "fn": "Base64.encode3",
      "offset": [
        1342,
        1837
      ],
      "op": "SWAP4",
      "path": "21"
    },
    "16953": {
      "fn": "Base64.encode3",
      "jump": "o",
      "offset": [
        1342,
        1837
      ],
      "op": "JUMP",
      "path": "21"
    },
    "16954": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45061,
        45515
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "16955": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45153,
        45177
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1D"
    },
    "16957": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45153,
        45177
      ],
      "op": "DUP1",
      "path": "20"
    },
    "16958": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45153,
        45177
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "16959": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45136,
        45150
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "16961": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45185,
        45213
      ],
      "op": "SWAP1",
      "path": "20",
      "statement": 166
    },
    "16962": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45185,
        45213
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "16963": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45185,
        45213
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "16964": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45235,
        45257
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1B"
    },
    "16966": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45235,
        45257
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "16967": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45226,
        45257
      ],
      "op": "DUP2",
      "path": "20"
    },
    "16968": {
      "branch": 251,
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45226,
        45257
      ],
      "op": "GT",
      "path": "20"
    },
    "16969": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45221,
        45511
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "16970": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45221,
        45511
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1E4D"
    },
    "16973": {
      "branch": 251,
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45221,
        45511
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "16974": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45271,
        45299
      ],
      "op": "PUSH2",
      "path": "20",
      "statement": 167,
      "value": "0x4255"
    },
    "16977": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45271,
        45297
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4766"
    },
    "16980": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "jump": "i",
      "offset": [
        45271,
        45299
      ],
      "op": "JUMP",
      "path": "20"
    },
    "16981": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45271,
        45299
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "16982": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45373
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1C"
    },
    "16984": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45373
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "16985": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "16987": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "DUP1",
      "path": "20"
    },
    "16988": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "16989": {
      "op": "PUSH18",
      "value": "0x2932B632B0B9B4B73390383937B334BA3997"
    },
    "17008": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "17010": {
      "op": "SHL"
    },
    "17011": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "DUP2",
      "path": "20"
    },
    "17012": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "17013": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "17014": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "17015": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45346,
        45354
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "17017": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45346,
        45354
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "17018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17022": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17024": {
      "op": "SHL"
    },
    "17025": {
      "op": "SUB"
    },
    "17026": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45373
      ],
      "op": "AND",
      "path": "20"
    },
    "17027": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45373
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "17028": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45387,
        45393
      ],
      "op": "DUP5",
      "path": "20"
    },
    "17029": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45387,
        45393
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "17030": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x12"
    },
    "17032": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "DUP1",
      "path": "20"
    },
    "17033": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "DUP4",
      "path": "20"
    },
    "17034": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "ADD",
      "path": "20"
    },
    "17035": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "17036": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45346,
        45354
      ],
      "op": "DUP7",
      "path": "20"
    },
    "17037": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45346,
        45354
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "17038": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "17039": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "17040": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "DUP3",
      "path": "20"
    },
    "17041": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "17042": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "SUB",
      "path": "20"
    },
    "17043": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "ADD",
      "path": "20"
    },
    "17044": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "DUP2",
      "path": "20"
    },
    "17045": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45387,
        45393
      ],
      "op": "DUP6",
      "path": "20"
    },
    "17046": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45373
      ],
      "op": "DUP8",
      "path": "20"
    },
    "17047": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "GAS",
      "path": "20"
    },
    "17048": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "CALL",
      "path": "20"
    },
    "17049": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "17050": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "POP",
      "path": "20"
    },
    "17051": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "POP",
      "path": "20"
    },
    "17052": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "POP",
      "path": "20"
    },
    "17053": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "17054": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "DUP1",
      "path": "20"
    },
    "17055": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "17057": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "DUP2",
      "path": "20"
    },
    "17058": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "EQ",
      "path": "20"
    },
    "17059": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x42C8"
    },
    "17062": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "17063": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "17065": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "17066": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "17067": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "POP",
      "path": "20"
    },
    "17068": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "17070": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "NOT",
      "path": "20"
    },
    "17071": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3F"
    },
    "17073": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "17074": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "ADD",
      "path": "20"
    },
    "17075": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "AND",
      "path": "20"
    },
    "17076": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "DUP3",
      "path": "20"
    },
    "17077": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "ADD",
      "path": "20"
    },
    "17078": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "17080": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "17081": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "17082": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "DUP3",
      "path": "20"
    },
    "17083": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "17084": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "17085": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "17087": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "17089": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "DUP5",
      "path": "20"
    },
    "17090": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "ADD",
      "path": "20"
    },
    "17091": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "17092": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x42CD"
    },
    "17095": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "JUMP",
      "path": "20"
    },
    "17096": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "17097": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "17099": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "17100": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "POP",
      "path": "20"
    },
    "17101": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "17102": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45359,
        45416
      ],
      "op": "POP",
      "path": "20"
    },
    "17103": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45345,
        45416
      ],
      "op": "POP",
      "path": "20"
    },
    "17104": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45345,
        45416
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "17105": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45345,
        45416
      ],
      "op": "POP",
      "path": "20"
    },
    "17106": {
      "branch": 252,
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45436,
        45439
      ],
      "op": "DUP1",
      "path": "20",
      "statement": 168
    },
    "17107": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45428,
        45470
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1509"
    },
    "17110": {
      "branch": 252,
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45428,
        45470
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "17111": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45428,
        45470
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "17113": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45428,
        45470
      ],
      "op": "DUP1",
      "path": "20"
    },
    "17114": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45428,
        45470
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "17115": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "17119": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "17121": {
      "op": "SHL"
    },
    "17122": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45428,
        45470
      ],
      "op": "DUP2",
      "path": "20"
    },
    "17123": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45428,
        45470
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "17124": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45428,
        45470
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "17126": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45428,
        45470
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "17128": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45428,
        45470
      ],
      "op": "DUP3",
      "path": "20"
    },
    "17129": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45428,
        45470
      ],
      "op": "ADD",
      "path": "20"
    },
    "17130": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45428,
        45470
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "17131": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45428,
        45470
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1A"
    },
    "17133": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45428,
        45470
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "17135": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45428,
        45470
      ],
      "op": "DUP3",
      "path": "20"
    },
    "17136": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45428,
        45470
      ],
      "op": "ADD",
      "path": "20"
    },
    "17137": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45428,
        45470
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "17138": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45428,
        45470
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x436F756C64206E6F742072656C656173652070726F666974732E000000000000"
    },
    "17171": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45428,
        45470
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "17173": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45428,
        45470
      ],
      "op": "DUP3",
      "path": "20"
    },
    "17174": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45428,
        45470
      ],
      "op": "ADD",
      "path": "20"
    },
    "17175": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45428,
        45470
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "17176": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45428,
        45470
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "17177": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45428,
        45470
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "17178": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45428,
        45470
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "17179": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45428,
        45470
      ],
      "op": "DUP2",
      "path": "20"
    },
    "17180": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45428,
        45470
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "17181": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45428,
        45470
      ],
      "op": "SUB",
      "path": "20"
    },
    "17182": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45428,
        45470
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "17184": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45428,
        45470
      ],
      "op": "ADD",
      "path": "20"
    },
    "17185": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45428,
        45470
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "17186": {
      "fn": "BuyTheDipNFT.releaseProfits",
      "offset": [
        45428,
        45470
      ],
      "op": "REVERT",
      "path": "20"
    },
    "17187": {
      "fn": "EnumerableMap.contains",
      "offset": [
        7588,
        7737
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "17188": {
      "fn": "EnumerableMap.contains",
      "offset": [
        7672,
        7676
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "17190": {
      "fn": "EnumerableMap.contains",
      "offset": [
        7695,
        7730
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 169,
      "value": "0x1638"
    },
    "17193": {
      "fn": "EnumerableMap.contains",
      "offset": [
        7705,
        7708
      ],
      "op": "DUP4",
      "path": "11"
    },
    "17194": {
      "fn": "EnumerableMap.contains",
      "offset": [
        7725,
        7728
      ],
      "op": "DUP4",
      "path": "11"
    },
    "17195": {
      "fn": "EnumerableMap.contains",
      "offset": [
        7695,
        7704
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x48E9"
    },
    "17198": {
      "fn": "EnumerableMap.contains",
      "jump": "i",
      "offset": [
        7695,
        7730
      ],
      "op": "JUMP",
      "path": "11"
    },
    "17199": {
      "fn": "EnumerableMap._length",
      "offset": [
        4491,
        4599
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "17200": {
      "fn": "EnumerableMap._length",
      "offset": [
        4573,
        4592
      ],
      "op": "SLOAD",
      "path": "11",
      "statement": 170
    },
    "17201": {
      "fn": "EnumerableMap._length",
      "offset": [
        4573,
        4592
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "17202": {
      "fn": "EnumerableMap._length",
      "jump": "o",
      "offset": [
        4491,
        4599
      ],
      "op": "JUMP",
      "path": "11"
    },
    "17203": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8365,
        8500
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "17204": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8435,
        8439
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "17206": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8458,
        8493
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 171,
      "value": "0x1638"
    },
    "17209": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8466,
        8469
      ],
      "op": "DUP4",
      "path": "12"
    },
    "17210": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8486,
        8491
      ],
      "op": "DUP4",
      "path": "12"
    },
    "17211": {
      "fn": "EnumerableSet.remove",
      "offset": [
        8458,
        8465
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4901"
    },
    "17214": {
      "fn": "EnumerableSet.remove",
      "jump": "i",
      "offset": [
        8458,
        8493
      ],
      "op": "JUMP",
      "path": "12"
    },
    "17215": {
      "fn": "EnumerableSet.add",
      "offset": [
        8068,
        8197
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "17216": {
      "fn": "EnumerableSet.add",
      "offset": [
        8135,
        8139
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "17218": {
      "fn": "EnumerableSet.add",
      "offset": [
        8158,
        8190
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 172,
      "value": "0x1638"
    },
    "17221": {
      "fn": "EnumerableSet.add",
      "offset": [
        8163,
        8166
      ],
      "op": "DUP4",
      "path": "12"
    },
    "17222": {
      "fn": "EnumerableSet.add",
      "offset": [
        8183,
        8188
      ],
      "op": "DUP4",
      "path": "12"
    },
    "17223": {
      "fn": "EnumerableSet.add",
      "offset": [
        8158,
        8162
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x49C7"
    },
    "17226": {
      "fn": "EnumerableSet.add",
      "jump": "i",
      "offset": [
        8158,
        8190
      ],
      "op": "JUMP",
      "path": "12"
    },
    "17227": {
      "fn": "EnumerableMap.set",
      "offset": [
        7027,
        7210
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "17228": {
      "fn": "EnumerableMap.set",
      "offset": [
        7116,
        7120
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "17230": {
      "fn": "EnumerableMap.set",
      "offset": [
        7139,
        7203
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 173,
      "value": "0x383A"
    },
    "17233": {
      "fn": "EnumerableMap.set",
      "offset": [
        7144,
        7147
      ],
      "op": "DUP5",
      "path": "11"
    },
    "17234": {
      "fn": "EnumerableMap.set",
      "offset": [
        7164,
        7167
      ],
      "op": "DUP5",
      "path": "11"
    },
    "17235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17239": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17241": {
      "op": "SHL"
    },
    "17242": {
      "op": "SUB"
    },
    "17243": {
      "fn": "EnumerableMap.set",
      "offset": [
        7178,
        7201
      ],
      "op": "DUP6",
      "path": "11"
    },
    "17244": {
      "fn": "EnumerableMap.set",
      "offset": [
        7178,
        7201
      ],
      "op": "AND",
      "path": "11"
    },
    "17245": {
      "fn": "EnumerableMap.set",
      "offset": [
        7139,
        7143
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4A11"
    },
    "17248": {
      "fn": "EnumerableMap.set",
      "jump": "i",
      "offset": [
        7139,
        7203
      ],
      "op": "JUMP",
      "path": "11"
    },
    "17249": {
      "fn": "EnumerableSet._at",
      "offset": [
        4452,
        4653
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "17250": {
      "fn": "EnumerableSet._at",
      "offset": [
        4546,
        4564
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 174
    },
    "17251": {
      "fn": "EnumerableSet._at",
      "offset": [
        4546,
        4564
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "17252": {
      "fn": "EnumerableSet._at",
      "offset": [
        4519,
        4526
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "17254": {
      "fn": "EnumerableSet._at",
      "offset": [
        4519,
        4526
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17255": {
      "branch": 280,
      "fn": "EnumerableSet._at",
      "offset": [
        4546,
        4572
      ],
      "op": "DUP3",
      "path": "12"
    },
    "17256": {
      "op": "LT"
    },
    "17257": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x43A3"
    },
    "17260": {
      "branch": 280,
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "17261": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "17263": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "17264": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "17268": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "17270": {
      "op": "SHL"
    },
    "17271": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP2",
      "path": "12"
    },
    "17272": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "17273": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "17275": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "ADD",
      "path": "12"
    },
    "17276": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP1",
      "path": "12"
    },
    "17277": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP1",
      "path": "12"
    },
    "17278": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "17280": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "ADD",
      "path": "12"
    },
    "17281": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP3",
      "path": "12"
    },
    "17282": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP2",
      "path": "12"
    },
    "17283": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "SUB",
      "path": "12"
    },
    "17284": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP3",
      "path": "12"
    },
    "17285": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "17286": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x22"
    },
    "17288": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP2",
      "path": "12"
    },
    "17289": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "17290": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "17292": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "ADD",
      "path": "12"
    },
    "17293": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP1",
      "path": "12"
    },
    "17294": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x500F"
    },
    "17297": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x22"
    },
    "17299": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "17300": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "CODECOPY",
      "path": "12"
    },
    "17301": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "17303": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "ADD",
      "path": "12"
    },
    "17304": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "17305": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "POP",
      "path": "12"
    },
    "17306": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "POP",
      "path": "12"
    },
    "17307": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "17309": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "17310": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "DUP1",
      "path": "12"
    },
    "17311": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "17312": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "SUB",
      "path": "12"
    },
    "17313": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17314": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "REVERT",
      "path": "12"
    },
    "17315": {
      "fn": "EnumerableSet._at",
      "offset": [
        4538,
        4611
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "17316": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4631
      ],
      "op": "DUP3",
      "path": "12",
      "statement": 175
    },
    "17317": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4639
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "17319": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4639
      ],
      "op": "ADD",
      "path": "12"
    },
    "17320": {
      "fn": "EnumerableSet._at",
      "offset": [
        4640,
        4645
      ],
      "op": "DUP3",
      "path": "12"
    },
    "17321": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "DUP2",
      "path": "12"
    },
    "17322": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "17323": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "DUP2",
      "path": "12"
    },
    "17324": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "LT",
      "path": "12"
    },
    "17325": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x43B2"
    },
    "17328": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "17329": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "INVALID",
      "path": "12"
    },
    "17330": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "17331": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17332": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "17334": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "17335": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "17337": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "17339": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "17340": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "ADD",
      "path": "12"
    },
    "17341": {
      "fn": "EnumerableSet._at",
      "offset": [
        4628,
        4646
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "17342": {
      "fn": "EnumerableSet._at",
      "offset": [
        4621,
        4646
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "17343": {
      "fn": "EnumerableSet._at",
      "offset": [
        4621,
        4646
      ],
      "op": "POP",
      "path": "12"
    },
    "17344": {
      "fn": "EnumerableSet._at",
      "offset": [
        4452,
        4653
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "17345": {
      "fn": "EnumerableSet._at",
      "offset": [
        4452,
        4653
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "17346": {
      "fn": "EnumerableSet._at",
      "offset": [
        4452,
        4653
      ],
      "op": "POP",
      "path": "12"
    },
    "17347": {
      "fn": "EnumerableSet._at",
      "offset": [
        4452,
        4653
      ],
      "op": "POP",
      "path": "12"
    },
    "17348": {
      "fn": "EnumerableSet._at",
      "jump": "o",
      "offset": [
        4452,
        4653
      ],
      "op": "JUMP",
      "path": "12"
    },
    "17349": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47023,
        47346
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "17350": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47100,
        47107
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "17352": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47132,
        47161
      ],
      "op": "DUP2",
      "path": "20"
    },
    "17353": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47132,
        47161
      ],
      "op": "DUP2",
      "path": "20"
    },
    "17354": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47132,
        47161
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "17355": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47132,
        47151
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xF"
    },
    "17357": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47132,
        47161
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "17359": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47132,
        47161
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "17360": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47132,
        47161
      ],
      "op": "DUP2",
      "path": "20"
    },
    "17361": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47132,
        47161
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "17362": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47132,
        47161
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "17364": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47132,
        47161
      ],
      "op": "DUP1",
      "path": "20"
    },
    "17365": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47132,
        47161
      ],
      "op": "DUP4",
      "path": "20"
    },
    "17366": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47132,
        47161
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "17367": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47132,
        47161
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "17368": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47196
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1E"
    },
    "17370": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47196
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "17371": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "DUP3",
      "path": "20"
    },
    "17372": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "17373": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "17378": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "17380": {
      "op": "SHL"
    },
    "17381": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "DUP2",
      "path": "20"
    },
    "17382": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "17383": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47215,
        47219
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "17384": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "17386": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "DUP3",
      "path": "20"
    },
    "17387": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "ADD",
      "path": "20"
    },
    "17388": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "17389": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "17390": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "17391": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47132,
        47161
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "17392": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47132,
        47161
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "17393": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47100,
        47107
      ],
      "op": "DUP6",
      "path": "20"
    },
    "17394": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47100,
        47107
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "17395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17399": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17401": {
      "op": "SHL"
    },
    "17402": {
      "op": "SUB"
    },
    "17403": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47196
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "17404": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47196
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "17405": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47196
      ],
      "op": "AND",
      "path": "20"
    },
    "17406": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47196
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "17407": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47206
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x70A08231"
    },
    "17412": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47206
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "17413": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "17415": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "DUP1",
      "path": "20"
    },
    "17416": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "DUP3",
      "path": "20"
    },
    "17417": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "ADD",
      "path": "20"
    },
    "17418": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "17419": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47132,
        47161
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "17420": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "17421": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "DUP3",
      "path": "20"
    },
    "17422": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "17423": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "SUB",
      "path": "20"
    },
    "17424": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "ADD",
      "path": "20"
    },
    "17425": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "DUP2",
      "path": "20"
    },
    "17426": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47196
      ],
      "op": "DUP7",
      "path": "20"
    },
    "17427": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "DUP1",
      "path": "20"
    },
    "17428": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "17429": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "17430": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "DUP1",
      "path": "20"
    },
    "17431": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "17432": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4420"
    },
    "17435": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "17436": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "17438": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "DUP1",
      "path": "20"
    },
    "17439": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "REVERT",
      "path": "20"
    },
    "17440": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "17441": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "POP",
      "path": "20"
    },
    "17442": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "GAS",
      "path": "20"
    },
    "17443": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "17444": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "17445": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "DUP1",
      "path": "20"
    },
    "17446": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "17447": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4434"
    },
    "17450": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "17451": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "17452": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "17454": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "DUP1",
      "path": "20"
    },
    "17455": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "17456": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "17457": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "17459": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "REVERT",
      "path": "20"
    },
    "17460": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "17461": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "POP",
      "path": "20"
    },
    "17462": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "POP",
      "path": "20"
    },
    "17463": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "POP",
      "path": "20"
    },
    "17464": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "POP",
      "path": "20"
    },
    "17465": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "17467": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "17468": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "17469": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "17471": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "DUP2",
      "path": "20"
    },
    "17472": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "LT",
      "path": "20"
    },
    "17473": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "17474": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x444A"
    },
    "17477": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "17478": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "17480": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "DUP1",
      "path": "20"
    },
    "17481": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "REVERT",
      "path": "20"
    },
    "17482": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "17483": {
      "op": "POP"
    },
    "17484": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "17485": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47251,
        47266
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x14"
    },
    "17487": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47251,
        47266
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "17488": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "17489": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47191,
        47221
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "17490": {
      "op": "POP"
    },
    "17491": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47227,
        47248
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "17493": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47227,
        47248
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "17494": {
      "branch": 253,
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47251,
        47269
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "17495": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47251,
        47316
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x412B"
    },
    "17498": {
      "branch": 253,
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47251,
        47316
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "17499": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47301,
        47316
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x14"
    },
    "17501": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47301,
        47316
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "17502": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47285,
        47298
      ],
      "op": "DUP3",
      "path": "20"
    },
    "17503": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47276,
        47282
      ],
      "op": "DUP5",
      "path": "20"
    },
    "17504": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47276,
        47298
      ],
      "op": "MUL",
      "path": "20"
    },
    "17505": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47276,
        47316
      ],
      "op": "DUP2",
      "path": "20"
    },
    "17506": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47276,
        47316
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4125"
    },
    "17509": {
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47276,
        47316
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "17510": {
      "dev": "Division by zero",
      "fn": "BuyTheDipNFT.getStableCoinBalanceGivenId",
      "offset": [
        47276,
        47316
      ],
      "op": "INVALID",
      "path": "20"
    },
    "17511": {
      "fn": "ERC721._safeMint",
      "offset": [
        11677,
        11924
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "17512": {
      "fn": "ERC721._safeMint",
      "offset": [
        11772,
        11790
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 176,
      "value": "0x4471"
    },
    "17515": {
      "fn": "ERC721._safeMint",
      "offset": [
        11778,
        11780
      ],
      "op": "DUP4",
      "path": "4"
    },
    "17516": {
      "fn": "ERC721._safeMint",
      "offset": [
        11782,
        11789
      ],
      "op": "DUP4",
      "path": "4"
    },
    "17517": {
      "fn": "ERC721._safeMint",
      "offset": [
        11772,
        11777
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4AA8"
    },
    "17520": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        11772,
        11790
      ],
      "op": "JUMP",
      "path": "4"
    },
    "17521": {
      "fn": "ERC721._safeMint",
      "offset": [
        11772,
        11790
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "17522": {
      "fn": "ERC721._safeMint",
      "offset": [
        11808,
        11862
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 177,
      "value": "0x447E"
    },
    "17525": {
      "fn": "ERC721._safeMint",
      "offset": [
        11839,
        11840
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "17527": {
      "fn": "ERC721._safeMint",
      "offset": [
        11843,
        11845
      ],
      "op": "DUP5",
      "path": "4"
    },
    "17528": {
      "fn": "ERC721._safeMint",
      "offset": [
        11847,
        11854
      ],
      "op": "DUP5",
      "path": "4"
    },
    "17529": {
      "fn": "ERC721._safeMint",
      "offset": [
        11856,
        11861
      ],
      "op": "DUP5",
      "path": "4"
    },
    "17530": {
      "fn": "ERC721._safeMint",
      "offset": [
        11808,
        11830
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x45FE"
    },
    "17533": {
      "fn": "ERC721._safeMint",
      "jump": "i",
      "offset": [
        11808,
        11862
      ],
      "op": "JUMP",
      "path": "4"
    },
    "17534": {
      "branch": 273,
      "fn": "ERC721._safeMint",
      "offset": [
        11808,
        11862
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "17535": {
      "fn": "ERC721._safeMint",
      "offset": [
        11800,
        11917
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x149C"
    },
    "17538": {
      "branch": 273,
      "fn": "ERC721._safeMint",
      "offset": [
        11800,
        11917
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "17539": {
      "fn": "ERC721._safeMint",
      "offset": [
        11800,
        11917
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "17541": {
      "fn": "ERC721._safeMint",
      "offset": [
        11800,
        11917
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "17542": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "17546": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "17548": {
      "op": "SHL"
    },
    "17549": {
      "fn": "ERC721._safeMint",
      "offset": [
        11800,
        11917
      ],
      "op": "DUP2",
      "path": "4"
    },
    "17550": {
      "fn": "ERC721._safeMint",
      "offset": [
        11800,
        11917
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "17551": {
      "fn": "ERC721._safeMint",
      "offset": [
        11800,
        11917
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "17553": {
      "fn": "ERC721._safeMint",
      "offset": [
        11800,
        11917
      ],
      "op": "ADD",
      "path": "4"
    },
    "17554": {
      "fn": "ERC721._safeMint",
      "offset": [
        11800,
        11917
      ],
      "op": "DUP1",
      "path": "4"
    },
    "17555": {
      "fn": "ERC721._safeMint",
      "offset": [
        11800,
        11917
      ],
      "op": "DUP1",
      "path": "4"
    },
    "17556": {
      "fn": "ERC721._safeMint",
      "offset": [
        11800,
        11917
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "17558": {
      "fn": "ERC721._safeMint",
      "offset": [
        11800,
        11917
      ],
      "op": "ADD",
      "path": "4"
    },
    "17559": {
      "fn": "ERC721._safeMint",
      "offset": [
        11800,
        11917
      ],
      "op": "DUP3",
      "path": "4"
    },
    "17560": {
      "fn": "ERC721._safeMint",
      "offset": [
        11800,
        11917
      ],
      "op": "DUP2",
      "path": "4"
    },
    "17561": {
      "fn": "ERC721._safeMint",
      "offset": [
        11800,
        11917
      ],
      "op": "SUB",
      "path": "4"
    },
    "17562": {
      "fn": "ERC721._safeMint",
      "offset": [
        11800,
        11917
      ],
      "op": "DUP3",
      "path": "4"
    },
    "17563": {
      "fn": "ERC721._safeMint",
      "offset": [
        11800,
        11917
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "17564": {
      "fn": "ERC721._safeMint",
      "offset": [
        11800,
        11917
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x32"
    },
    "17566": {
      "fn": "ERC721._safeMint",
      "offset": [
        11800,
        11917
      ],
      "op": "DUP2",
      "path": "4"
    },
    "17567": {
      "fn": "ERC721._safeMint",
      "offset": [
        11800,
        11917
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "17568": {
      "fn": "ERC721._safeMint",
      "offset": [
        11800,
        11917
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "17570": {
      "fn": "ERC721._safeMint",
      "offset": [
        11800,
        11917
      ],
      "op": "ADD",
      "path": "4"
    },
    "17571": {
      "fn": "ERC721._safeMint",
      "offset": [
        11800,
        11917
      ],
      "op": "DUP1",
      "path": "4"
    },
    "17572": {
      "fn": "ERC721._safeMint",
      "offset": [
        11800,
        11917
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x517E"
    },
    "17575": {
      "fn": "ERC721._safeMint",
      "offset": [
        11800,
        11917
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x32"
    },
    "17577": {
      "fn": "ERC721._safeMint",
      "offset": [
        11800,
        11917
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "17578": {
      "fn": "ERC721._safeMint",
      "offset": [
        11800,
        11917
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "17579": {
      "fn": "ERC721._safeMint",
      "offset": [
        11800,
        11917
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "17581": {
      "fn": "ERC721._safeMint",
      "offset": [
        11800,
        11917
      ],
      "op": "ADD",
      "path": "4"
    },
    "17582": {
      "fn": "ERC721._safeMint",
      "offset": [
        11800,
        11917
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "17583": {
      "fn": "ERC721._safeMint",
      "offset": [
        11800,
        11917
      ],
      "op": "POP",
      "path": "4"
    },
    "17584": {
      "fn": "ERC721._safeMint",
      "offset": [
        11800,
        11917
      ],
      "op": "POP",
      "path": "4"
    },
    "17585": {
      "fn": "ERC721._safeMint",
      "offset": [
        11800,
        11917
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "17587": {
      "fn": "ERC721._safeMint",
      "offset": [
        11800,
        11917
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "17588": {
      "fn": "ERC721._safeMint",
      "offset": [
        11800,
        11917
      ],
      "op": "DUP1",
      "path": "4"
    },
    "17589": {
      "fn": "ERC721._safeMint",
      "offset": [
        11800,
        11917
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "17590": {
      "fn": "ERC721._safeMint",
      "offset": [
        11800,
        11917
      ],
      "op": "SUB",
      "path": "4"
    },
    "17591": {
      "fn": "ERC721._safeMint",
      "offset": [
        11800,
        11917
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "17592": {
      "fn": "ERC721._safeMint",
      "offset": [
        11800,
        11917
      ],
      "op": "REVERT",
      "path": "4"
    },
    "17593": {
      "fn": "EnumerableMap._at",
      "offset": [
        4942,
        5216
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "17594": {
      "fn": "EnumerableMap._at",
      "offset": [
        5045,
        5064
      ],
      "op": "DUP2",
      "path": "11",
      "statement": 178
    },
    "17595": {
      "fn": "EnumerableMap._at",
      "offset": [
        5045,
        5064
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "17596": {
      "fn": "EnumerableMap._at",
      "offset": [
        5009,
        5016
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "17598": {
      "fn": "EnumerableMap._at",
      "offset": [
        5009,
        5016
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "17599": {
      "fn": "EnumerableMap._at",
      "offset": [
        5009,
        5016
      ],
      "op": "DUP2",
      "path": "11"
    },
    "17600": {
      "fn": "EnumerableMap._at",
      "offset": [
        5009,
        5016
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "17601": {
      "branch": 277,
      "fn": "EnumerableMap._at",
      "offset": [
        5045,
        5072
      ],
      "op": "DUP4",
      "path": "11"
    },
    "17602": {
      "op": "LT"
    },
    "17603": {
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5111
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x44FD"
    },
    "17606": {
      "branch": 277,
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5111
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "17607": {
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5111
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "17609": {
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5111
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "17610": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "17614": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "17616": {
      "op": "SHL"
    },
    "17617": {
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5111
      ],
      "op": "DUP2",
      "path": "11"
    },
    "17618": {
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5111
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "17619": {
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5111
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "17621": {
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5111
      ],
      "op": "ADD",
      "path": "11"
    },
    "17622": {
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5111
      ],
      "op": "DUP1",
      "path": "11"
    },
    "17623": {
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5111
      ],
      "op": "DUP1",
      "path": "11"
    },
    "17624": {
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5111
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "17626": {
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5111
      ],
      "op": "ADD",
      "path": "11"
    },
    "17627": {
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5111
      ],
      "op": "DUP3",
      "path": "11"
    },
    "17628": {
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5111
      ],
      "op": "DUP2",
      "path": "11"
    },
    "17629": {
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5111
      ],
      "op": "SUB",
      "path": "11"
    },
    "17630": {
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5111
      ],
      "op": "DUP3",
      "path": "11"
    },
    "17631": {
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5111
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "17632": {
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5111
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x22"
    },
    "17634": {
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5111
      ],
      "op": "DUP2",
      "path": "11"
    },
    "17635": {
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5111
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "17636": {
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5111
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "17638": {
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5111
      ],
      "op": "ADD",
      "path": "11"
    },
    "17639": {
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5111
      ],
      "op": "DUP1",
      "path": "11"
    },
    "17640": {
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5111
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x55C2"
    },
    "17643": {
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5111
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x22"
    },
    "17645": {
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5111
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "17646": {
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5111
      ],
      "op": "CODECOPY",
      "path": "11"
    },
    "17647": {
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5111
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "17649": {
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5111
      ],
      "op": "ADD",
      "path": "11"
    },
    "17650": {
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5111
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "17651": {
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5111
      ],
      "op": "POP",
      "path": "11"
    },
    "17652": {
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5111
      ],
      "op": "POP",
      "path": "11"
    },
    "17653": {
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5111
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "17655": {
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5111
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "17656": {
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5111
      ],
      "op": "DUP1",
      "path": "11"
    },
    "17657": {
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5111
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "17658": {
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5111
      ],
      "op": "SUB",
      "path": "11"
    },
    "17659": {
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5111
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "17660": {
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5111
      ],
      "op": "REVERT",
      "path": "11"
    },
    "17661": {
      "fn": "EnumerableMap._at",
      "offset": [
        5037,
        5111
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "17662": {
      "fn": "EnumerableMap._at",
      "offset": [
        5122,
        5144
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "17664": {
      "fn": "EnumerableMap._at",
      "offset": [
        5147,
        5150
      ],
      "op": "DUP5",
      "path": "11"
    },
    "17665": {
      "fn": "EnumerableMap._at",
      "offset": [
        5147,
        5159
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "17667": {
      "fn": "EnumerableMap._at",
      "offset": [
        5147,
        5159
      ],
      "op": "ADD",
      "path": "11"
    },
    "17668": {
      "fn": "EnumerableMap._at",
      "offset": [
        5160,
        5165
      ],
      "op": "DUP5",
      "path": "11"
    },
    "17669": {
      "fn": "EnumerableMap._at",
      "offset": [
        5147,
        5166
      ],
      "op": "DUP2",
      "path": "11"
    },
    "17670": {
      "fn": "EnumerableMap._at",
      "offset": [
        5147,
        5166
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "17671": {
      "fn": "EnumerableMap._at",
      "offset": [
        5147,
        5166
      ],
      "op": "DUP2",
      "path": "11"
    },
    "17672": {
      "fn": "EnumerableMap._at",
      "offset": [
        5147,
        5166
      ],
      "op": "LT",
      "path": "11"
    },
    "17673": {
      "fn": "EnumerableMap._at",
      "offset": [
        5147,
        5166
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x450E"
    },
    "17676": {
      "fn": "EnumerableMap._at",
      "offset": [
        5147,
        5166
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "17677": {
      "dev": "Index out of range",
      "fn": "EnumerableMap._at",
      "offset": [
        5147,
        5166
      ],
      "op": "INVALID",
      "path": "11"
    },
    "17678": {
      "fn": "EnumerableMap._at",
      "offset": [
        5147,
        5166
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "17679": {
      "fn": "EnumerableMap._at",
      "offset": [
        5147,
        5166
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "17680": {
      "fn": "EnumerableMap._at",
      "offset": [
        5147,
        5166
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "17682": {
      "fn": "EnumerableMap._at",
      "offset": [
        5147,
        5166
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "17683": {
      "fn": "EnumerableMap._at",
      "offset": [
        5147,
        5166
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "17685": {
      "fn": "EnumerableMap._at",
      "offset": [
        5147,
        5166
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "17687": {
      "fn": "EnumerableMap._at",
      "offset": [
        5147,
        5166
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "17688": {
      "fn": "EnumerableMap._at",
      "offset": [
        5147,
        5166
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "17689": {
      "fn": "EnumerableMap._at",
      "offset": [
        5147,
        5166
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "17691": {
      "fn": "EnumerableMap._at",
      "offset": [
        5147,
        5166
      ],
      "op": "MUL",
      "path": "11"
    },
    "17692": {
      "fn": "EnumerableMap._at",
      "offset": [
        5147,
        5166
      ],
      "op": "ADD",
      "path": "11"
    },
    "17693": {
      "fn": "EnumerableMap._at",
      "offset": [
        5122,
        5166
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "17694": {
      "fn": "EnumerableMap._at",
      "offset": [
        5122,
        5166
      ],
      "op": "POP",
      "path": "11"
    },
    "17695": {
      "fn": "EnumerableMap._at",
      "offset": [
        5184,
        5189
      ],
      "op": "DUP1",
      "path": "11",
      "statement": 179
    },
    "17696": {
      "fn": "EnumerableMap._at",
      "offset": [
        5184,
        5194
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "17698": {
      "fn": "EnumerableMap._at",
      "offset": [
        5184,
        5194
      ],
      "op": "ADD",
      "path": "11"
    },
    "17699": {
      "fn": "EnumerableMap._at",
      "offset": [
        5184,
        5194
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "17700": {
      "fn": "EnumerableMap._at",
      "offset": [
        5196,
        5201
      ],
      "op": "DUP2",
      "path": "11"
    },
    "17701": {
      "fn": "EnumerableMap._at",
      "offset": [
        5196,
        5208
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "17703": {
      "fn": "EnumerableMap._at",
      "offset": [
        5196,
        5208
      ],
      "op": "ADD",
      "path": "11"
    },
    "17704": {
      "fn": "EnumerableMap._at",
      "offset": [
        5196,
        5208
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "17705": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5209
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "17706": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5209
      ],
      "op": "POP",
      "path": "11"
    },
    "17707": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5209
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "17708": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5209
      ],
      "op": "POP",
      "path": "11"
    },
    "17709": {
      "fn": "EnumerableMap._at",
      "offset": [
        5176,
        5209
      ],
      "op": "POP",
      "path": "11"
    },
    "17710": {
      "fn": "EnumerableMap._at",
      "offset": [
        4942,
        5216
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "17711": {
      "fn": "EnumerableMap._at",
      "offset": [
        4942,
        5216
      ],
      "op": "POP",
      "path": "11"
    },
    "17712": {
      "fn": "EnumerableMap._at",
      "offset": [
        4942,
        5216
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "17713": {
      "fn": "EnumerableMap._at",
      "offset": [
        4942,
        5216
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "17714": {
      "fn": "EnumerableMap._at",
      "offset": [
        4942,
        5216
      ],
      "op": "POP",
      "path": "11"
    },
    "17715": {
      "fn": "EnumerableMap._at",
      "jump": "o",
      "offset": [
        4942,
        5216
      ],
      "op": "JUMP",
      "path": "11"
    },
    "17716": {
      "fn": "EnumerableMap._get",
      "offset": [
        6403,
        6718
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "17717": {
      "fn": "EnumerableMap._get",
      "offset": [
        6497,
        6504
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "17719": {
      "fn": "EnumerableMap._get",
      "offset": [
        6535,
        6552
      ],
      "op": "DUP3",
      "path": "11"
    },
    "17720": {
      "fn": "EnumerableMap._get",
      "offset": [
        6535,
        6552
      ],
      "op": "DUP2",
      "path": "11"
    },
    "17721": {
      "fn": "EnumerableMap._get",
      "offset": [
        6535,
        6552
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "17722": {
      "fn": "EnumerableMap._get",
      "offset": [
        6535,
        6547
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "17724": {
      "fn": "EnumerableMap._get",
      "offset": [
        6535,
        6547
      ],
      "op": "DUP5",
      "path": "11"
    },
    "17725": {
      "fn": "EnumerableMap._get",
      "offset": [
        6535,
        6547
      ],
      "op": "ADD",
      "path": "11"
    },
    "17726": {
      "fn": "EnumerableMap._get",
      "offset": [
        6535,
        6552
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "17728": {
      "fn": "EnumerableMap._get",
      "offset": [
        6535,
        6552
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "17729": {
      "fn": "EnumerableMap._get",
      "offset": [
        6535,
        6552
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "17731": {
      "fn": "EnumerableMap._get",
      "offset": [
        6535,
        6552
      ],
      "op": "DUP2",
      "path": "11"
    },
    "17732": {
      "fn": "EnumerableMap._get",
      "offset": [
        6535,
        6552
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "17733": {
      "fn": "EnumerableMap._get",
      "offset": [
        6535,
        6552
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "17734": {
      "fn": "EnumerableMap._get",
      "offset": [
        6585,
        6597
      ],
      "op": "DUP3",
      "path": "11",
      "statement": 180
    },
    "17735": {
      "branch": 278,
      "fn": "EnumerableMap._get",
      "offset": [
        6570,
        6583
      ],
      "op": "DUP2",
      "path": "11"
    },
    "17736": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x45CF"
    },
    "17739": {
      "branch": 278,
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "17740": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "17742": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "17743": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "17747": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "17749": {
      "op": "SHL"
    },
    "17750": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "DUP2",
      "path": "11"
    },
    "17751": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "17752": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "17754": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "ADD",
      "path": "11"
    },
    "17755": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "DUP1",
      "path": "11"
    },
    "17756": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "DUP1",
      "path": "11"
    },
    "17757": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "17759": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "ADD",
      "path": "11"
    },
    "17760": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "DUP3",
      "path": "11"
    },
    "17761": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "DUP2",
      "path": "11"
    },
    "17762": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "SUB",
      "path": "11"
    },
    "17763": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "DUP3",
      "path": "11"
    },
    "17764": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "17765": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "DUP4",
      "path": "11"
    },
    "17766": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "DUP2",
      "path": "11"
    },
    "17767": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "DUP2",
      "path": "11"
    },
    "17768": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "17769": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "DUP2",
      "path": "11"
    },
    "17770": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "17771": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "17773": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "ADD",
      "path": "11"
    },
    "17774": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "17775": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "POP",
      "path": "11"
    },
    "17776": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "DUP1",
      "path": "11"
    },
    "17777": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "17778": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "17779": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "17781": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "ADD",
      "path": "11"
    },
    "17782": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "17783": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "DUP1",
      "path": "11"
    },
    "17784": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "DUP4",
      "path": "11"
    },
    "17785": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "DUP4",
      "path": "11"
    },
    "17786": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "17788": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "17789": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "DUP4",
      "path": "11"
    },
    "17790": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "DUP2",
      "path": "11"
    },
    "17791": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "LT",
      "path": "11"
    },
    "17792": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "17793": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4594"
    },
    "17796": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "17797": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "DUP2",
      "path": "11"
    },
    "17798": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "DUP2",
      "path": "11"
    },
    "17799": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "ADD",
      "path": "11"
    },
    "17800": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "17801": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "DUP4",
      "path": "11"
    },
    "17802": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "DUP3",
      "path": "11"
    },
    "17803": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "ADD",
      "path": "11"
    },
    "17804": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "17805": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "17807": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "ADD",
      "path": "11"
    },
    "17808": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x457C"
    },
    "17811": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "JUMP",
      "path": "11"
    },
    "17812": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "17813": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "POP",
      "path": "11"
    },
    "17814": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "POP",
      "path": "11"
    },
    "17815": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "POP",
      "path": "11"
    },
    "17816": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "POP",
      "path": "11"
    },
    "17817": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "17818": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "POP",
      "path": "11"
    },
    "17819": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "17820": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "DUP2",
      "path": "11"
    },
    "17821": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "ADD",
      "path": "11"
    },
    "17822": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "17823": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "17825": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "AND",
      "path": "11"
    },
    "17826": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "DUP1",
      "path": "11"
    },
    "17827": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "17828": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x45C1"
    },
    "17831": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "17832": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "DUP1",
      "path": "11"
    },
    "17833": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "DUP3",
      "path": "11"
    },
    "17834": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "SUB",
      "path": "11"
    },
    "17835": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "DUP1",
      "path": "11"
    },
    "17836": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "17837": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "17839": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "DUP4",
      "path": "11"
    },
    "17840": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "17842": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "SUB",
      "path": "11"
    },
    "17843": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x100"
    },
    "17846": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "EXP",
      "path": "11"
    },
    "17847": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "SUB",
      "path": "11"
    },
    "17848": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "NOT",
      "path": "11"
    },
    "17849": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "AND",
      "path": "11"
    },
    "17850": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "DUP2",
      "path": "11"
    },
    "17851": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "17852": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "17854": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "ADD",
      "path": "11"
    },
    "17855": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "17856": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "POP",
      "path": "11"
    },
    "17857": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "17858": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "POP",
      "path": "11"
    },
    "17859": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "17860": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "POP",
      "path": "11"
    },
    "17861": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "POP",
      "path": "11"
    },
    "17862": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "POP",
      "path": "11"
    },
    "17863": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "17865": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "17866": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "DUP1",
      "path": "11"
    },
    "17867": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "17868": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "SUB",
      "path": "11"
    },
    "17869": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "17870": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "REVERT",
      "path": "11"
    },
    "17871": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "17872": {
      "fn": "EnumerableMap._get",
      "offset": [
        6562,
        6598
      ],
      "op": "POP",
      "path": "11"
    },
    "17873": {
      "fn": "EnumerableMap._get",
      "offset": [
        6651,
        6654
      ],
      "op": "DUP5",
      "path": "11",
      "statement": 181
    },
    "17874": {
      "fn": "EnumerableMap._get",
      "offset": [
        6651,
        6663
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "17876": {
      "fn": "EnumerableMap._get",
      "offset": [
        6651,
        6663
      ],
      "op": "ADD",
      "path": "11"
    },
    "17877": {
      "fn": "EnumerableMap._get",
      "offset": [
        6675,
        6676
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "17879": {
      "fn": "EnumerableMap._get",
      "offset": [
        6664,
        6672
      ],
      "op": "DUP3",
      "path": "11"
    },
    "17880": {
      "fn": "EnumerableMap._get",
      "offset": [
        6664,
        6676
      ],
      "op": "SUB",
      "path": "11"
    },
    "17881": {
      "fn": "EnumerableMap._get",
      "offset": [
        6651,
        6677
      ],
      "op": "DUP2",
      "path": "11"
    },
    "17882": {
      "fn": "EnumerableMap._get",
      "offset": [
        6651,
        6677
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "17883": {
      "fn": "EnumerableMap._get",
      "offset": [
        6651,
        6677
      ],
      "op": "DUP2",
      "path": "11"
    },
    "17884": {
      "fn": "EnumerableMap._get",
      "offset": [
        6651,
        6677
      ],
      "op": "LT",
      "path": "11"
    },
    "17885": {
      "fn": "EnumerableMap._get",
      "offset": [
        6651,
        6677
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x45E2"
    },
    "17888": {
      "fn": "EnumerableMap._get",
      "offset": [
        6651,
        6677
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "17889": {
      "dev": "Index out of range",
      "fn": "EnumerableMap._get",
      "offset": [
        6651,
        6677
      ],
      "op": "INVALID",
      "path": "11"
    },
    "17890": {
      "fn": "EnumerableMap._get",
      "offset": [
        6651,
        6677
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "17891": {
      "fn": "EnumerableMap._get",
      "offset": [
        6651,
        6677
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "17892": {
      "fn": "EnumerableMap._get",
      "offset": [
        6651,
        6677
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "17894": {
      "fn": "EnumerableMap._get",
      "offset": [
        6651,
        6677
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "17895": {
      "fn": "EnumerableMap._get",
      "offset": [
        6651,
        6677
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "17897": {
      "fn": "EnumerableMap._get",
      "offset": [
        6651,
        6677
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "17899": {
      "fn": "EnumerableMap._get",
      "offset": [
        6651,
        6677
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "17900": {
      "fn": "EnumerableMap._get",
      "offset": [
        6651,
        6677
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "17901": {
      "fn": "EnumerableMap._get",
      "offset": [
        6651,
        6677
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "17903": {
      "fn": "EnumerableMap._get",
      "offset": [
        6651,
        6677
      ],
      "op": "MUL",
      "path": "11"
    },
    "17904": {
      "fn": "EnumerableMap._get",
      "offset": [
        6651,
        6677
      ],
      "op": "ADD",
      "path": "11"
    },
    "17905": {
      "fn": "EnumerableMap._get",
      "offset": [
        6651,
        6684
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "17907": {
      "fn": "EnumerableMap._get",
      "offset": [
        6651,
        6684
      ],
      "op": "ADD",
      "path": "11"
    },
    "17908": {
      "fn": "EnumerableMap._get",
      "offset": [
        6651,
        6684
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "17909": {
      "fn": "EnumerableMap._get",
      "offset": [
        6644,
        6684
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "17910": {
      "fn": "EnumerableMap._get",
      "offset": [
        6644,
        6684
      ],
      "op": "POP",
      "path": "11"
    },
    "17911": {
      "fn": "EnumerableMap._get",
      "offset": [
        6644,
        6684
      ],
      "op": "POP",
      "path": "11"
    },
    "17912": {
      "fn": "EnumerableMap._get",
      "offset": [
        6403,
        6718
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "17913": {
      "fn": "EnumerableMap._get",
      "offset": [
        6403,
        6718
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "17914": {
      "fn": "EnumerableMap._get",
      "offset": [
        6403,
        6718
      ],
      "op": "POP",
      "path": "11"
    },
    "17915": {
      "fn": "EnumerableMap._get",
      "offset": [
        6403,
        6718
      ],
      "op": "POP",
      "path": "11"
    },
    "17916": {
      "fn": "EnumerableMap._get",
      "offset": [
        6403,
        6718
      ],
      "op": "POP",
      "path": "11"
    },
    "17917": {
      "fn": "EnumerableMap._get",
      "jump": "o",
      "offset": [
        6403,
        6718
      ],
      "op": "JUMP",
      "path": "11"
    },
    "17918": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15524,
        16113
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "17919": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15644,
        15648
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "17921": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15669,
        15684
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4612"
    },
    "17924": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15669,
        15671
      ],
      "op": "DUP5",
      "path": "4"
    },
    "17925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17929": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17931": {
      "op": "SHL"
    },
    "17932": {
      "op": "SUB"
    },
    "17933": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15669,
        15682
      ],
      "op": "AND",
      "path": "4"
    },
    "17934": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15669,
        15682
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4BD6"
    },
    "17937": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        15669,
        15684
      ],
      "op": "JUMP",
      "path": "4"
    },
    "17938": {
      "branch": 274,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15669,
        15684
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "17939": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15664,
        15722
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x461E"
    },
    "17942": {
      "branch": 274,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15664,
        15722
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "17943": {
      "op": "POP"
    },
    "17944": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15707,
        15711
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 182,
      "value": "0x1"
    },
    "17946": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15700,
        15711
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x383A"
    },
    "17949": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15700,
        15711
      ],
      "op": "JUMP",
      "path": "4"
    },
    "17950": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15664,
        15722
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "17951": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15731,
        15754
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "17953": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15757,
        16003
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x472C"
    },
    "17956": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "17961": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "17963": {
      "op": "SHL"
    },
    "17964": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15868,
        15880
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4633"
    },
    "17967": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15868,
        15878
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x372C"
    },
    "17970": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        15868,
        15880
      ],
      "op": "JUMP",
      "path": "4"
    },
    "17971": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15868,
        15880
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "17972": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15894,
        15898
      ],
      "op": "DUP9",
      "path": "4"
    },
    "17973": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15912,
        15919
      ],
      "op": "DUP8",
      "path": "4"
    },
    "17974": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15933,
        15938
      ],
      "op": "DUP8",
      "path": "4"
    },
    "17975": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "17977": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "17978": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "17980": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "ADD",
      "path": "4"
    },
    "17981": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "DUP1",
      "path": "4"
    },
    "17982": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "DUP6",
      "path": "4"
    },
    "17983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "17987": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "17989": {
      "op": "SHL"
    },
    "17990": {
      "op": "SUB"
    },
    "17991": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "AND",
      "path": "4"
    },
    "17992": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "DUP2",
      "path": "4"
    },
    "17993": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "17994": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "17996": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "ADD",
      "path": "4"
    },
    "17997": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "DUP5",
      "path": "4"
    },
    "17998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18000": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18002": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18004": {
      "op": "SHL"
    },
    "18005": {
      "op": "SUB"
    },
    "18006": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "AND",
      "path": "4"
    },
    "18007": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "DUP2",
      "path": "4"
    },
    "18008": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "18009": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "18011": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "ADD",
      "path": "4"
    },
    "18012": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "DUP4",
      "path": "4"
    },
    "18013": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "DUP2",
      "path": "4"
    },
    "18014": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "18015": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "18017": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "ADD",
      "path": "4"
    },
    "18018": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "DUP1",
      "path": "4"
    },
    "18019": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "18021": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "ADD",
      "path": "4"
    },
    "18022": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "DUP3",
      "path": "4"
    },
    "18023": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "DUP2",
      "path": "4"
    },
    "18024": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "SUB",
      "path": "4"
    },
    "18025": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "DUP3",
      "path": "4"
    },
    "18026": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "18027": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "DUP4",
      "path": "4"
    },
    "18028": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "DUP2",
      "path": "4"
    },
    "18029": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "DUP2",
      "path": "4"
    },
    "18030": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "18031": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "DUP2",
      "path": "4"
    },
    "18032": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "18033": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "18035": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "ADD",
      "path": "4"
    },
    "18036": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "18037": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "POP",
      "path": "4"
    },
    "18038": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "DUP1",
      "path": "4"
    },
    "18039": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "18040": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "18041": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "18043": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "ADD",
      "path": "4"
    },
    "18044": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "18045": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "DUP1",
      "path": "4"
    },
    "18046": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "DUP4",
      "path": "4"
    },
    "18047": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "DUP4",
      "path": "4"
    },
    "18048": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "18050": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "18051": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "DUP4",
      "path": "4"
    },
    "18052": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "DUP2",
      "path": "4"
    },
    "18053": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "LT",
      "path": "4"
    },
    "18054": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "18055": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x469A"
    },
    "18058": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "18059": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "DUP2",
      "path": "4"
    },
    "18060": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "DUP2",
      "path": "4"
    },
    "18061": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "ADD",
      "path": "4"
    },
    "18062": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "18063": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "DUP4",
      "path": "4"
    },
    "18064": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "DUP3",
      "path": "4"
    },
    "18065": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "ADD",
      "path": "4"
    },
    "18066": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "18067": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "18069": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "ADD",
      "path": "4"
    },
    "18070": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4682"
    },
    "18073": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "JUMP",
      "path": "4"
    },
    "18074": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "18075": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "POP",
      "path": "4"
    },
    "18076": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "POP",
      "path": "4"
    },
    "18077": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "POP",
      "path": "4"
    },
    "18078": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "POP",
      "path": "4"
    },
    "18079": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "18080": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "POP",
      "path": "4"
    },
    "18081": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "18082": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "DUP2",
      "path": "4"
    },
    "18083": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "ADD",
      "path": "4"
    },
    "18084": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "18085": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "18087": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "AND",
      "path": "4"
    },
    "18088": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "DUP1",
      "path": "4"
    },
    "18089": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "18090": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x46C7"
    },
    "18093": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "18094": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "DUP1",
      "path": "4"
    },
    "18095": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "DUP3",
      "path": "4"
    },
    "18096": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "SUB",
      "path": "4"
    },
    "18097": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "DUP1",
      "path": "4"
    },
    "18098": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "18099": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "18101": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "DUP4",
      "path": "4"
    },
    "18102": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "18104": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "SUB",
      "path": "4"
    },
    "18105": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x100"
    },
    "18108": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "EXP",
      "path": "4"
    },
    "18109": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "SUB",
      "path": "4"
    },
    "18110": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "NOT",
      "path": "4"
    },
    "18111": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "AND",
      "path": "4"
    },
    "18112": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "DUP2",
      "path": "4"
    },
    "18113": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "18114": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "18116": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "ADD",
      "path": "4"
    },
    "18117": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "18118": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "POP",
      "path": "4"
    },
    "18119": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "18120": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "POP",
      "path": "4"
    },
    "18121": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "18122": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "POP",
      "path": "4"
    },
    "18123": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "POP",
      "path": "4"
    },
    "18124": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "POP",
      "path": "4"
    },
    "18125": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "POP",
      "path": "4"
    },
    "18126": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "POP",
      "path": "4"
    },
    "18127": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "POP",
      "path": "4"
    },
    "18128": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "18130": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "18131": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "18133": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "DUP2",
      "path": "4"
    },
    "18134": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "DUP4",
      "path": "4"
    },
    "18135": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "SUB",
      "path": "4"
    },
    "18136": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "SUB",
      "path": "4"
    },
    "18137": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "DUP2",
      "path": "4"
    },
    "18138": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "18139": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "18140": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "18142": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "18143": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "18144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18148": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "18150": {
      "op": "SHL"
    },
    "18151": {
      "op": "SUB"
    },
    "18152": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "NOT",
      "path": "4"
    },
    "18153": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "AND",
      "path": "4"
    },
    "18154": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "18156": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "DUP3",
      "path": "4"
    },
    "18157": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "ADD",
      "path": "4"
    },
    "18158": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "DUP1",
      "path": "4"
    },
    "18159": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "18160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18164": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "18166": {
      "op": "SHL"
    },
    "18167": {
      "op": "SUB"
    },
    "18168": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "DUP4",
      "path": "4"
    },
    "18169": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "DUP2",
      "path": "4"
    },
    "18170": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "DUP4",
      "path": "4"
    },
    "18171": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "AND",
      "path": "4"
    },
    "18172": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "OR",
      "path": "4"
    },
    "18173": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "DUP4",
      "path": "4"
    },
    "18174": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "18175": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "POP",
      "path": "4"
    },
    "18176": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "POP",
      "path": "4"
    },
    "18177": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "POP",
      "path": "4"
    },
    "18178": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15948
      ],
      "op": "POP",
      "path": "4"
    },
    "18179": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15757,
        16003
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "18181": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15757,
        16003
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "18182": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15757,
        16003
      ],
      "op": "DUP1",
      "path": "4"
    },
    "18183": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15757,
        16003
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "18185": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15757,
        16003
      ],
      "op": "ADD",
      "path": "4"
    },
    "18186": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15757,
        16003
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "18188": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15757,
        16003
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "18189": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15757,
        16003
      ],
      "op": "DUP1",
      "path": "4"
    },
    "18190": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15757,
        16003
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x32"
    },
    "18192": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15757,
        16003
      ],
      "op": "DUP2",
      "path": "4"
    },
    "18193": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15757,
        16003
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "18194": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15757,
        16003
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "18196": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15757,
        16003
      ],
      "op": "ADD",
      "path": "4"
    },
    "18197": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15757,
        16003
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x517E"
    },
    "18200": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15757,
        16003
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x32"
    },
    "18202": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15757,
        16003
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "18203": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15757,
        16003
      ],
      "op": "CODECOPY",
      "path": "4"
    },
    "18204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18208": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18210": {
      "op": "SHL"
    },
    "18211": {
      "op": "SUB"
    },
    "18212": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15757,
        15772
      ],
      "op": "DUP9",
      "path": "4"
    },
    "18213": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15757,
        15772
      ],
      "op": "AND",
      "path": "4"
    },
    "18214": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15757,
        15772
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "18215": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15757,
        16003
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "18216": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15757,
        15772
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4BDC"
    },
    "18219": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        15757,
        16003
      ],
      "op": "JUMP",
      "path": "4"
    },
    "18220": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15757,
        16003
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "18221": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15731,
        16003
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "18222": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15731,
        16003
      ],
      "op": "POP",
      "path": "4"
    },
    "18223": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16013,
        16026
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "18225": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16040,
        16050
      ],
      "op": "DUP2",
      "path": "4"
    },
    "18226": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16029,
        16061
      ],
      "op": "DUP1",
      "path": "4"
    },
    "18227": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16029,
        16061
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "18229": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16029,
        16061
      ],
      "op": "ADD",
      "path": "4"
    },
    "18230": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16029,
        16061
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "18231": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16029,
        16061
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "18232": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16029,
        16061
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "18234": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16029,
        16061
      ],
      "op": "DUP2",
      "path": "4"
    },
    "18235": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16029,
        16061
      ],
      "op": "LT",
      "path": "4"
    },
    "18236": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16029,
        16061
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "18237": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16029,
        16061
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4745"
    },
    "18240": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16029,
        16061
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "18241": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16029,
        16061
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "18243": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16029,
        16061
      ],
      "op": "DUP1",
      "path": "4"
    },
    "18244": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16029,
        16061
      ],
      "op": "REVERT",
      "path": "4"
    },
    "18245": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16029,
        16061
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "18246": {
      "op": "POP"
    },
    "18247": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16029,
        16061
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "18248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18252": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "18254": {
      "op": "SHL"
    },
    "18255": {
      "op": "SUB"
    },
    "18256": {
      "op": "NOT"
    },
    "18257": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16079,
        16105
      ],
      "op": "AND",
      "path": "4",
      "statement": 183
    },
    "18258": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "18263": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "18265": {
      "op": "SHL"
    },
    "18266": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16079,
        16105
      ],
      "op": "EQ",
      "path": "4"
    },
    "18267": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        16079,
        16105
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "18268": {
      "op": "POP"
    },
    "18269": {
      "op": "POP"
    },
    "18270": {
      "op": "POP"
    },
    "18271": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15524,
        16113
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "18272": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15524,
        16113
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "18273": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15524,
        16113
      ],
      "op": "POP",
      "path": "4"
    },
    "18274": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15524,
        16113
      ],
      "op": "POP",
      "path": "4"
    },
    "18275": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15524,
        16113
      ],
      "op": "POP",
      "path": "4"
    },
    "18276": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15524,
        16113
      ],
      "op": "POP",
      "path": "4"
    },
    "18277": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        15524,
        16113
      ],
      "op": "JUMP",
      "path": "4"
    },
    "18278": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46360,
        46888
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "18279": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46505
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1E"
    },
    "18281": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46505
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "18282": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "18284": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "DUP1",
      "path": "20"
    },
    "18285": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "18286": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "18291": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "18293": {
      "op": "SHL"
    },
    "18294": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "DUP2",
      "path": "20"
    },
    "18295": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "18296": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46524,
        46528
      ],
      "op": "ADDRESS",
      "path": "20"
    },
    "18297": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "18299": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "DUP3",
      "path": "20"
    },
    "18300": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "ADD",
      "path": "20"
    },
    "18301": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "18302": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "18303": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "18304": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46476,
        46497
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "18306": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46476,
        46497
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "18307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18311": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18313": {
      "op": "SHL"
    },
    "18314": {
      "op": "SUB"
    },
    "18315": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46505
      ],
      "op": "AND",
      "path": "20"
    },
    "18316": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46505
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "18317": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46515
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x70A08231"
    },
    "18322": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46515
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "18323": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "18325": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "DUP1",
      "path": "20"
    },
    "18326": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "DUP4",
      "path": "20"
    },
    "18327": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "ADD",
      "path": "20"
    },
    "18328": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "18329": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "18331": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "18332": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "18333": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "18334": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "DUP3",
      "path": "20"
    },
    "18335": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "18336": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "SUB",
      "path": "20"
    },
    "18337": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "ADD",
      "path": "20"
    },
    "18338": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "DUP2",
      "path": "20"
    },
    "18339": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46505
      ],
      "op": "DUP7",
      "path": "20"
    },
    "18340": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "DUP1",
      "path": "20"
    },
    "18341": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "18342": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "18343": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "DUP1",
      "path": "20"
    },
    "18344": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "18345": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x47B1"
    },
    "18348": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "18349": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "18351": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "DUP1",
      "path": "20"
    },
    "18352": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "REVERT",
      "path": "20"
    },
    "18353": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "18354": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "POP",
      "path": "20"
    },
    "18355": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "GAS",
      "path": "20"
    },
    "18356": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "18357": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "18358": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "DUP1",
      "path": "20"
    },
    "18359": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "18360": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x47C5"
    },
    "18363": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "18364": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "18365": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "18367": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "DUP1",
      "path": "20"
    },
    "18368": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "18369": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "18370": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "18372": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "REVERT",
      "path": "20"
    },
    "18373": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "18374": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "POP",
      "path": "20"
    },
    "18375": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "POP",
      "path": "20"
    },
    "18376": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "POP",
      "path": "20"
    },
    "18377": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "POP",
      "path": "20"
    },
    "18378": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "18380": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "18381": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "18382": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "18384": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "DUP2",
      "path": "20"
    },
    "18385": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "LT",
      "path": "20"
    },
    "18386": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "18387": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x47DB"
    },
    "18390": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "18391": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "18393": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "DUP1",
      "path": "20"
    },
    "18394": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "REVERT",
      "path": "20"
    },
    "18395": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "18396": {
      "op": "POP"
    },
    "18397": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "18398": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46607,
        46622
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x14"
    },
    "18400": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46607,
        46622
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "18401": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46564,
        46588
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1D"
    },
    "18403": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46564,
        46588
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "18404": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "18405": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46500,
        46530
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "18406": {
      "op": "POP"
    },
    "18407": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46540,
        46561
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "18409": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46540,
        46561
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "18410": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46564,
        46604
      ],
      "op": "DUP4",
      "path": "20"
    },
    "18411": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46564,
        46604
      ],
      "op": "MUL",
      "path": "20"
    },
    "18412": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46607,
        46622
      ],
      "op": "DUP2",
      "path": "20"
    },
    "18413": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46564,
        46622
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x47F2"
    },
    "18416": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46564,
        46622
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "18417": {
      "dev": "Division by zero",
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46564,
        46622
      ],
      "op": "INVALID",
      "path": "20"
    },
    "18418": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46564,
        46622
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "18419": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46669,
        46693
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 184,
      "value": "0x1D"
    },
    "18421": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46669,
        46693
      ],
      "op": "DUP1",
      "path": "20"
    },
    "18422": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46669,
        46693
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "18423": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46651,
        46666
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x14"
    },
    "18425": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46651,
        46666
      ],
      "op": "DUP1",
      "path": "20"
    },
    "18426": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46651,
        46666
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "18427": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46651,
        46693
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "18428": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46651,
        46693
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "18429": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46651,
        46693
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "18430": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46651,
        46693
      ],
      "op": "SUB",
      "path": "20"
    },
    "18431": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46633,
        46693
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "18432": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46633,
        46693
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "18433": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18435": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46742,
        46770
      ],
      "op": "SWAP1",
      "path": "20",
      "statement": 185
    },
    "18436": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46742,
        46770
      ],
      "op": "DUP2",
      "path": "20"
    },
    "18437": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46742,
        46770
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "18438": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46742,
        46770
      ],
      "op": "SSTORE",
      "path": "20"
    },
    "18439": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46786
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 186,
      "value": "0x1E"
    },
    "18441": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46786
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "18442": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "18444": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "DUP1",
      "path": "20"
    },
    "18445": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "18446": {
      "op": "PUSH4",
      "value": "0x2E1A7D4D"
    },
    "18451": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "18453": {
      "op": "SHL"
    },
    "18454": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "DUP2",
      "path": "20"
    },
    "18455": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "18456": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46564,
        46622
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "18457": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46564,
        46622
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "18458": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46564,
        46622
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "18459": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46564,
        46622
      ],
      "op": "DIV",
      "path": "20"
    },
    "18460": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "18462": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "DUP6",
      "path": "20"
    },
    "18463": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "ADD",
      "path": "20"
    },
    "18464": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "DUP2",
      "path": "20"
    },
    "18465": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "18466": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "18467": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "18468": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "18469": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46564,
        46622
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "18470": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46564,
        46622
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "18471": {
      "op": "POP"
    },
    "18472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18476": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18478": {
      "op": "SHL"
    },
    "18479": {
      "op": "SUB"
    },
    "18480": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46786
      ],
      "op": "AND",
      "path": "20"
    },
    "18481": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46786
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "18482": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46795
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0x2E1A7D4D"
    },
    "18487": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46795
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "18488": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "18490": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "DUP1",
      "path": "20"
    },
    "18491": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "DUP4",
      "path": "20"
    },
    "18492": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "ADD",
      "path": "20"
    },
    "18493": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "18494": {
      "op": "SWAP3"
    },
    "18495": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "DUP3",
      "path": "20"
    },
    "18496": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "18497": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "SUB",
      "path": "20"
    },
    "18498": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "ADD",
      "path": "20"
    },
    "18499": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "DUP2",
      "path": "20"
    },
    "18500": {
      "op": "DUP4"
    },
    "18501": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46786
      ],
      "op": "DUP8",
      "path": "20"
    },
    "18502": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "DUP1",
      "path": "20"
    },
    "18503": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "18504": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "18505": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "DUP1",
      "path": "20"
    },
    "18506": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "18507": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4853"
    },
    "18510": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "18511": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "18513": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "DUP1",
      "path": "20"
    },
    "18514": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "REVERT",
      "path": "20"
    },
    "18515": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "18516": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "POP",
      "path": "20"
    },
    "18517": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "GAS",
      "path": "20"
    },
    "18518": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "CALL",
      "path": "20"
    },
    "18519": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "18520": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "DUP1",
      "path": "20"
    },
    "18521": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "18522": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x4867"
    },
    "18525": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "18526": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "18527": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "18529": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "DUP1",
      "path": "20"
    },
    "18530": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "18531": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "18532": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "18534": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "REVERT",
      "path": "20"
    },
    "18535": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46781,
        46810
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "18536": {
      "op": "POP"
    },
    "18537": {
      "op": "POP"
    },
    "18538": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46824
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 187,
      "value": "0x22"
    },
    "18540": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46824
      ],
      "op": "SLOAD",
      "path": "20"
    },
    "18541": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "18543": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "DUP1",
      "path": "20"
    },
    "18544": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "18545": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "18550": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "18552": {
      "op": "SHL"
    },
    "18553": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "DUP2",
      "path": "20"
    },
    "18554": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "18555": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46834,
        46844
      ],
      "op": "CALLER",
      "path": "20"
    },
    "18556": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "18558": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "DUP3",
      "path": "20"
    },
    "18559": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "ADD",
      "path": "20"
    },
    "18560": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "18561": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "18563": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "DUP2",
      "path": "20"
    },
    "18564": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "ADD",
      "path": "20"
    },
    "18565": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "DUP7",
      "path": "20"
    },
    "18566": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "18567": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "18568": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "18569": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "18570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "18574": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "18576": {
      "op": "SHL"
    },
    "18577": {
      "op": "SUB"
    },
    "18578": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46824
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "18579": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46824
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "18580": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46824
      ],
      "op": "AND",
      "path": "20"
    },
    "18581": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46824
      ],
      "op": "SWAP4",
      "path": "20"
    },
    "18582": {
      "op": "POP"
    },
    "18583": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46833
      ],
      "op": "PUSH4",
      "path": "20",
      "value": "0xA9059CBB"
    },
    "18588": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46833
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "18589": {
      "op": "POP"
    },
    "18590": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "18592": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "DUP1",
      "path": "20"
    },
    "18593": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "DUP3",
      "path": "20"
    },
    "18594": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "ADD",
      "path": "20"
    },
    "18595": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "18596": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "18598": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "SWAP3",
      "path": "20"
    },
    "18599": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "18600": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "18601": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "18602": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "DUP3",
      "path": "20"
    },
    "18603": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "18604": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "SUB",
      "path": "20"
    },
    "18605": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "ADD",
      "path": "20"
    },
    "18606": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "DUP2",
      "path": "20"
    },
    "18607": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46824
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "18609": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46824
      ],
      "op": "DUP8",
      "path": "20"
    },
    "18610": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "DUP1",
      "path": "20"
    },
    "18611": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "EXTCODESIZE",
      "path": "20"
    },
    "18612": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "18613": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "DUP1",
      "path": "20"
    },
    "18614": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "18615": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x48BF"
    },
    "18618": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "18619": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "18621": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "DUP1",
      "path": "20"
    },
    "18622": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "REVERT",
      "path": "20"
    },
    "18623": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "18624": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "POP",
      "path": "20"
    },
    "18625": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "GAS",
      "path": "20"
    },
    "18626": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "CALL",
      "path": "20"
    },
    "18627": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "18628": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "DUP1",
      "path": "20"
    },
    "18629": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "18630": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x48D3"
    },
    "18633": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "18634": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "18635": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "18637": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "DUP1",
      "path": "20"
    },
    "18638": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "18639": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "18640": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "18642": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "REVERT",
      "path": "20"
    },
    "18643": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "18644": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "POP",
      "path": "20"
    },
    "18645": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "POP",
      "path": "20"
    },
    "18646": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "POP",
      "path": "20"
    },
    "18647": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "POP",
      "path": "20"
    },
    "18648": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "18650": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "18651": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "18652": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "18654": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "DUP2",
      "path": "20"
    },
    "18655": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "LT",
      "path": "20"
    },
    "18656": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "18657": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2560"
    },
    "18660": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "18661": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "18663": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "DUP1",
      "path": "20"
    },
    "18664": {
      "fn": "BuyTheDipNFT.withdrawProfitsFromLending",
      "offset": [
        46820,
        46860
      ],
      "op": "REVERT",
      "path": "20"
    },
    "18665": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4278,
        4401
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "18666": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4349,
        4353
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "18668": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4372,
        4389
      ],
      "op": "SWAP1",
      "path": "11",
      "statement": 188
    },
    "18669": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4372,
        4389
      ],
      "op": "DUP2",
      "path": "11"
    },
    "18670": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4372,
        4389
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "18671": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4372,
        4384
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "18673": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4372,
        4384
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "18674": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4372,
        4384
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "18675": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4372,
        4384
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "18676": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4372,
        4384
      ],
      "op": "ADD",
      "path": "11"
    },
    "18677": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4372,
        4389
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "18679": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4372,
        4389
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "18680": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4372,
        4389
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "18682": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4372,
        4389
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "18683": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4372,
        4389
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "18684": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4372,
        4389
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "18685": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4372,
        4394
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "18686": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4372,
        4394
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "18687": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4372,
        4394
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "18688": {
      "fn": "EnumerableMap._contains",
      "jump": "o",
      "offset": [
        4278,
        4401
      ],
      "op": "JUMP",
      "path": "11"
    },
    "18689": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2212,
        3724
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "18690": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2278,
        2282
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "18692": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18693": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18694": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18695": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2427
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "18697": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2427
      ],
      "op": "DUP4",
      "path": "12"
    },
    "18698": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2427
      ],
      "op": "ADD",
      "path": "12"
    },
    "18699": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "18701": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18702": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "18704": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18705": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "18706": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2415,
        2434
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "18707": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2449,
        2464
      ],
      "op": "DUP1",
      "path": "12"
    },
    "18708": {
      "branch": 281,
      "fn": "EnumerableSet._remove",
      "offset": [
        2449,
        2464
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "18709": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2445,
        3718
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x49BD"
    },
    "18712": {
      "branch": 281,
      "fn": "EnumerableSet._remove",
      "offset": [
        2445,
        3718
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "18713": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2896
      ],
      "op": "DUP4",
      "path": "12"
    },
    "18714": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2896
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "18715": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "18717": {
      "op": "NOT"
    },
    "18718": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2830,
        2844
      ],
      "op": "DUP1",
      "path": "12"
    },
    "18719": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2830,
        2844
      ],
      "op": "DUP4",
      "path": "12"
    },
    "18720": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2830,
        2844
      ],
      "op": "ADD",
      "path": "12"
    },
    "18721": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2830,
        2844
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18722": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18723": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18724": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "ADD",
      "path": "12"
    },
    "18725": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18726": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2806,
        2827
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "18728": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2806,
        2827
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18729": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2881
      ],
      "op": "DUP8",
      "path": "12"
    },
    "18730": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2881
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18731": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "DUP4",
      "path": "12"
    },
    "18732": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2878,
        2900
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18733": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18734": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "LT",
      "path": "12"
    },
    "18735": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4934"
    },
    "18738": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "18739": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "INVALID",
      "path": "12"
    },
    "18740": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "18741": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18742": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "18744": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18745": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "18747": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "18749": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "18750": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "ADD",
      "path": "12"
    },
    "18751": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3160,
        3182
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "18752": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3140,
        3182
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18753": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3140,
        3182
      ],
      "op": "POP",
      "path": "12"
    },
    "18754": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3303,
        3312
      ],
      "op": "DUP1",
      "path": "12",
      "statement": 189
    },
    "18755": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3277
      ],
      "op": "DUP8",
      "path": "12"
    },
    "18756": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3285
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "18758": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3285
      ],
      "op": "ADD",
      "path": "12"
    },
    "18759": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3286,
        3299
      ],
      "op": "DUP5",
      "path": "12"
    },
    "18760": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18761": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "18762": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18763": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "LT",
      "path": "12"
    },
    "18764": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4951"
    },
    "18767": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "18768": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "INVALID",
      "path": "12"
    },
    "18769": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "18770": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "18772": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18773": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "DUP3",
      "path": "12"
    },
    "18774": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18775": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "18777": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "DUP1",
      "path": "12"
    },
    "18778": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "DUP4",
      "path": "12"
    },
    "18779": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "18780": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18781": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18782": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3300
      ],
      "op": "ADD",
      "path": "12"
    },
    "18783": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3312
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "18784": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3312
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18785": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3312
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "18786": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3274,
        3312
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "18787": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "DUP3",
      "path": "12",
      "statement": 190
    },
    "18788": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18789": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18790": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3420,
        3421
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "18792": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3390
      ],
      "op": "DUP10",
      "path": "12"
    },
    "18793": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3390
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18794": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3390
      ],
      "op": "ADD",
      "path": "12"
    },
    "18795": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18796": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "18797": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18798": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "18800": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18801": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3401
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "18802": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3404,
        3421
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18803": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3404,
        3421
      ],
      "op": "DUP5",
      "path": "12"
    },
    "18804": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3404,
        3421
      ],
      "op": "ADD",
      "path": "12"
    },
    "18805": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3421
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18806": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3421
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "18807": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "DUP7",
      "path": "12",
      "statement": 191
    },
    "18808": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "18809": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3381
      ],
      "op": "DUP8",
      "path": "12"
    },
    "18810": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3378,
        3381
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18811": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "DUP1",
      "path": "12"
    },
    "18812": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4981"
    },
    "18815": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "18816": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "INVALID",
      "path": "12"
    },
    "18817": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "18818": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "18820": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18821": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SUB",
      "path": "12"
    },
    "18822": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18823": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18824": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18825": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "18827": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18828": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "18830": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "18832": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "18833": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "ADD",
      "path": "12"
    },
    "18834": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "18836": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18837": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "18838": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18839": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3527,
        3544
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "18840": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3622
      ],
      "op": "DUP7",
      "path": "12",
      "statement": 192
    },
    "18841": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3631
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "18843": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3631
      ],
      "op": "ADD",
      "path": "12"
    },
    "18844": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "18846": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3632,
        3637
      ],
      "op": "DUP8",
      "path": "12"
    },
    "18847": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18848": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18849": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "18851": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "ADD",
      "path": "12"
    },
    "18852": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18853": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18854": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18855": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "18857": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "ADD",
      "path": "12"
    },
    "18858": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "18860": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3619,
        3638
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "18861": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3612,
        3638
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "18863": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3612,
        3638
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18864": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3612,
        3638
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "18865": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3660,
        3664
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 193,
      "value": "0x1"
    },
    "18867": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "18868": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "POP",
      "path": "12"
    },
    "18869": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "POP",
      "path": "12"
    },
    "18870": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "POP",
      "path": "12"
    },
    "18871": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "POP",
      "path": "12"
    },
    "18872": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "POP",
      "path": "12"
    },
    "18873": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10EE"
    },
    "18876": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3653,
        3664
      ],
      "op": "JUMP",
      "path": "12"
    },
    "18877": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2445,
        3718
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "18878": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3702,
        3707
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 194,
      "value": "0x0"
    },
    "18880": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3695,
        3707
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18881": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3695,
        3707
      ],
      "op": "POP",
      "path": "12"
    },
    "18882": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3695,
        3707
      ],
      "op": "POP",
      "path": "12"
    },
    "18883": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3695,
        3707
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10EE"
    },
    "18886": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3695,
        3707
      ],
      "op": "JUMP",
      "path": "12"
    },
    "18887": {
      "fn": "EnumerableSet._add",
      "offset": [
        1640,
        2044
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "18888": {
      "fn": "EnumerableSet._add",
      "offset": [
        1703,
        1707
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "18890": {
      "fn": "EnumerableSet._add",
      "offset": [
        1724,
        1745
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x49D3"
    },
    "18893": {
      "fn": "EnumerableSet._add",
      "offset": [
        1734,
        1737
      ],
      "op": "DUP4",
      "path": "12"
    },
    "18894": {
      "fn": "EnumerableSet._add",
      "offset": [
        1739,
        1744
      ],
      "op": "DUP4",
      "path": "12"
    },
    "18895": {
      "fn": "EnumerableSet._add",
      "offset": [
        1724,
        1733
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x48E9"
    },
    "18898": {
      "fn": "EnumerableSet._add",
      "jump": "i",
      "offset": [
        1724,
        1745
      ],
      "op": "JUMP",
      "path": "12"
    },
    "18899": {
      "branch": 282,
      "fn": "EnumerableSet._add",
      "offset": [
        1724,
        1745
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "18900": {
      "fn": "EnumerableSet._add",
      "offset": [
        1719,
        2038
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x4A09"
    },
    "18903": {
      "branch": 282,
      "fn": "EnumerableSet._add",
      "offset": [
        1719,
        2038
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "18904": {
      "op": "POP"
    },
    "18905": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP2",
      "path": "12",
      "statement": 195
    },
    "18906": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "18907": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "18909": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18910": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18911": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "ADD",
      "path": "12"
    },
    "18912": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP5",
      "path": "12"
    },
    "18913": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "18914": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1772
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "18916": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP5",
      "path": "12"
    },
    "18917": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP2",
      "path": "12"
    },
    "18918": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18919": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "18921": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP1",
      "path": "12"
    },
    "18922": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP3",
      "path": "12"
    },
    "18923": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "18924": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18925": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "18926": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "ADD",
      "path": "12"
    },
    "18927": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "DUP5",
      "path": "12"
    },
    "18928": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18929": {
      "fn": "EnumerableSet._add",
      "offset": [
        1761,
        1784
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "18930": {
      "fn": "EnumerableSet._add",
      "offset": [
        1941,
        1959
      ],
      "op": "DUP5",
      "path": "12",
      "statement": 196
    },
    "18931": {
      "fn": "EnumerableSet._add",
      "offset": [
        1941,
        1959
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "18932": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "DUP5",
      "path": "12"
    },
    "18933": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "DUP3",
      "path": "12"
    },
    "18934": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18935": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1931
      ],
      "op": "DUP3",
      "path": "12"
    },
    "18936": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1931
      ],
      "op": "DUP7",
      "path": "12"
    },
    "18937": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1931
      ],
      "op": "ADD",
      "path": "12"
    },
    "18938": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18939": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "18940": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "18941": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "18943": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18944": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1938
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "18945": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1959
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18946": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1959
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "18947": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1959
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "18948": {
      "fn": "EnumerableSet._add",
      "offset": [
        1919,
        1959
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "18949": {
      "fn": "EnumerableSet._add",
      "offset": [
        1973,
        1984
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 197,
      "value": "0x10EE"
    },
    "18952": {
      "fn": "EnumerableSet._add",
      "offset": [
        1973,
        1984
      ],
      "op": "JUMP",
      "path": "12"
    },
    "18953": {
      "fn": "EnumerableSet._add",
      "offset": [
        1719,
        2038
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "18954": {
      "op": "POP"
    },
    "18955": {
      "fn": "EnumerableSet._add",
      "offset": [
        2022,
        2027
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 198,
      "value": "0x0"
    },
    "18957": {
      "fn": "EnumerableSet._add",
      "offset": [
        2015,
        2027
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x10EE"
    },
    "18960": {
      "fn": "EnumerableSet._add",
      "offset": [
        2015,
        2027
      ],
      "op": "JUMP",
      "path": "12"
    },
    "18961": {
      "fn": "EnumerableMap._set",
      "offset": [
        1836,
        2514
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "18962": {
      "fn": "EnumerableMap._set",
      "offset": [
        1912,
        1916
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "18964": {
      "fn": "EnumerableMap._set",
      "offset": [
        2045,
        2062
      ],
      "op": "DUP3",
      "path": "11"
    },
    "18965": {
      "fn": "EnumerableMap._set",
      "offset": [
        2045,
        2062
      ],
      "op": "DUP2",
      "path": "11"
    },
    "18966": {
      "fn": "EnumerableMap._set",
      "offset": [
        2045,
        2062
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "18967": {
      "fn": "EnumerableMap._set",
      "offset": [
        2045,
        2057
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "18969": {
      "fn": "EnumerableMap._set",
      "offset": [
        2045,
        2057
      ],
      "op": "DUP5",
      "path": "11"
    },
    "18970": {
      "fn": "EnumerableMap._set",
      "offset": [
        2045,
        2057
      ],
      "op": "ADD",
      "path": "11"
    },
    "18971": {
      "fn": "EnumerableMap._set",
      "offset": [
        2045,
        2062
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "18973": {
      "fn": "EnumerableMap._set",
      "offset": [
        2045,
        2062
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "18974": {
      "fn": "EnumerableMap._set",
      "offset": [
        2045,
        2062
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "18976": {
      "fn": "EnumerableMap._set",
      "offset": [
        2045,
        2062
      ],
      "op": "DUP2",
      "path": "11"
    },
    "18977": {
      "fn": "EnumerableMap._set",
      "offset": [
        2045,
        2062
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "18978": {
      "fn": "EnumerableMap._set",
      "offset": [
        2045,
        2062
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "18979": {
      "branch": 279,
      "fn": "EnumerableMap._set",
      "offset": [
        2077,
        2090
      ],
      "op": "DUP1",
      "path": "11"
    },
    "18980": {
      "fn": "EnumerableMap._set",
      "offset": [
        2073,
        2508
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4A76"
    },
    "18983": {
      "branch": 279,
      "fn": "EnumerableMap._set",
      "offset": [
        2073,
        2508
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "18984": {
      "op": "POP"
    },
    "18985": {
      "op": "POP"
    },
    "18986": {
      "fn": "EnumerableMap._set",
      "offset": [
        2161,
        2199
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 199,
      "value": "0x40"
    },
    "18988": {
      "fn": "EnumerableMap._set",
      "offset": [
        2161,
        2199
      ],
      "op": "DUP1",
      "path": "11"
    },
    "18989": {
      "fn": "EnumerableMap._set",
      "offset": [
        2161,
        2199
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "18990": {
      "fn": "EnumerableMap._set",
      "offset": [
        2161,
        2199
      ],
      "op": "DUP1",
      "path": "11"
    },
    "18991": {
      "fn": "EnumerableMap._set",
      "offset": [
        2161,
        2199
      ],
      "op": "DUP3",
      "path": "11"
    },
    "18992": {
      "fn": "EnumerableMap._set",
      "offset": [
        2161,
        2199
      ],
      "op": "ADD",
      "path": "11"
    },
    "18993": {
      "fn": "EnumerableMap._set",
      "offset": [
        2161,
        2199
      ],
      "op": "DUP3",
      "path": "11"
    },
    "18994": {
      "fn": "EnumerableMap._set",
      "offset": [
        2161,
        2199
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "18995": {
      "fn": "EnumerableMap._set",
      "offset": [
        2161,
        2199
      ],
      "op": "DUP4",
      "path": "11"
    },
    "18996": {
      "fn": "EnumerableMap._set",
      "offset": [
        2161,
        2199
      ],
      "op": "DUP2",
      "path": "11"
    },
    "18997": {
      "fn": "EnumerableMap._set",
      "offset": [
        2161,
        2199
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "18998": {
      "fn": "EnumerableMap._set",
      "offset": [
        2161,
        2199
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "19000": {
      "fn": "EnumerableMap._set",
      "offset": [
        2161,
        2199
      ],
      "op": "DUP1",
      "path": "11"
    },
    "19001": {
      "fn": "EnumerableMap._set",
      "offset": [
        2161,
        2199
      ],
      "op": "DUP3",
      "path": "11"
    },
    "19002": {
      "fn": "EnumerableMap._set",
      "offset": [
        2161,
        2199
      ],
      "op": "ADD",
      "path": "11"
    },
    "19003": {
      "fn": "EnumerableMap._set",
      "offset": [
        2161,
        2199
      ],
      "op": "DUP5",
      "path": "11"
    },
    "19004": {
      "fn": "EnumerableMap._set",
      "offset": [
        2161,
        2199
      ],
      "op": "DUP2",
      "path": "11"
    },
    "19005": {
      "fn": "EnumerableMap._set",
      "offset": [
        2161,
        2199
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "19006": {
      "fn": "EnumerableMap._set",
      "offset": [
        2143,
        2200
      ],
      "op": "DUP7",
      "path": "11"
    },
    "19007": {
      "fn": "EnumerableMap._set",
      "offset": [
        2143,
        2200
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "19008": {
      "fn": "EnumerableMap._set",
      "offset": [
        2143,
        2200
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "19010": {
      "fn": "EnumerableMap._set",
      "offset": [
        2143,
        2200
      ],
      "op": "DUP2",
      "path": "11"
    },
    "19011": {
      "fn": "EnumerableMap._set",
      "offset": [
        2143,
        2200
      ],
      "op": "DUP2",
      "path": "11"
    },
    "19012": {
      "fn": "EnumerableMap._set",
      "offset": [
        2143,
        2200
      ],
      "op": "ADD",
      "path": "11"
    },
    "19013": {
      "fn": "EnumerableMap._set",
      "offset": [
        2143,
        2200
      ],
      "op": "DUP10",
      "path": "11"
    },
    "19014": {
      "fn": "EnumerableMap._set",
      "offset": [
        2143,
        2200
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "19015": {
      "fn": "EnumerableMap._set",
      "offset": [
        2143,
        2155
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "19017": {
      "fn": "EnumerableMap._set",
      "offset": [
        2143,
        2200
      ],
      "op": "DUP10",
      "path": "11"
    },
    "19018": {
      "fn": "EnumerableMap._set",
      "offset": [
        2143,
        2200
      ],
      "op": "DUP2",
      "path": "11"
    },
    "19019": {
      "fn": "EnumerableMap._set",
      "offset": [
        2143,
        2200
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "19020": {
      "fn": "EnumerableMap._set",
      "offset": [
        2143,
        2200
      ],
      "op": "DUP5",
      "path": "11"
    },
    "19021": {
      "fn": "EnumerableMap._set",
      "offset": [
        2143,
        2200
      ],
      "op": "DUP2",
      "path": "11"
    },
    "19022": {
      "fn": "EnumerableMap._set",
      "offset": [
        2143,
        2200
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "19023": {
      "fn": "EnumerableMap._set",
      "offset": [
        2143,
        2200
      ],
      "op": "SWAP6",
      "path": "11"
    },
    "19024": {
      "fn": "EnumerableMap._set",
      "offset": [
        2143,
        2200
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "19025": {
      "fn": "EnumerableMap._set",
      "offset": [
        2143,
        2200
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "19027": {
      "fn": "EnumerableMap._set",
      "offset": [
        2143,
        2200
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "19028": {
      "fn": "EnumerableMap._set",
      "offset": [
        2143,
        2200
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "19029": {
      "fn": "EnumerableMap._set",
      "offset": [
        2143,
        2200
      ],
      "op": "MUL",
      "path": "11"
    },
    "19030": {
      "fn": "EnumerableMap._set",
      "offset": [
        2143,
        2200
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "19031": {
      "fn": "EnumerableMap._set",
      "offset": [
        2143,
        2200
      ],
      "op": "SWAP6",
      "path": "11"
    },
    "19032": {
      "fn": "EnumerableMap._set",
      "offset": [
        2143,
        2200
      ],
      "op": "ADD",
      "path": "11"
    },
    "19033": {
      "fn": "EnumerableMap._set",
      "offset": [
        2143,
        2200
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "19034": {
      "fn": "EnumerableMap._set",
      "offset": [
        2143,
        2200
      ],
      "op": "DUP3",
      "path": "11"
    },
    "19035": {
      "fn": "EnumerableMap._set",
      "offset": [
        2143,
        2200
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "19036": {
      "fn": "EnumerableMap._set",
      "offset": [
        2143,
        2200
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "19037": {
      "fn": "EnumerableMap._set",
      "offset": [
        2143,
        2200
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "19038": {
      "fn": "EnumerableMap._set",
      "offset": [
        2143,
        2200
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "19039": {
      "fn": "EnumerableMap._set",
      "offset": [
        2143,
        2200
      ],
      "op": "DUP3",
      "path": "11"
    },
    "19040": {
      "fn": "EnumerableMap._set",
      "offset": [
        2143,
        2200
      ],
      "op": "ADD",
      "path": "11"
    },
    "19041": {
      "fn": "EnumerableMap._set",
      "offset": [
        2143,
        2200
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "19042": {
      "fn": "EnumerableMap._set",
      "offset": [
        2355,
        2374
      ],
      "op": "DUP7",
      "path": "11",
      "statement": 200
    },
    "19043": {
      "fn": "EnumerableMap._set",
      "offset": [
        2355,
        2374
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "19044": {
      "fn": "EnumerableMap._set",
      "offset": [
        2335,
        2352
      ],
      "op": "DUP7",
      "path": "11"
    },
    "19045": {
      "fn": "EnumerableMap._set",
      "offset": [
        2335,
        2352
      ],
      "op": "DUP5",
      "path": "11"
    },
    "19046": {
      "fn": "EnumerableMap._set",
      "offset": [
        2335,
        2352
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "19047": {
      "fn": "EnumerableMap._set",
      "offset": [
        2335,
        2347
      ],
      "op": "DUP2",
      "path": "11"
    },
    "19048": {
      "fn": "EnumerableMap._set",
      "offset": [
        2335,
        2347
      ],
      "op": "DUP9",
      "path": "11"
    },
    "19049": {
      "fn": "EnumerableMap._set",
      "offset": [
        2335,
        2347
      ],
      "op": "ADD",
      "path": "11"
    },
    "19050": {
      "fn": "EnumerableMap._set",
      "offset": [
        2335,
        2352
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "19051": {
      "fn": "EnumerableMap._set",
      "offset": [
        2335,
        2352
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "19052": {
      "fn": "EnumerableMap._set",
      "offset": [
        2335,
        2352
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "19053": {
      "fn": "EnumerableMap._set",
      "offset": [
        2335,
        2352
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "19054": {
      "fn": "EnumerableMap._set",
      "offset": [
        2335,
        2352
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "19055": {
      "fn": "EnumerableMap._set",
      "offset": [
        2335,
        2352
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "19056": {
      "fn": "EnumerableMap._set",
      "offset": [
        2335,
        2352
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "19057": {
      "fn": "EnumerableMap._set",
      "offset": [
        2335,
        2374
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "19058": {
      "fn": "EnumerableMap._set",
      "offset": [
        2388,
        2399
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 201,
      "value": "0x1638"
    },
    "19061": {
      "fn": "EnumerableMap._set",
      "offset": [
        2388,
        2399
      ],
      "op": "JUMP",
      "path": "11"
    },
    "19062": {
      "fn": "EnumerableMap._set",
      "offset": [
        2073,
        2508
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "19063": {
      "fn": "EnumerableMap._set",
      "offset": [
        2466,
        2471
      ],
      "op": "DUP3",
      "path": "11",
      "statement": 202
    },
    "19064": {
      "fn": "EnumerableMap._set",
      "offset": [
        2430,
        2433
      ],
      "op": "DUP6",
      "path": "11"
    },
    "19065": {
      "fn": "EnumerableMap._set",
      "offset": [
        2430,
        2442
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "19067": {
      "fn": "EnumerableMap._set",
      "offset": [
        2430,
        2442
      ],
      "op": "ADD",
      "path": "11"
    },
    "19068": {
      "fn": "EnumerableMap._set",
      "offset": [
        2454,
        2455
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "19070": {
      "fn": "EnumerableMap._set",
      "offset": [
        2443,
        2451
      ],
      "op": "DUP4",
      "path": "11"
    },
    "19071": {
      "fn": "EnumerableMap._set",
      "offset": [
        2443,
        2455
      ],
      "op": "SUB",
      "path": "11"
    },
    "19072": {
      "fn": "EnumerableMap._set",
      "offset": [
        2430,
        2456
      ],
      "op": "DUP2",
      "path": "11"
    },
    "19073": {
      "fn": "EnumerableMap._set",
      "offset": [
        2430,
        2456
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "19074": {
      "fn": "EnumerableMap._set",
      "offset": [
        2430,
        2456
      ],
      "op": "DUP2",
      "path": "11"
    },
    "19075": {
      "fn": "EnumerableMap._set",
      "offset": [
        2430,
        2456
      ],
      "op": "LT",
      "path": "11"
    },
    "19076": {
      "fn": "EnumerableMap._set",
      "offset": [
        2430,
        2456
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x4A89"
    },
    "19079": {
      "fn": "EnumerableMap._set",
      "offset": [
        2430,
        2456
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "19080": {
      "dev": "Index out of range",
      "fn": "EnumerableMap._set",
      "offset": [
        2430,
        2456
      ],
      "op": "INVALID",
      "path": "11"
    },
    "19081": {
      "fn": "EnumerableMap._set",
      "offset": [
        2430,
        2456
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "19082": {
      "fn": "EnumerableMap._set",
      "offset": [
        2430,
        2456
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "19083": {
      "fn": "EnumerableMap._set",
      "offset": [
        2430,
        2456
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "19085": {
      "fn": "EnumerableMap._set",
      "offset": [
        2430,
        2456
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "19086": {
      "fn": "EnumerableMap._set",
      "offset": [
        2430,
        2456
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "19088": {
      "fn": "EnumerableMap._set",
      "offset": [
        2430,
        2456
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "19090": {
      "fn": "EnumerableMap._set",
      "offset": [
        2430,
        2456
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "19091": {
      "fn": "EnumerableMap._set",
      "offset": [
        2430,
        2456
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "19092": {
      "fn": "EnumerableMap._set",
      "offset": [
        2430,
        2456
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "19094": {
      "fn": "EnumerableMap._set",
      "offset": [
        2430,
        2456
      ],
      "op": "MUL",
      "path": "11"
    },
    "19095": {
      "fn": "EnumerableMap._set",
      "offset": [
        2430,
        2456
      ],
      "op": "ADD",
      "path": "11"
    },
    "19096": {
      "fn": "EnumerableMap._set",
      "offset": [
        2430,
        2463
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "19098": {
      "fn": "EnumerableMap._set",
      "offset": [
        2430,
        2463
      ],
      "op": "ADD",
      "path": "11"
    },
    "19099": {
      "fn": "EnumerableMap._set",
      "offset": [
        2430,
        2471
      ],
      "op": "DUP2",
      "path": "11"
    },
    "19100": {
      "fn": "EnumerableMap._set",
      "offset": [
        2430,
        2471
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "19101": {
      "fn": "EnumerableMap._set",
      "offset": [
        2430,
        2471
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "19102": {
      "fn": "EnumerableMap._set",
      "offset": [
        2430,
        2471
      ],
      "op": "POP",
      "path": "11"
    },
    "19103": {
      "fn": "EnumerableMap._set",
      "offset": [
        2492,
        2497
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 203,
      "value": "0x0"
    },
    "19105": {
      "fn": "EnumerableMap._set",
      "offset": [
        2485,
        2497
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "19106": {
      "fn": "EnumerableMap._set",
      "offset": [
        2485,
        2497
      ],
      "op": "POP",
      "path": "11"
    },
    "19107": {
      "fn": "EnumerableMap._set",
      "offset": [
        2485,
        2497
      ],
      "op": "POP",
      "path": "11"
    },
    "19108": {
      "fn": "EnumerableMap._set",
      "offset": [
        2485,
        2497
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1638"
    },
    "19111": {
      "fn": "EnumerableMap._set",
      "offset": [
        2485,
        2497
      ],
      "op": "JUMP",
      "path": "11"
    },
    "19112": {
      "fn": "ERC721._mint",
      "offset": [
        12246,
        12639
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "19113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19117": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "19119": {
      "op": "SHL"
    },
    "19120": {
      "op": "SUB"
    },
    "19121": {
      "fn": "ERC721._mint",
      "offset": [
        12325,
        12341
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 204
    },
    "19122": {
      "branch": 275,
      "fn": "ERC721._mint",
      "offset": [
        12325,
        12341
      ],
      "op": "AND",
      "path": "4"
    },
    "19123": {
      "fn": "ERC721._mint",
      "offset": [
        12317,
        12378
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4B03"
    },
    "19126": {
      "branch": 275,
      "fn": "ERC721._mint",
      "offset": [
        12317,
        12378
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "19127": {
      "fn": "ERC721._mint",
      "offset": [
        12317,
        12378
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "19129": {
      "fn": "ERC721._mint",
      "offset": [
        12317,
        12378
      ],
      "op": "DUP1",
      "path": "4"
    },
    "19130": {
      "fn": "ERC721._mint",
      "offset": [
        12317,
        12378
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "19131": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "19135": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "19137": {
      "op": "SHL"
    },
    "19138": {
      "fn": "ERC721._mint",
      "offset": [
        12317,
        12378
      ],
      "op": "DUP2",
      "path": "4"
    },
    "19139": {
      "fn": "ERC721._mint",
      "offset": [
        12317,
        12378
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "19140": {
      "fn": "ERC721._mint",
      "offset": [
        12317,
        12378
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "19142": {
      "fn": "ERC721._mint",
      "offset": [
        12317,
        12378
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "19144": {
      "fn": "ERC721._mint",
      "offset": [
        12317,
        12378
      ],
      "op": "DUP3",
      "path": "4"
    },
    "19145": {
      "fn": "ERC721._mint",
      "offset": [
        12317,
        12378
      ],
      "op": "ADD",
      "path": "4"
    },
    "19146": {
      "fn": "ERC721._mint",
      "offset": [
        12317,
        12378
      ],
      "op": "DUP2",
      "path": "4"
    },
    "19147": {
      "fn": "ERC721._mint",
      "offset": [
        12317,
        12378
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "19148": {
      "fn": "ERC721._mint",
      "offset": [
        12317,
        12378
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "19149": {
      "fn": "ERC721._mint",
      "offset": [
        12317,
        12378
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "19151": {
      "fn": "ERC721._mint",
      "offset": [
        12317,
        12378
      ],
      "op": "DUP3",
      "path": "4"
    },
    "19152": {
      "fn": "ERC721._mint",
      "offset": [
        12317,
        12378
      ],
      "op": "ADD",
      "path": "4"
    },
    "19153": {
      "fn": "ERC721._mint",
      "offset": [
        12317,
        12378
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "19154": {
      "fn": "ERC721._mint",
      "offset": [
        12317,
        12378
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
    },
    "19187": {
      "fn": "ERC721._mint",
      "offset": [
        12317,
        12378
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x44"
    },
    "19189": {
      "fn": "ERC721._mint",
      "offset": [
        12317,
        12378
      ],
      "op": "DUP3",
      "path": "4"
    },
    "19190": {
      "fn": "ERC721._mint",
      "offset": [
        12317,
        12378
      ],
      "op": "ADD",
      "path": "4"
    },
    "19191": {
      "fn": "ERC721._mint",
      "offset": [
        12317,
        12378
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "19192": {
      "fn": "ERC721._mint",
      "offset": [
        12317,
        12378
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "19193": {
      "fn": "ERC721._mint",
      "offset": [
        12317,
        12378
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "19194": {
      "fn": "ERC721._mint",
      "offset": [
        12317,
        12378
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "19195": {
      "fn": "ERC721._mint",
      "offset": [
        12317,
        12378
      ],
      "op": "DUP2",
      "path": "4"
    },
    "19196": {
      "fn": "ERC721._mint",
      "offset": [
        12317,
        12378
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "19197": {
      "fn": "ERC721._mint",
      "offset": [
        12317,
        12378
      ],
      "op": "SUB",
      "path": "4"
    },
    "19198": {
      "fn": "ERC721._mint",
      "offset": [
        12317,
        12378
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x64"
    },
    "19200": {
      "fn": "ERC721._mint",
      "offset": [
        12317,
        12378
      ],
      "op": "ADD",
      "path": "4"
    },
    "19201": {
      "fn": "ERC721._mint",
      "offset": [
        12317,
        12378
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "19202": {
      "fn": "ERC721._mint",
      "offset": [
        12317,
        12378
      ],
      "op": "REVERT",
      "path": "4"
    },
    "19203": {
      "fn": "ERC721._mint",
      "offset": [
        12317,
        12378
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "19204": {
      "fn": "ERC721._mint",
      "offset": [
        12397,
        12413
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 205,
      "value": "0x4B0C"
    },
    "19207": {
      "fn": "ERC721._mint",
      "offset": [
        12405,
        12412
      ],
      "op": "DUP2",
      "path": "4"
    },
    "19208": {
      "fn": "ERC721._mint",
      "offset": [
        12397,
        12404
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x371F"
    },
    "19211": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        12397,
        12413
      ],
      "op": "JUMP",
      "path": "4"
    },
    "19212": {
      "fn": "ERC721._mint",
      "offset": [
        12397,
        12413
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "19213": {
      "branch": 276,
      "fn": "ERC721._mint",
      "offset": [
        12396,
        12413
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "19214": {
      "fn": "ERC721._mint",
      "offset": [
        12388,
        12446
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4B5E"
    },
    "19217": {
      "branch": 276,
      "fn": "ERC721._mint",
      "offset": [
        12388,
        12446
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "19218": {
      "fn": "ERC721._mint",
      "offset": [
        12388,
        12446
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "19220": {
      "fn": "ERC721._mint",
      "offset": [
        12388,
        12446
      ],
      "op": "DUP1",
      "path": "4"
    },
    "19221": {
      "fn": "ERC721._mint",
      "offset": [
        12388,
        12446
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "19222": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "19226": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "19228": {
      "op": "SHL"
    },
    "19229": {
      "fn": "ERC721._mint",
      "offset": [
        12388,
        12446
      ],
      "op": "DUP2",
      "path": "4"
    },
    "19230": {
      "fn": "ERC721._mint",
      "offset": [
        12388,
        12446
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "19231": {
      "fn": "ERC721._mint",
      "offset": [
        12388,
        12446
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "19233": {
      "fn": "ERC721._mint",
      "offset": [
        12388,
        12446
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "19235": {
      "fn": "ERC721._mint",
      "offset": [
        12388,
        12446
      ],
      "op": "DUP3",
      "path": "4"
    },
    "19236": {
      "fn": "ERC721._mint",
      "offset": [
        12388,
        12446
      ],
      "op": "ADD",
      "path": "4"
    },
    "19237": {
      "fn": "ERC721._mint",
      "offset": [
        12388,
        12446
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "19238": {
      "fn": "ERC721._mint",
      "offset": [
        12388,
        12446
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1C"
    },
    "19240": {
      "fn": "ERC721._mint",
      "offset": [
        12388,
        12446
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x24"
    },
    "19242": {
      "fn": "ERC721._mint",
      "offset": [
        12388,
        12446
      ],
      "op": "DUP3",
      "path": "4"
    },
    "19243": {
      "fn": "ERC721._mint",
      "offset": [
        12388,
        12446
      ],
      "op": "ADD",
      "path": "4"
    },
    "19244": {
      "fn": "ERC721._mint",
      "offset": [
        12388,
        12446
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "19245": {
      "fn": "ERC721._mint",
      "offset": [
        12388,
        12446
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
    },
    "19278": {
      "fn": "ERC721._mint",
      "offset": [
        12388,
        12446
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x44"
    },
    "19280": {
      "fn": "ERC721._mint",
      "offset": [
        12388,
        12446
      ],
      "op": "DUP3",
      "path": "4"
    },
    "19281": {
      "fn": "ERC721._mint",
      "offset": [
        12388,
        12446
      ],
      "op": "ADD",
      "path": "4"
    },
    "19282": {
      "fn": "ERC721._mint",
      "offset": [
        12388,
        12446
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "19283": {
      "fn": "ERC721._mint",
      "offset": [
        12388,
        12446
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "19284": {
      "fn": "ERC721._mint",
      "offset": [
        12388,
        12446
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "19285": {
      "fn": "ERC721._mint",
      "offset": [
        12388,
        12446
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "19286": {
      "fn": "ERC721._mint",
      "offset": [
        12388,
        12446
      ],
      "op": "DUP2",
      "path": "4"
    },
    "19287": {
      "fn": "ERC721._mint",
      "offset": [
        12388,
        12446
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "19288": {
      "fn": "ERC721._mint",
      "offset": [
        12388,
        12446
      ],
      "op": "SUB",
      "path": "4"
    },
    "19289": {
      "fn": "ERC721._mint",
      "offset": [
        12388,
        12446
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x64"
    },
    "19291": {
      "fn": "ERC721._mint",
      "offset": [
        12388,
        12446
      ],
      "op": "ADD",
      "path": "4"
    },
    "19292": {
      "fn": "ERC721._mint",
      "offset": [
        12388,
        12446
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "19293": {
      "fn": "ERC721._mint",
      "offset": [
        12388,
        12446
      ],
      "op": "REVERT",
      "path": "4"
    },
    "19294": {
      "fn": "ERC721._mint",
      "offset": [
        12388,
        12446
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "19295": {
      "fn": "ERC721._mint",
      "offset": [
        12457,
        12502
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 206,
      "value": "0x4B6A"
    },
    "19298": {
      "fn": "ERC721._mint",
      "offset": [
        12486,
        12487
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "19300": {
      "fn": "ERC721._mint",
      "offset": [
        12490,
        12492
      ],
      "op": "DUP4",
      "path": "4"
    },
    "19301": {
      "fn": "ERC721._mint",
      "offset": [
        12494,
        12501
      ],
      "op": "DUP4",
      "path": "4"
    },
    "19302": {
      "fn": "ERC721._mint",
      "offset": [
        12457,
        12477
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x149C"
    },
    "19305": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        12457,
        12502
      ],
      "op": "JUMP",
      "path": "4"
    },
    "19306": {
      "fn": "ERC721._mint",
      "offset": [
        12457,
        12502
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "19307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19311": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "19313": {
      "op": "SHL"
    },
    "19314": {
      "op": "SUB"
    },
    "19315": {
      "fn": "ERC721._mint",
      "offset": [
        12513,
        12530
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 207
    },
    "19316": {
      "fn": "ERC721._mint",
      "offset": [
        12513,
        12530
      ],
      "op": "AND",
      "path": "4"
    },
    "19317": {
      "fn": "ERC721._mint",
      "offset": [
        12513,
        12530
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "19319": {
      "fn": "ERC721._mint",
      "offset": [
        12513,
        12530
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "19320": {
      "fn": "ERC721._mint",
      "offset": [
        12513,
        12530
      ],
      "op": "DUP2",
      "path": "4"
    },
    "19321": {
      "fn": "ERC721._mint",
      "offset": [
        12513,
        12530
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "19322": {
      "fn": "ERC721._mint",
      "offset": [
        12513,
        12526
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "19324": {
      "fn": "ERC721._mint",
      "offset": [
        12513,
        12530
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "19326": {
      "fn": "ERC721._mint",
      "offset": [
        12513,
        12530
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "19327": {
      "fn": "ERC721._mint",
      "offset": [
        12513,
        12530
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "19329": {
      "fn": "ERC721._mint",
      "offset": [
        12513,
        12530
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "19330": {
      "fn": "ERC721._mint",
      "offset": [
        12513,
        12530
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "19331": {
      "fn": "ERC721._mint",
      "offset": [
        12513,
        12543
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4B8C"
    },
    "19334": {
      "fn": "ERC721._mint",
      "offset": [
        12513,
        12543
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "19335": {
      "fn": "ERC721._mint",
      "offset": [
        12535,
        12542
      ],
      "op": "DUP3",
      "path": "4"
    },
    "19336": {
      "fn": "ERC721._mint",
      "offset": [
        12513,
        12534
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x433F"
    },
    "19339": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        12513,
        12543
      ],
      "op": "JUMP",
      "path": "4"
    },
    "19340": {
      "fn": "ERC721._mint",
      "offset": [
        12513,
        12543
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "19341": {
      "op": "POP"
    },
    "19342": {
      "fn": "ERC721._mint",
      "offset": [
        12554,
        12583
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 208,
      "value": "0x4B99"
    },
    "19345": {
      "fn": "ERC721._mint",
      "offset": [
        12554,
        12566
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "19347": {
      "fn": "ERC721._mint",
      "offset": [
        12571,
        12578
      ],
      "op": "DUP3",
      "path": "4"
    },
    "19348": {
      "fn": "ERC721._mint",
      "offset": [
        12580,
        12582
      ],
      "op": "DUP5",
      "path": "4"
    },
    "19349": {
      "fn": "ERC721._mint",
      "offset": [
        12554,
        12570
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x434B"
    },
    "19352": {
      "fn": "ERC721._mint",
      "jump": "i",
      "offset": [
        12554,
        12583
      ],
      "op": "JUMP",
      "path": "4"
    },
    "19353": {
      "fn": "ERC721._mint",
      "offset": [
        12554,
        12583
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "19354": {
      "op": "POP"
    },
    "19355": {
      "fn": "ERC721._mint",
      "offset": [
        12599,
        12632
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 209,
      "value": "0x40"
    },
    "19357": {
      "fn": "ERC721._mint",
      "offset": [
        12599,
        12632
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "19358": {
      "fn": "ERC721._mint",
      "offset": [
        12624,
        12631
      ],
      "op": "DUP2",
      "path": "4"
    },
    "19359": {
      "fn": "ERC721._mint",
      "offset": [
        12624,
        12631
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "19360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19364": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "19366": {
      "op": "SHL"
    },
    "19367": {
      "op": "SUB"
    },
    "19368": {
      "fn": "ERC721._mint",
      "offset": [
        12599,
        12632
      ],
      "op": "DUP5",
      "path": "4"
    },
    "19369": {
      "fn": "ERC721._mint",
      "offset": [
        12599,
        12632
      ],
      "op": "AND",
      "path": "4"
    },
    "19370": {
      "fn": "ERC721._mint",
      "offset": [
        12599,
        12632
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "19371": {
      "fn": "ERC721._mint",
      "offset": [
        12616,
        12617
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "19373": {
      "fn": "ERC721._mint",
      "offset": [
        12616,
        12617
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "19374": {
      "fn": "ERC721._mint",
      "offset": [
        12599,
        12632
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "19407": {
      "fn": "ERC721._mint",
      "offset": [
        12599,
        12632
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "19408": {
      "fn": "ERC721._mint",
      "offset": [
        12616,
        12617
      ],
      "op": "DUP3",
      "path": "4"
    },
    "19409": {
      "fn": "ERC721._mint",
      "offset": [
        12616,
        12617
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "19410": {
      "fn": "ERC721._mint",
      "offset": [
        12599,
        12632
      ],
      "op": "LOG4",
      "path": "4"
    },
    "19411": {
      "fn": "ERC721._mint",
      "offset": [
        12246,
        12639
      ],
      "op": "POP",
      "path": "4"
    },
    "19412": {
      "fn": "ERC721._mint",
      "offset": [
        12246,
        12639
      ],
      "op": "POP",
      "path": "4"
    },
    "19413": {
      "fn": "ERC721._mint",
      "jump": "o",
      "offset": [
        12246,
        12639
      ],
      "op": "JUMP",
      "path": "4"
    },
    "19414": {
      "fn": "Address.isContract",
      "offset": [
        726,
        1139
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "19415": {
      "fn": "Address.isContract",
      "offset": [
        1086,
        1106
      ],
      "op": "EXTCODESIZE",
      "path": "9"
    },
    "19416": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "ISZERO",
      "path": "9",
      "statement": 210
    },
    "19417": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "19418": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "19419": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        726,
        1139
      ],
      "op": "JUMP",
      "path": "9"
    },
    "19420": {
      "fn": "Address.functionCall",
      "offset": [
        3581,
        3774
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "19421": {
      "fn": "Address.functionCall",
      "offset": [
        3684,
        3696
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x60"
    },
    "19423": {
      "fn": "Address.functionCall",
      "offset": [
        3715,
        3767
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 211,
      "value": "0x383A"
    },
    "19426": {
      "fn": "Address.functionCall",
      "offset": [
        3737,
        3743
      ],
      "op": "DUP5",
      "path": "9"
    },
    "19427": {
      "fn": "Address.functionCall",
      "offset": [
        3745,
        3749
      ],
      "op": "DUP5",
      "path": "9"
    },
    "19428": {
      "fn": "Address.functionCall",
      "offset": [
        3751,
        3752
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "19430": {
      "fn": "Address.functionCall",
      "offset": [
        3754,
        3766
      ],
      "op": "DUP6",
      "path": "9"
    },
    "19431": {
      "fn": "Address.functionCall",
      "offset": [
        3684,
        3696
      ],
      "op": "DUP6",
      "path": "9"
    },
    "19432": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4858,
        4876
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 212,
      "value": "0x4BF0"
    },
    "19435": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4869,
        4875
      ],
      "op": "DUP6",
      "path": "9"
    },
    "19436": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4858,
        4868
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4BD6"
    },
    "19439": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        4858,
        4876
      ],
      "op": "JUMP",
      "path": "9"
    },
    "19440": {
      "branch": 254,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4858,
        4876
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "19441": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4C41"
    },
    "19444": {
      "branch": 254,
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "19445": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "19447": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP1",
      "path": "9"
    },
    "19448": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "19449": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "19453": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "19455": {
      "op": "SHL"
    },
    "19456": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP2",
      "path": "9"
    },
    "19457": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "19458": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "19460": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "19462": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP3",
      "path": "9"
    },
    "19463": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "ADD",
      "path": "9"
    },
    "19464": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "19465": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1D"
    },
    "19467": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "19469": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP3",
      "path": "9"
    },
    "19470": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "ADD",
      "path": "9"
    },
    "19471": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "19472": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "19505": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "19507": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP3",
      "path": "9"
    },
    "19508": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "ADD",
      "path": "9"
    },
    "19509": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "19510": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "19511": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "19512": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "19513": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "DUP2",
      "path": "9"
    },
    "19514": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "19515": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "SUB",
      "path": "9"
    },
    "19516": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x64"
    },
    "19518": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "ADD",
      "path": "9"
    },
    "19519": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "19520": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "REVERT",
      "path": "9"
    },
    "19521": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4850,
        4910
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "19522": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4981,
        4993
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "19524": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4995,
        5018
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x60"
    },
    "19526": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5028
      ],
      "op": "DUP7",
      "path": "9"
    },
    "19527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19531": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "19533": {
      "op": "SHL"
    },
    "19534": {
      "op": "SUB"
    },
    "19535": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5033
      ],
      "op": "AND",
      "path": "9"
    },
    "19536": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5042,
        5047
      ],
      "op": "DUP6",
      "path": "9"
    },
    "19537": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5050,
        5054
      ],
      "op": "DUP8",
      "path": "9"
    },
    "19538": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "19540": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "19541": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "9"
    },
    "19542": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "9"
    },
    "19543": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "9"
    },
    "19544": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "19545": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "19546": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "19548": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "9"
    },
    "19549": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "19550": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "9"
    },
    "19551": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP4",
      "path": "9"
    },
    "19552": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP4",
      "path": "9"
    },
    "19553": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "19554": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "19556": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP4",
      "path": "9"
    },
    "19557": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "LT",
      "path": "9"
    },
    "19558": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4C80"
    },
    "19561": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "19562": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "9"
    },
    "19563": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "19564": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "9"
    },
    "19565": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "19566": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "19568": {
      "op": "NOT"
    },
    "19569": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "19570": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "19571": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "9"
    },
    "19572": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "19573": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "19575": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "19576": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "9"
    },
    "19577": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "9"
    },
    "19578": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "19579": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "9"
    },
    "19580": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4C61"
    },
    "19583": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMP",
      "path": "9"
    },
    "19584": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "19585": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1"
    },
    "19587": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP4",
      "path": "9"
    },
    "19588": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "19590": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SUB",
      "path": "9"
    },
    "19591": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x100"
    },
    "19594": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "EXP",
      "path": "9"
    },
    "19595": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SUB",
      "path": "9"
    },
    "19596": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "9"
    },
    "19597": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "NOT",
      "path": "9"
    },
    "19598": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "9"
    },
    "19599": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "19600": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "AND",
      "path": "9"
    },
    "19601": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP2",
      "path": "9"
    },
    "19602": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP5",
      "path": "9"
    },
    "19603": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "19604": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "AND",
      "path": "9"
    },
    "19605": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "9"
    },
    "19606": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "9"
    },
    "19607": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "OR",
      "path": "9"
    },
    "19608": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP6",
      "path": "9"
    },
    "19609": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "19610": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "9"
    },
    "19611": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "9"
    },
    "19612": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "9"
    },
    "19613": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "9"
    },
    "19614": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "9"
    },
    "19615": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "9"
    },
    "19616": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "19617": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "9"
    },
    "19618": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "9"
    },
    "19619": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "19620": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "9"
    },
    "19621": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "9"
    },
    "19622": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "19624": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "19626": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "19627": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "9"
    },
    "19628": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP4",
      "path": "9"
    },
    "19629": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SUB",
      "path": "9"
    },
    "19630": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP2",
      "path": "9"
    },
    "19631": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP6",
      "path": "9"
    },
    "19632": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP8",
      "path": "9"
    },
    "19633": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "GAS",
      "path": "9"
    },
    "19634": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "CALL",
      "path": "9"
    },
    "19635": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "19636": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "9"
    },
    "19637": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "9"
    },
    "19638": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "9"
    },
    "19639": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "19640": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP1",
      "path": "9"
    },
    "19641": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "19643": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP2",
      "path": "9"
    },
    "19644": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "EQ",
      "path": "9"
    },
    "19645": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4CE2"
    },
    "19648": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "19649": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "19651": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "19652": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "19653": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "9"
    },
    "19654": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x1F"
    },
    "19656": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "NOT",
      "path": "9"
    },
    "19657": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x3F"
    },
    "19659": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "19660": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "9"
    },
    "19661": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "AND",
      "path": "9"
    },
    "19662": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "9"
    },
    "19663": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "9"
    },
    "19664": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "19666": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "19667": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "19668": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP3",
      "path": "9"
    },
    "19669": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "19670": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATASIZE",
      "path": "9"
    },
    "19671": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "19673": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "19675": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "DUP5",
      "path": "9"
    },
    "19676": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "ADD",
      "path": "9"
    },
    "19677": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "RETURNDATACOPY",
      "path": "9"
    },
    "19678": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4CE7"
    },
    "19681": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMP",
      "path": "9"
    },
    "19682": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "19683": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x60"
    },
    "19685": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "19686": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "9"
    },
    "19687": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "19688": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5022,
        5055
      ],
      "op": "POP",
      "path": "9"
    },
    "19689": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4980,
        5055
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "19690": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4980,
        5055
      ],
      "op": "POP",
      "path": "9"
    },
    "19691": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4980,
        5055
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "19692": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4980,
        5055
      ],
      "op": "POP",
      "path": "9"
    },
    "19693": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5072,
        5124
      ],
      "op": "PUSH2",
      "path": "9",
      "statement": 213,
      "value": "0x4CF7"
    },
    "19696": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5090,
        5097
      ],
      "op": "DUP3",
      "path": "9"
    },
    "19697": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5099,
        5109
      ],
      "op": "DUP3",
      "path": "9"
    },
    "19698": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5111,
        5123
      ],
      "op": "DUP7",
      "path": "9"
    },
    "19699": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5072,
        5089
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4D02"
    },
    "19702": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5072,
        5124
      ],
      "op": "JUMP",
      "path": "9"
    },
    "19703": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5072,
        5124
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "19704": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5065,
        5124
      ],
      "op": "SWAP8",
      "path": "9"
    },
    "19705": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4608,
        5131
      ],
      "op": "SWAP7",
      "path": "9"
    },
    "19706": {
      "op": "POP"
    },
    "19707": {
      "op": "POP"
    },
    "19708": {
      "op": "POP"
    },
    "19709": {
      "op": "POP"
    },
    "19710": {
      "op": "POP"
    },
    "19711": {
      "op": "POP"
    },
    "19712": {
      "op": "POP"
    },
    "19713": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4608,
        5131
      ],
      "op": "JUMP",
      "path": "9"
    },
    "19714": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7091,
        7816
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "19715": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7206,
        7218
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x60"
    },
    "19717": {
      "branch": 255,
      "fn": "Address._verifyCallResult",
      "offset": [
        7234,
        7241
      ],
      "op": "DUP4",
      "path": "9"
    },
    "19718": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7230,
        7810
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "19719": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7230,
        7810
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4D11"
    },
    "19722": {
      "branch": 255,
      "fn": "Address._verifyCallResult",
      "offset": [
        7230,
        7810
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "19723": {
      "op": "POP"
    },
    "19724": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7264,
        7274
      ],
      "op": "DUP2",
      "path": "9",
      "statement": 214
    },
    "19725": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7257,
        7274
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1638"
    },
    "19728": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7257,
        7274
      ],
      "op": "JUMP",
      "path": "9"
    },
    "19729": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7230,
        7810
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "19730": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7375,
        7392
      ],
      "op": "DUP3",
      "path": "9"
    },
    "19731": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7375,
        7392
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "19732": {
      "branch": 256,
      "fn": "Address._verifyCallResult",
      "offset": [
        7375,
        7396
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "19733": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7371,
        7800
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4D21"
    },
    "19736": {
      "branch": 256,
      "fn": "Address._verifyCallResult",
      "offset": [
        7371,
        7800
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "19737": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7633,
        7643
      ],
      "op": "DUP3",
      "path": "9"
    },
    "19738": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7627,
        7644
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "19739": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7693,
        7708
      ],
      "op": "DUP1",
      "path": "9"
    },
    "19740": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7680,
        7690
      ],
      "op": "DUP5",
      "path": "9"
    },
    "19741": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7676,
        7678
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "19743": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7672,
        7691
      ],
      "op": "ADD",
      "path": "9"
    },
    "19744": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7665,
        7709
      ],
      "op": "REVERT",
      "path": "9"
    },
    "19745": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7582,
        7727
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "19746": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 215,
      "value": "0x40"
    },
    "19748": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "19749": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "19753": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "19755": {
      "op": "SHL"
    },
    "19756": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "9"
    },
    "19757": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "19758": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "19760": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "19762": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP3",
      "path": "9"
    },
    "19763": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "9"
    },
    "19764": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "9"
    },
    "19765": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "9"
    },
    "19766": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "19767": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP5",
      "path": "9"
    },
    "19768": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "19769": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "19771": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP5",
      "path": "9"
    },
    "19772": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "9"
    },
    "19773": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "19774": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP5",
      "path": "9"
    },
    "19775": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "19776": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7772,
        7784
      ],
      "op": "DUP6",
      "path": "9"
    },
    "19777": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7772,
        7784
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "19778": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "19779": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "19780": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "9"
    },
    "19781": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "19782": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x44"
    },
    "19784": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "9"
    },
    "19785": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "19786": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "19787": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP6",
      "path": "9"
    },
    "19788": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "9"
    },
    "19789": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "19790": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "9"
    },
    "19791": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "9"
    },
    "19792": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "9"
    },
    "19793": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "19795": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "9"
    },
    "19796": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "19797": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x4594"
    },
    "19800": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "19801": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "9"
    },
    "19802": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "9"
    },
    "19803": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "9"
    },
    "19804": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "19805": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "9"
    },
    "19806": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP3",
      "path": "9"
    },
    "19807": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "9"
    },
    "19808": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "19809": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "19811": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "9"
    },
    "19812": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x457C"
    },
    "19815": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMP",
      "path": "9"
    },
    "19816": {
      "op": "JUMPDEST"
    },
    "19817": {
      "op": "DUP3"
    },
    "19818": {
      "op": "DUP1"
    },
    "19819": {
      "op": "SLOAD"
    },
    "19820": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19822": {
      "op": "DUP2"
    },
    "19823": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19825": {
      "op": "AND"
    },
    "19826": {
      "op": "ISZERO"
    },
    "19827": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "19830": {
      "op": "MUL"
    },
    "19831": {
      "op": "SUB"
    },
    "19832": {
      "op": "AND"
    },
    "19833": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "19835": {
      "op": "SWAP1"
    },
    "19836": {
      "op": "DIV"
    },
    "19837": {
      "op": "SWAP1"
    },
    "19838": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19840": {
      "op": "MSTORE"
    },
    "19841": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19843": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19845": {
      "op": "KECCAK256"
    },
    "19846": {
      "op": "SWAP1"
    },
    "19847": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "19849": {
      "op": "ADD"
    },
    "19850": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19852": {
      "op": "SWAP1"
    },
    "19853": {
      "op": "DIV"
    },
    "19854": {
      "op": "DUP2"
    },
    "19855": {
      "op": "ADD"
    },
    "19856": {
      "op": "SWAP3"
    },
    "19857": {
      "op": "DUP3"
    },
    "19858": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "19860": {
      "op": "LT"
    },
    "19861": {
      "op": "PUSH2",
      "value": "0x4DA9"
    },
    "19864": {
      "op": "JUMPI"
    },
    "19865": {
      "op": "DUP1"
    },
    "19866": {
      "op": "MLOAD"
    },
    "19867": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "19869": {
      "op": "NOT"
    },
    "19870": {
      "op": "AND"
    },
    "19871": {
      "op": "DUP4"
    },
    "19872": {
      "op": "DUP1"
    },
    "19873": {
      "op": "ADD"
    },
    "19874": {
      "op": "OR"
    },
    "19875": {
      "op": "DUP6"
    },
    "19876": {
      "op": "SSTORE"
    },
    "19877": {
      "op": "PUSH2",
      "value": "0x4DD6"
    },
    "19880": {
      "op": "JUMP"
    },
    "19881": {
      "op": "JUMPDEST"
    },
    "19882": {
      "op": "DUP3"
    },
    "19883": {
      "op": "DUP1"
    },
    "19884": {
      "op": "ADD"
    },
    "19885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19887": {
      "op": "ADD"
    },
    "19888": {
      "op": "DUP6"
    },
    "19889": {
      "op": "SSTORE"
    },
    "19890": {
      "op": "DUP3"
    },
    "19891": {
      "op": "ISZERO"
    },
    "19892": {
      "op": "PUSH2",
      "value": "0x4DD6"
    },
    "19895": {
      "op": "JUMPI"
    },
    "19896": {
      "op": "SWAP2"
    },
    "19897": {
      "op": "DUP3"
    },
    "19898": {
      "op": "ADD"
    },
    "19899": {
      "op": "JUMPDEST"
    },
    "19900": {
      "op": "DUP3"
    },
    "19901": {
      "op": "DUP2"
    },
    "19902": {
      "op": "GT"
    },
    "19903": {
      "op": "ISZERO"
    },
    "19904": {
      "op": "PUSH2",
      "value": "0x4DD6"
    },
    "19907": {
      "op": "JUMPI"
    },
    "19908": {
      "op": "DUP3"
    },
    "19909": {
      "op": "MLOAD"
    },
    "19910": {
      "op": "DUP3"
    },
    "19911": {
      "op": "SSTORE"
    },
    "19912": {
      "op": "SWAP2"
    },
    "19913": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "19915": {
      "op": "ADD"
    },
    "19916": {
      "op": "SWAP2"
    },
    "19917": {
      "op": "SWAP1"
    },
    "19918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19920": {
      "op": "ADD"
    },
    "19921": {
      "op": "SWAP1"
    },
    "19922": {
      "op": "PUSH2",
      "value": "0x4DBB"
    },
    "19925": {
      "op": "JUMP"
    },
    "19926": {
      "op": "JUMPDEST"
    },
    "19927": {
      "op": "POP"
    },
    "19928": {
      "op": "PUSH2",
      "value": "0x4DE2"
    },
    "19931": {
      "op": "SWAP3"
    },
    "19932": {
      "op": "SWAP2"
    },
    "19933": {
      "op": "POP"
    },
    "19934": {
      "op": "PUSH2",
      "value": "0x4DE6"
    },
    "19937": {
      "op": "JUMP"
    },
    "19938": {
      "op": "JUMPDEST"
    },
    "19939": {
      "op": "POP"
    },
    "19940": {
      "op": "SWAP1"
    },
    "19941": {
      "op": "JUMP"
    },
    "19942": {
      "op": "JUMPDEST"
    },
    "19943": {
      "op": "JUMPDEST"
    },
    "19944": {
      "op": "DUP1"
    },
    "19945": {
      "op": "DUP3"
    },
    "19946": {
      "op": "GT"
    },
    "19947": {
      "op": "ISZERO"
    },
    "19948": {
      "op": "PUSH2",
      "value": "0x4DE2"
    },
    "19951": {
      "op": "JUMPI"
    },
    "19952": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "19954": {
      "op": "DUP2"
    },
    "19955": {
      "op": "SSTORE"
    },
    "19956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "19958": {
      "op": "ADD"
    },
    "19959": {
      "op": "PUSH2",
      "value": "0x4DE7"
    },
    "19962": {
      "op": "JUMP"
    }
  },
  "sha1": "f47d3c177206e89a0f9f81e1271528a12968d667",
  "source": "pragma solidity ^0.6.12;\n//pragma solidity >= 0.4.22 <0.9.0;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@chainlink/contracts/src/v0.6/VRFConsumerBase.sol\";\nimport \"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\";\nimport \"contracts/helpers/console.sol\";\nimport \"@chainlink/contracts/src/v0.6/interfaces/KeeperCompatibleInterface.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n//import \"@openzeppelin/contracts/Base64.sol\";\nimport \"contracts/helpers/Base64.sol\";\nimport \"interfaces/IUniswapV2Router02.sol\";\nimport \"interfaces/IUniswapV2Pair.sol\";\nimport \"interfaces/IUniswapV2Factory.sol\";\nimport \"interfaces/IERC20.sol\";\n\n\n// Objectives:\n// X //    Mint a token that will purchase dip when BNB goes down to some value\n// X //    Look up best way to sort? on blockchain--algorithm efficiency\n// X //    Purchase stablecoin\n//    Loan stablecoin\n//    Redeem stablecoin\n// X //    Purchase BNB\n// X //    Upgrade NFT to new graphic\n//    Stake NFT to earn time-limited rewards\n\n\nlibrary UniswapHelpers {\n\n    function _swapExactTokensForETH(uint256 tokenAmount, address tokenContractAddress, address to, IUniswapV2Router02 _router, uint256 _swapSlippage) internal  returns (uint256, uint256){\n\n        address[] memory path = new address[](2);\n        path[0] = tokenContractAddress; //address(0x3B00Ef435fA4FcFF5C209a37d1f3dcff37c705aD); // USDT Rinkeby\n        path[1] = _router.WETH();\n\n//        uint256 minTokensToReceive; // Local scope for many variables\n//        {\n//            IUniswapV2Factory _UFactory = IUniswapV2Factory(_router.factory());\n//            address _tokenPair = _UFactory.getPair(_router.WETH(), tokenContractAddress);\n//            (uint256 Res0, uint256 Res1,) = IUniswapV2Pair(_tokenPair).getReserves();\n//            require(Res1!=0, \"No tokens in Res1\");\n//            uint256 ETHPricePerBabyDoge =  (10**18)*Res1/Res0;\n//            require(ETHPricePerBabyDoge!=0, \"ETHPricePerBabyDoge equals zero.\"); // why? Not dividing by zero anyore\n//            minTokensToReceive = tokenAmount * (10000 - _swapSlippage);\n//            minTokensToReceive = minTokensToReceive * ETHPricePerBabyDoge;\n//            minTokensToReceive = minTokensToReceive / 10**18  / 10000; // ETH TO RECEIVE\n//        }\n\n//         for Pancakeswap\n        uint256 minTokensToReceive; // Local scope for many variables\n        {\n            uint256 receivable = _router.getAmountsOut(tokenAmount, path)[0];\n            minTokensToReceive = receivable * (10000 - _swapSlippage)/10000;\n        }\n\n        uint256[] memory amounts = _router.swapExactTokensForETH(\n            tokenAmount,\n            minTokensToReceive, // set _swapSlippage to 10000 to accept anything\n            path,\n            to,\n            block.timestamp\n        );\n\n        require(amounts[0] != 0 && 0 != amounts[1], \"swapExactETH failed.\");\n        return (amounts[0], amounts[1]);\n    }\n\n    function _addLiquidity(uint256 tokenAmount, address contractAddress, IUniswapV2Router02 _router, uint256 coinAmount) internal returns(uint256) {\n        (uint amountToken,,) =  _router.addLiquidityETH{value: coinAmount}(\n            address(this),\n            tokenAmount,\n            0, // slippage is unavoidable\n            0, // slippage is unavoidable\n            contractAddress,\n            block.timestamp\n        );\n\n        return amountToken;\n    }\n\n    function _swapEthForTokens(uint256 ethAmount, address tokenContractAddress, address to, IUniswapV2Router02 _router, uint256 _swapSlippage) internal returns (uint256, uint256) {\n        address[] memory path = new address[](2);\n        path[0] = _router.WETH();\n        path[1] = tokenContractAddress; //address(0x3B00Ef435fA4FcFF5C209a37d1f3dcff37c705aD); // USDT Rinkeby\n\n        // For Ethereum\n//        uint256 minTokensToReceive;\n//        {\n//            IUniswapV2Factory _UFactory = IUniswapV2Factory(_router.factory());\n//            address _tokenPair = _UFactory.getPair(_router.WETH(), tokenContractAddress);\n//            (uint256 Res0, uint256 Res1,) = IUniswapV2Pair(_tokenPair).getReserves(); // baby doge is Res0\n//            require(Res0 !=0, \"No tokens in Res0\");\n//            uint256 tokensPerETH =  ((10**18)*Res0)/Res1; // For 10**18\n//            require(tokensPerETH!=0, \"tokensPerETH equals zero.\");\n//            minTokensToReceive = ethAmount * (10000 - _swapSlippage) * tokensPerETH;\n//            minTokensToReceive = minTokensToReceive / (10**18) / 10000;\n//            minTokensToReceive = minTokensToReceive / (10**18) / 10000;\n//        }\n\n        // for Pancakeswap\n        uint256 minTokensToReceive; // Local scope for many variables\n        {\n//            IUniswapV2Factory _UFactory = IUniswapV2Factory(_router.factory());\n//            address _tokenPair = _UFactory.getPair(_router.WETH(), tokenContractAddress);\n            uint256 receivable = _router.getAmountsOut(ethAmount, path)[0];\n            minTokensToReceive = receivable * (10000 - _swapSlippage)/10000;\n        }\n\n        // todo: For whatever reason, this is not working correctly when using pancakeswap\n        uint256[] memory amounts = _router.swapExactETHForTokens{value: ethAmount}( // ethAmount, path, to, block.timestamp ){ //ExactTokensForETHSupportingFeeOnTransferTokens(\n            minTokensToReceive,\n            path,\n            to,\n            block.timestamp + 360 // 30 minutes before reverting\n        );\n\n        require(amounts[0] != 0 && 0 != amounts[1], \"swapExactETH failed.\");\n        return (amounts[0], amounts[1]);\n    }\n}\n\n// Address: 0x26EA744E5B887E5205727f55dFBE8685e3b21951 // Same for BSC, Polygon, ETH\ninterface IyUSDC {\n    function withdraw(uint256 _shares) external;\n    function deposit(uint256 _amount) external;\n\n    function balance() external view returns (uint256);\n    function balanceDydx() external view returns (uint256);\n    function balanceCompound() external view returns (uint256);\n    function balanceCompoundInToken() external view returns (uint256);\n    function balanceFulcrumInToken() external view returns (uint256);\n    function balanceFulcrum() external view returns (uint256);\n    function balanceAave() external view returns (uint256);\n    function recommend() external view returns (uint256);\n    function rebalance() external;\n    function calcPoolValueInToken() external view returns (uint256);\n    function getPricePerFullShare() external view returns (uint256);\n    function balanceOf(address _address) external view returns(uint);\n\n}\n\n/// @dev Note: the ERC-165 identifier for this interface is 0x150b7a02.\ninterface ERC721TokenReceiver {\n    /// @notice Handle the receipt of an NFT\n    /// @dev The ERC721 smart contract calls this function on the recipient\n    ///  after a `transfer`. This function MAY throw to revert and reject the\n    ///  transfer. Return of other than the magic value MUST result in the\n    ///  transaction being reverted.\n    ///  Note: the contract address is always the message sender.\n    /// @param _operator The address which called `safeTransferFrom` function\n    /// @param _from The address which previously owned the token\n    /// @param _tokenId The NFT identifier which is being transferred\n    /// @param _data Additional data with no specified format\n    /// @return `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`\n    ///  unless throwing\n    function onERC721Received(address _operator, address _from, uint256 _tokenId, bytes memory _data) external returns(bytes4);\n}\n\ncontract DipStaking is Ownable, ERC721TokenReceiver  {\n    BuyTheDipNFT public BTD;\n    mapping(uint256=>address) public previousOwner;\n    mapping(uint256=>uint256) public stakeStartTimestamp; // we went to disencentivize people who game the system? Maybe don' need to worry\n    mapping(uint256=>uint256) public moneys; // we went to disencentivize people who game the system? Maybe don' need to worry\n    uint256 public moneysReceived;\n    uint256[] public activeNFTArray;\n    uint256 public reservedFundsForStakers=0;\n    uint256 public reservedFundsForOwners=0;\n\n    uint256 MINSTAKINGTIME = 60*60*24*7; // 1 week\n\n    constructor(address _BuyTheDipNFTAddress) public {\n        // set _BuyTheDipNFTAddress\n        BTD = BuyTheDipNFT(payable(_BuyTheDipNFTAddress));\n    }\n\n    /** @dev Unpacks 3 uints into 1 uint to (256) -> (128, 64, 64)\n        @param _userDeposit -- 256 bit encoding of deposit, blockDepositAmount, and blockDeposited\n      */\n    function unpackData(uint256 _userDeposit) internal pure returns (uint256, uint256, uint256){\n        uint256 _deposit = uint256(uint128(_userDeposit));\n        uint256 _blockDepositAmount = uint256(uint64(_userDeposit >> 128));\n        uint256 _blockDeposited = uint256(uint64(_userDeposit >> 192));\n        return (_deposit, _blockDepositAmount, _blockDeposited);\n    }\n\n    /** @dev Packs 3 uints into 1 uint to save space (128, 64, 64) -> 256\n        @param _deposit -- total deposit, uint128\n        @param _blockDepositAmount -- amount deposited in this block, uint64\n        @param _blockDeposited -- block.timestamp, uint64\n      */\n    function packData(uint256 _deposit, uint256 _blockDepositAmount, uint256 _blockDeposited) internal pure returns (uint256){\n        uint256 ret = _deposit;\n        ret |= _blockDepositAmount << 128;\n        ret |= _blockDeposited << 192;\n        return ret;\n    }\n\n\n    receive() external payable{\n      // when receiving ETH, split it equally among all stakers and founders/owners\n      // create clever way to not spend a lot of gas\n\n    }\n\n    /** @dev Adds up all active energy contributed by stakers\n      */\n    function getTotalStakingEnergy() public view returns(uint256) {\n        // Make sure everyone is flushed.\n        uint256 _total = 0;\n        for(uint256 i = 0; i < activeNFTArray.length; i++){ // is activeNFTArray.length dynamic here?\n            uint256 _id = activeNFTArray[i];\n            if(BTD.tokenIdToEnergy(_id) + stakeStartTimestamp[_id] > block.timestamp){\n                _total += block.timestamp - stakeStartTimestamp[_id];\n            }\n            else {\n                _total += BTD.tokenIdToEnergy(_id);\n            }\n        }\n        return _total == 0 ? 1: _total;\n    }\n\n    /** @dev Remove NFT from staking pool\n        @param _id -- id of NFT. Must be previous owner to call\n      */\n    function unstake(uint256 _id) external {\n        require(msg.sender == previousOwner[_id], \"Not owner.\");\n        require(stakeStartTimestamp[_id] + MINSTAKINGTIME > block.timestamp, \"Minimum staking period not met.\");\n\n        withdrawRewards(_id);\n        BTD.approve(previousOwner[_id], _id); // todo -- necessary?\n        BTD.safeTransferFrom(address(this), previousOwner[_id], _id, \"\");\n\n        // Remove from array\n        for (uint256 i=0; i< activeNFTArray.length; i++) {\n            if(activeNFTArray[i]==_id){\n                activeNFTArray[i] = activeNFTArray[activeNFTArray.length - 1];\n                activeNFTArray.pop();\n                break;\n            }\n        }\n\n        // delete information to save space\n        delete previousOwner[_id];\n        delete stakeStartTimestamp[_id];\n        delete moneys[_id];\n    }\n\n    /** @dev Withdraw native coin, which has been earned as a reward.\n        @param _id -- id of NFT. Must be previous owner to call\n      */\n    function withdrawRewards(uint256 _id) public {\n        require(msg.sender == previousOwner[_id], \"Not owner.\");\n        flushTokenRewardsOf(_id);\n        reservedFundsForStakers -= moneys[_id];\n        uint256 _reward = moneys[_id];\n        moneys[_id] = 0;\n        (bool success, ) = address(previousOwner[_id]).call{value : _reward}(\"Releasing rewards to NFT owner.\");\n        require(success, \"Transfer failed.\");\n    }\n\n    /** @dev Withdraw native coined, earned as reward, and set asid for owners/wallet\n      */\n    function withdrawRewardsForOwners() external {\n        require(msg.sender == owner(), \"Not owner.\");\n        uint256 _reward = reservedFundsForOwners;\n        reservedFundsForOwners = 0;\n        (bool success, ) = owner().call{value : _reward}(\"Releasing rewards to owner.\");\n        require(success, \"Transfer failed.\");\n    }\n\n    /** @dev Returns amount of staking funds available, total minus reserved for specific stakers who have been removed from active staking and from owners\n      */\n    function getAvailableStakingFunds() public view returns(uint256){\n        return (address(this).balance - reservedFundsForStakers - reservedFundsForOwners);\n    }\n\n    // todo--combine with flushInactive\n    /** @dev moves token rewards from the pool and puts it in a separate account for one token. Decreases energy.\n        @param _id -- token id\n      */\n    function flushTokenRewardsOf(uint256 _id) internal {\n        uint256 _rewards = getAvailableStakingFunds() * getActiveEnergyOfToken(_id) / getTotalStakingEnergy();\n        moneys[_id] += _rewards;\n        reservedFundsForStakers += _rewards;\n\n        // if out of energy\n        if(BTD.tokenIdToEnergy(activeNFTArray[_id]) + stakeStartTimestamp[_id] < block.timestamp){\n            BTD.setEnergy(_id, 0);\n            activeNFTArray[_id] = activeNFTArray[activeNFTArray.length - 1];\n            activeNFTArray.pop();\n        }\n        else {\n            stakeStartTimestamp[_id] = block.timestamp;\n            BTD.setEnergy(_id, BTD.tokenIdToEnergy(_id) - getActiveEnergyOfToken(_id));\n        }\n//        BTD.setEnergy(_id, BTD.tokenIdToEnergy(_id) - getActiveEnergyOfToken(_id));\n//        stakeStartTimestamp[_id] = block.timestamp;\n        // todo--confirm functionality. Should this  also move _id to inactive stakers? What calls this?\n\n\n    }\n\n    /** @dev Get energy used since timestamp for specific NFT\n        @param _id -- id of NFT. Must be previous owner to call\n      */\n    function getActiveEnergyOfToken(uint256 _id) public view returns(uint256){\n            uint256 _energy;\n            if(BTD.tokenIdToEnergy(_id) + stakeStartTimestamp[_id] > block.timestamp){\n                _energy = block.timestamp - stakeStartTimestamp[_id];\n            }\n            else {\n                _energy = BTD.tokenIdToEnergy(_id);\n            }\n            return _energy;\n    }\n\n    /** @dev Flush all staked NFTs that have used up their energy\n      */\n    function flushInactive() internal {\n        uint256 _id;\n        uint256 _rewards;\n        uint256 _totalEnergy = getTotalStakingEnergy(); // todo-- do we need to recalculate this in the for loop?\n        for(uint256 i = 0; i < activeNFTArray.length; i++){ // is activeNFTArray.length dynamic here?\n            if(BTD.tokenIdToEnergy(activeNFTArray[i]) + stakeStartTimestamp[i] < block.timestamp){\n//                _id = activeNFTArray[i];\n//                _rewards = getAvailableStakingFunds() * getActiveEnergyOfToken(_id) / _totalEnergy;\n//                moneys[_id] += _rewards;\n//                BTD.setEnergy(_id, 0);\n//                reservedFundsForStakers += _rewards;\n//                activeNFTArray[i] = activeNFTArray[activeNFTArray.length - 1];\n//                activeNFTArray.pop();\n                flushTokenRewardsOf(activeNFTArray[i]);\n            }\n        }\n    }\n\n    /** @dev Upkeep when receiving NFTs\n      */\n//    function stake(uint256 _id) external returns(bool) {\n    function onERC721Received(address _operator, address _from, uint256 _tokenId, bytes memory _data) external override returns(bytes4){\n        // receive tokens\n        // require to have power and correct dip status\n        // record previous owner\n        // set time record for when can remove token\n        // Create system for recording, distributing ETH\n        // Variables\n            // One timestamp for each NFT, mapping(uint256=>uint256), could be less if we wanted to include cash holding\n            // contract.balance - holdings (various) is used to cash out\n            // Each receive() updates which active NFTs and cashes out those that are inactive\n          require(BTD.tokenIdToIsWaitingToBuy(_tokenId)==false,\"Can't stake while waiting to buy dip.\");\n          require(BTD.tokenIdToEnergy(_tokenId) > 0, \"Not enough energy.\");\n          stakeStartTimestamp[_tokenId] = block.timestamp;\n          previousOwner[_tokenId] = _from; //tx.origin; //msg.sender;\n          activeNFTArray.push(_tokenId);\n\n        //        bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"));\n        return this.onERC721Received.selector;\n    }\n}\n\n// VRFConsumerBase,\ncontract BuyTheDipNFT is ERC721, KeeperCompatibleInterface, Ownable  {\n    uint256 public tokenCounter;\n\n    // Better to use a struct?\n    mapping(uint256 => uint8) public tokenIdToDipLevel; // Number of times NFT has bought the dip\n    mapping(uint256 => uint256) public tokenIdToDipValue; // Strike Price\n    mapping(uint256 => uint256) public tokenIdToDipPercent; // Percent Drop\n    mapping(uint256 => uint256) public tokenIdToStableCoin; // Amount of USDT purchased\n    mapping(uint256 => bool) public tokenIdToIsWaitingToBuy; // True/False if waiting to buy\n    mapping(uint256 => uint256) public tokenIdToEnergy; // True/False if waiting to buy\n\n//    uint256 internal fee;\n    uint256 public highestDip = ~uint256(0); //2**127 - 1; //todo: ~0\n    uint256 swapSlippage = 10000; // full slippage\n    uint256 public totalStableCoin = 0;\n\n    uint256 private immutable interval = 60;\n    uint256 private lastTimeStamp;\n    uint256 private MINCOINDEPOSIT = 10**14;\n    uint256 private EARLYWITHDRAWALFEEPERCENT = 300; // (out of 100*100)\n    uint256 private NORMALWITHDRAWALFEEPERCENT = 100; // (out of 100*100)\n    uint256 private MINTFEE = 10**12; // todo: add this to account and make sure can withdraw\n    uint256 private STABLECOINDUSTTHRESHOLD = 10**6/10; //10 cents\n    uint256 private PROFITRELEASETHRESHOLD = 10**16;\n    address public profitReceiver;\n    uint256 private contractStablecoinProfit;\n\n    ///////////////////////////////////////////\n    ///////     CONFIG INFORMATION     ////////\n    ///////////////////////////////////////////\n\n    // Stable Coin Lending Vault\n//    IyUSDC yUSDC = IyUSDC(0x26EA744E5B887E5205727f55dFBE8685e3b21951); // ETH/BSC/Polygon\n    IyUSDC yUSDC = IyUSDC(0x232dA19534032CBfE838e5f620C495D52061e947); // Rinkeby\n//    IyUSDC yUSDC = IyUSDC(0x597ad1e0c13bfe8025993d9e79c69e1c0233522e); // Ropstein\n//    IyUSDC yUSDC = IyUSDC(0xd6aD7a6750A7593E092a9B218d66C0A814a3436e); // BSC Testnet\n\n    //ETHEREUM MAIN\n//    IUniswapV2Router02 router = IUniswapV2Router02(); // Ethereum Mainnet\n//    address factory = address(); // Ethereum Mainnet\n//    address StableCoinAddress = address(); // USDT, Ethereum Mainnet\n//    address StableCoinAddress = address(); // USDC, Ethereum Mainnet\n\n\n//  Rinkeby\n    IUniswapV2Router02 router = IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D); // testnet\n    address factory = address(0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f); // testnet\n//    address StableCoinAddress = address(0x3B00Ef435fA4FcFF5C209a37d1f3dcff37c705aD); // USDT, Rinkeby\n    address StableCoinAddress = address(0x4DBCdF9B62e891a7cec5A2568C3F4FAF9E8Abe2b); // USDC, Rinkeby\n\n    // BSC TESTNET\n    // PanckeSwap site: https://pancake.kiemtienonline360.com/#/swap\n//    IUniswapV2Router02 router = IUniswapV2Router02(0xD99D1c33F9fC3444f8101754aBC46c52416550D1); // testnet\n//    address factory = address(0x6725F303b657a9451d8BA641348b6761A6CC7a17); // testnet\n//    address StableCoinAddress = address(0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7); // BUSD, BSC testnet --- WORKS\n//    address StableCoinAddress = address(0x7ef95a0FEE0Dd31b22626fA2e10Ee6A223F8a684); // USDT, BSC testnet --- WORKS\n\n    //BSC Main net\n//    IUniswapV2Router02 router = IUniswapV2Router02(0x10ED43C718714eb63d5aA57B78B54704E256024E); // BSC Main\n//    address factory = address(0xcA143Ce32Fe78f1f7019d7d551a6402fC5350c73); // BSC Main\n//    address StableCoinAddress = address(0x3B00Ef435fA4FcFF5C209a37d1f3dcff37c705aD); // BUSD? CONFIRM?\n\n    IERC20 usdc = IERC20(StableCoinAddress);\n\n//    AggregatorV3Interface internal priceFeed;\n//    AggregatorV3Interface internal priceFeed = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419) // ETH/USD, Ethereum mainnet\n    AggregatorV3Interface internal priceFeed = AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e); // ETH/USD, Rinkeby (Ethereum testnet)\n//    AggregatorV3Interface internal priceFeed = AggregatorV3Interface(0x9326BFA02ADD2366b30bacB125260Af641031331); // ETH/USD, Kovan (Ethereum testnet\n//    AggregatorV3Interface internal priceFeed = AggregatorV3Interface(0x2514895c72f50D8bd4B4F9b1110F0D6bD2c97526); // BNB/USD, bsc testnet\n//    AggregatorV3Interface internal priceFeed = AggregatorV3Interface(0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE); // BNB/USD, bsc mainnet\n\n\n    address public addy;\n\n    event CoinsReleasedToOwner(\n        uint256 amount,\n        uint256 date\n    );\n\n\nevent Received(address sender, uint amount);\n\n    modifier onlyKeeper {\n       require(true);\n       //require(msg.sender == owner); // ToDo: modify\n      _;\n   }\n\n//    constructor(address _VRFCoordinator, address _LinkToken, bytes32 _keyhash)\n    constructor()\n    public\n//    VRFConsumerBase(_VRFCoordinator, _LinkToken)\n    ERC721(\"WeBuyTheDip\", \"DIP\")\n    {\n        tokenCounter = 0;\n//        keyHash = _keyhash;\n//        fee = 0.1 * 10 ** 18;\n\n        //todo: remove, clean up\n//        priceFeed = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419) // ETH/USD, Ethereum mainnet\n//        priceFeed = AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e); // ETH/USD, Rinkeby (Ethereum testnet)\n//        priceFeed = AggregatorV3Interface(0x9326BFA02ADD2366b30bacB125260Af641031331); // ETH/USD, Kovan (Ethereum testnet\n//        priceFeed = AggregatorV3Interface(0x2514895c72f50D8bd4B4F9b1110F0D6bD2c97526); // BNB/USD, bsc testnet\n//        priceFeed = AggregatorV3Interface(0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE); // BNB/USD, bsc mainnet\n        profitReceiver = owner();\n        lastTimeStamp = block.timestamp;\n    }\n\n    // todo: Create liquidity pool for USDC on pancakeswap BSC testnet\n    function createCollectible(uint32 percentDrop)\n        public payable returns (bytes32){\n            require (msg.value + MINTFEE >= MINCOINDEPOSIT, \"Not enough native coin.\");\n            require(percentDrop < 100, \"Percent X must conform to: 10 <= X < 100\"); // todo: adjust 10% after testing\n\n            updateAllBalances();\n\n            contractStablecoinProfit += MINTFEE; // STABLECOIN or not?\n            uint256 newItemId = tokenCounter;\n            tokenCounter = tokenCounter + 1;\n            _safeMint(msg.sender, newItemId);\n\n            tokenIdToDipLevel[newItemId] = 0;\n            tokenIdToDipValue[newItemId] = (100 - percentDrop) * getLatestPrice() / 100;\n            tokenIdToDipPercent[newItemId] = percentDrop;\n\n//            tokenIdToStableCoin[newItemId] = swapETHForTokens(newItemId, msg.value);\n            (, uint256 stablecoinReceived) = UniswapHelpers._swapEthForTokens(msg.value, StableCoinAddress, address(this), router, swapSlippage);\n            tokenIdToStableCoin[newItemId] = msg.value * stablecoinReceived/ (msg.value + MINTFEE);\n            contractStablecoinProfit += MINTFEE * stablecoinReceived/ (msg.value + MINTFEE);\n\n            require(tokenIdToStableCoin[newItemId] > 0, \"Error! No tokens bought.\");\n\n            // Lend Stablecoin // todo--was having issues\n            lendStableCoin(tokenIdToStableCoin[newItemId]);\n\n            // Update highestDip if needed\n            if(tokenIdToDipValue[newItemId] > highestDip){\n                highestDip = tokenIdToDipValue[newItemId];\n            }\n\n            totalStableCoin += stablecoinReceived; //tokenIdToStableCoin[newItemId];\n            tokenIdToIsWaitingToBuy[newItemId] = true;\n\n\n            _setTokenURI(newItemId, tokenURI(newItemId));\n\n            if(newItemId==2) { // temp todo: remove\n//                IERC20(StableCoinAddress).approve(address(router), tokenIdToStableCoin[newItemId]);\n////                UniswapHelpers._swapExactTokensForETH(tokenIdToStableCoin[newItemId], StableCoinAddress, address(this), router, swapSlippage);\n//                (ETHSENT, USDTRECEIVED) = UniswapHelpers._swapExactTokensForETH(tokenIdToStableCoin[newItemId], StableCoinAddress, ownerOf(newItemId),  router, swapSlippage);\n                performUpkeepTest();\n            }\n\n//             emit requestedCollectible(newItemId);\n    }\n\n    // todo: combine shared features from createCollectible\n    /** @dev Buying the dip again on existing NFTs\n      */\n    function redip(uint256 _tokenId) public payable returns (bytes32) {\n        // Constrain deposit to range based on previous deposits? Or always absolute minimum?\n        require (msg.value >= MINCOINDEPOSIT, \"Not Enough BNB--or whatever\");\n        require(tokenIdToIsWaitingToBuy[_tokenId] == false, \"already in process of buying dip.\");\n\n        updateAllBalances();\n\n        tokenIdToDipValue[_tokenId] = (100 - tokenIdToDipPercent[_tokenId]) * getLatestPrice() / 100;\n        _setTokenURI(_tokenId, tokenURI(_tokenId));\n\n        (, tokenIdToStableCoin[_tokenId]) = UniswapHelpers._swapEthForTokens(msg.value, StableCoinAddress, address(this), router, swapSlippage);\n        require(tokenIdToStableCoin[_tokenId] > 0, \"Error! No tokens bought.\");\n\n        lendStableCoin(tokenIdToStableCoin[_tokenId]);\n\n        totalStableCoin += tokenIdToStableCoin[_tokenId];\n        tokenIdToIsWaitingToBuy[_tokenId] = true;\n\n        if(tokenIdToDipValue[_tokenId] > highestDip){\n            highestDip = tokenIdToDipValue[_tokenId];\n        }\n\n        // Emit LimitOrderCreated\n    }\n\n    function setTokenURI(uint256 tokenId, string memory _tokenURI) public {\n        require(\n            _isApprovedOrOwner(_msgSender(), tokenId),\n            \"ERC721: transfer caller is not owner nor approved\"\n        );\n        _setTokenURI(tokenId, _tokenURI);\n    }\n\n    // Required to receive ETH\n    receive() external payable {\n        emit Received(msg.sender, msg.value);\n    }\n\n\n    /** @dev Update balances with new interest values\n      */\n    function updateAllBalances() internal {\n        uint256 _addedTokens;\n        uint256 _newTotal = totalStableCoin;\n        uint256 _newIndividialBalance;\n        for(uint256 i = 0; i < tokenCounter;i++){\n            if(tokenIdToIsWaitingToBuy[i]==true){\n                _newIndividialBalance = getStableCoinBalanceGivenId(i);\n                // todo -- will thise ever be negative? If so, ramifications?\n                // todo -- Have threshold to ignore dust.\n                _addedTokens = _newIndividialBalance > tokenIdToStableCoin[i] ? _newIndividialBalance - tokenIdToStableCoin[i] : 0;\n                if(_addedTokens > STABLECOINDUSTTHRESHOLD ){\n                    tokenIdToStableCoin[i] = _newIndividialBalance;\n                    _newTotal += _addedTokens;\n                }\n            }\n        }\n        totalStableCoin = _newTotal;\n    }\n\n\n    // todo -- no need to recalculate balances after destroying\n    // protect existing accounts from sharing their rewards. This will be expensive!\n    function destroyAndRefund(uint256 _tokenId) public {\n        require(msg.sender == ownerOf(_tokenId), \"Must be token owner.\");\n        if (tokenIdToDipValue[_tokenId] <= getLatestPrice()){\n            buyTheDip(_tokenId);\n        }\n        // buy with penalty\n        else {\n            // get stablecoin amount after penalty\n            uint256 _withdrawal = retrieveLentStablecoins(_tokenId, EARLYWITHDRAWALFEEPERCENT);\n\n            IERC20(StableCoinAddress).approve(address(router), _withdrawal);\n            (uint256 ETHSent, uint256 USDTReceived) = UniswapHelpers._swapExactTokensForETH(_withdrawal, StableCoinAddress, ownerOf(_tokenId), router, swapSlippage);\n        }\n    }\n\n    /** @dev Get all NFTs owned by owner\n        @param _addy -- address to get list of NFTs of\n        @return -- list of token IDs owned by addy\n      */\n\n    function getAllNFTsByOwner(address _addy) public view returns (uint256[] memory){\n        uint256 total=0;\n\n        for(uint256 i=0;i<tokenCounter;i++){\n            if(ownerOf(i)==_addy){\n                total +=1;\n            }\n        }\n\n        uint256[] memory owned = new uint256[](total);\n        uint256 count=0;\n\n        for(uint256 i=0;i<tokenCounter;i++){\n            if(count>=total){ break; }\n            if(ownerOf(i)==_addy){\n                owned[count]=i;\n            }\n        }\n\n        return owned;\n    }\n\n\n    function buyTheDip(uint256 _tokenId) public onlyKeeper {\n        // Confirm price\n        require(tokenIdToDipValue[_tokenId] <= getLatestPrice(), 'Price above dipLevel');\n        uint256 initialBalance = address(this).balance;\n        uint256 _withdrawal = retrieveLentStablecoins(_tokenId, NORMALWITHDRAWALFEEPERCENT);\n\n        //todo: (ETHSent, USDTReceived) may be reversed\n        IERC20(StableCoinAddress).approve(address(router), _withdrawal);\n        (uint256 ETHSent, uint256 USDTReceived) = UniswapHelpers._swapExactTokensForETH(_withdrawal, StableCoinAddress, ownerOf(_tokenId), router, swapSlippage);\n\n        emit CoinsReleasedToOwner(USDTReceived, block.timestamp);\n        tokenIdToIsWaitingToBuy[_tokenId] = false;\n        if (tokenIdToDipLevel[_tokenId] < 7) { tokenIdToDipLevel[_tokenId] += 1; }\n\n        tokenIdToEnergy[_tokenId] += tokenIdToStableCoin[_tokenId] * tokenIdToDipPercent[_tokenId] **2 / 10000 * tokenIdToDipLevel[_tokenId]; // todo -- choose energy formula\n\n        //temp todo -- remove after testing\n        tokenIdToEnergy[_tokenId] = 10000;\n    }\n\n\n    function getLatestPrice() public view returns (uint256) {\n        (\n            uint80 roundID,\n            int price,\n            uint startedAt,\n            uint timeStamp,\n            uint80 answeredInRound\n        ) = priceFeed.latestRoundData();\n        // If the round is not complete yet, timestamp is 0\n        require(timeStamp > 0, \"Round not complete\");\n        return uint256(price);\n    }\n\n    function checkUpkeep(bytes calldata /* checkData */) external override returns (bool upkeepNeeded, bytes memory /* performData */) {\n        upkeepNeeded = (block.timestamp - lastTimeStamp) > interval && highestDip <= getLatestPrice();\n        // We don't use the checkData in this example. The checkData is defined when the Upkeep was registered.\n    }\n\n    // todo: change to external after testing\n    function performUpkeep(bytes calldata /* performData */) external override {\n        // todo\n    }\n\n    function performUpkeepTest() public {\n        lastTimeStamp = block.timestamp;\n//        uint256 _highestDip = ~uint256(0); // todo: should this be the global highestDip\n        uint256 latestPrice = getLatestPrice();\n\n        for(uint256 i=0;i<tokenCounter;i++){\n            if (tokenIdToIsWaitingToBuy[i] == true) {\n                if (tokenIdToDipValue[i] <= latestPrice ){\n                    buyTheDip(i);\n                }\n            }\n            else{\n                if ( tokenIdToDipValue[i] < highestDip) {\n                    highestDip = tokenIdToDipValue[i];\n                }\n            }\n        }\n    }\n\n    function tokenURI(uint256 _tokenId) public view virtual override returns (string memory) {\n        require(_exists(_tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n\n        bool isWaitingToBuy = tokenIdToIsWaitingToBuy[_tokenId];\n        uint256 _dipLevel = tokenIdToDipLevel[_tokenId];\n        uint256 _strikePrice = uint256(tokenIdToDipValue[_tokenId]);\n        uint256 _RADIUS = 78; // 80 - 2\n        uint256 _latestPrice = uint256(getLatestPrice());\n        uint256 _circleRadius;\n        if (!isWaitingToBuy) {\n            _circleRadius = _RADIUS;\n        }\n        else {\n            _circleRadius = (_latestPrice > ((_strikePrice)*100/(100 - tokenIdToDipPercent[_tokenId]))) ? 0 : uint256(_RADIUS*(100 - 100*(_latestPrice - _strikePrice)/_latestPrice)/100); // temp, check for negative\n        }\n        uint256 _energy = tokenIdToEnergy[_tokenId];\n\n        string memory mainImage;\n\n        // Waiting to buy dip\n        // todo: update this, as both are doing the circle\n        if (isWaitingToBuy==true){\n            mainImage = string(abi.encodePacked(\n//                \"%3Ccircle cx='175' cy='225' r='100' stroke='black' stroke-width='3' stroke-dasharray='15' fill='white' /%3E\",\n//                \"%3Ccircle cx='175' cy='225' r='\", uint2str(uint256(_circleRadius)) ,\"' stroke='' stroke-width='0' fill='red' /%3E\"\n//                \"%3Ccircle style='fill:#ffffff;stroke:#0045bb;stroke-width:1.38;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none' id='path846' cx='85' cy='85' r='100' /%3E\",\n//                \"%3Ccircle style='fill:#ffffff;stroke:#000000;stroke-width:4;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0.32' id='path846-5' cx='85' cy='85' r='\", uint2str(uint256(_circleRadius))  ,\"' /%3E\"\n\n                \"%3Ccircle style='fill:%23ffffff;stroke:%230045bb;stroke-width:1.38;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none' id='path846' cx='175' cy='200' r='100' /%3E \",\n                \"%3Ccircle style='fill:%23ffffff;stroke:%23000000;stroke-width:4;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0.32' id='path846-5' cx='175' cy='200' r='80' /%3E\",\n                \"%3Ccircle cx='175' cy='200' r='\", uint2str(_circleRadius) ,\"' stroke='' stroke-width='0' fill='green' /%3E\"\n\n            ));\n        }\n        // Dip Bought\n        else {\n            mainImage = string(abi.encodePacked(\n              // Star -- Temporary\n                // DIP\n                \"%3Ccircle style='fill:%23ffffff;stroke:%230045bb;stroke-width:1.38;stroke-linejoin:round;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none' cx='175' cy='200' r='100' /%3E \",\n                \"%3Ccircle style='fill:%23ffffff;stroke:%23000000;stroke-width:4;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:0.32' cx='175' cy='200' r='80' /%3E\",\n                \"%3Ccircle cx='175' cy='200' r='\", uint2str(_circleRadius) ,\"' stroke='' stroke-width='0' fill='green' /%3E\",\n\n\n                // Star\n//              \"%3Cpolygon points='200,110 140,298 290,178 110,178 260,298' \",\n//              \"style='fill:gold;stroke:purple;stroke-width:5;fill-rule:nonzero;' /%3E \",\n              // Checkmark\n              \"%3Cpath style='fill:none;stroke:%23ffffff;stroke-width:15;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1' d='m 139,218 20.4,23.7 56.9,-56.6' /%3E \",\n              // Congratulations (text)\n              \"%3Ctext x='55' y='318' fill='brown'%3ECongratulations! You bought the dip. %3C/text%3E\"\n            ));\n        }\n\n        string memory SVG = string(abi.encodePacked(\n            // Container\n           \"%3Csvg xmlns='http://www.w3.org/2000/svg' width='350' height='350'%3E %3Crect width='350' height='350' style='fill:rgb(255,255,255);stroke-width:3;stroke:rgb(0,0,0)' /%3E\",\n            // Green BG\n           \"%3Crect style='opacity:0.33;fill:%23157700;fill-opacity:0.33;stroke:%230b9100;stroke-width:1;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:normal' width='350' height='350' x='0' y='0' /%3E\",\n           // Green Frame\n           \"%3Crect style = 'opacity:0.6;mix-blend-mode:normal;fill:none;stroke:%230b9100;stroke-width:15;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:normal' id = 'rect926' width = '315' height = '315' x = '17' y = '17' /%3E %3Crect style = 'opacity:0.33;mix-blend-mode:normal;fill:none;stroke:%230b9100;stroke-width:1.82496;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:normal' id = 'rect926-4' width = '288' height = '288' x = '31' y = '31' /%3E\",\n           // Data\n                // Current Eth Price\n           \"%3Ctext x='35' y='45' font-weight='bold' fill='brown'%3ECurrent Price:%3C/text%3E\",\n           \"%3Ctext x='175' y='45' font-weight='normal' fill='brown'%3E$\", uint2str(uint256(getLatestPrice()), 8, 2), \"%3C/text%3E\",\n                // Strike Price\n           \"%3Ctext x='35' y='60'  font-weight='bold' fill='brown'%3EStrike Price:%3C/text%3E\",\n           \"%3Ctext x='175' y='60' font-weight='normal' fill='brown'%3E$\", uint2str(uint256(_strikePrice), 8, 2), \"%3C/text%3E\",\n                // Stable Coin Invested (conversion)\n           \"%3Ctext x='35' y='75'  font-weight='bold' fill='brown'%3EUSDC Invested:%3C/text%3E\"\n            ));\n\n            // Stake-deepness error, so breaking this up\n            SVG = string(abi.encodePacked(SVG,\n//           \"%3Ctext x='175' y='75' font-weight='normal' fill='brown'%3E$\", uint2str(uint256(tokenIdToStableCoin[_tokenId]), 6, 2), \" %3C/text%3E\",\n           \"%3Ctext x='175' y='75' font-weight='normal' fill='brown'%3E$\", uint2str(lendingBalance(_tokenId), 6, 2), \" %3C/text%3E\",\n\n                // Energy\n           \"%3Ctext x='35' y='90' font-weight='bold' fill='brown'%3EEnergy:%3C/text%3E\",\n           \"%3Ctext x='175' y='90' font-weight='normal' fill='brown'%3E\", uint2str(_energy), \"%3C/text%3E\",\n\n//                //  TEMPORARY\n//           \"%3Ctext x='35' y='115' font-weight='bold' fill='brown'%3EACTIVE LENDING:%3C/text%3E\",\n//           \"%3Ctext x='175' y='115' font-weight='normal' fill='brown'%3E\", uint2str(lendingBalance(_tokenId)), \"%3C/text%3E\",\n//\n\n           ///// Top Middle\n                // Token Id -- Consider putting in top Right\n//           \"%3Ctext x='35' y='135'  font-weight='bold' fill='brown'%3EToken ID:%3C/text%3E\",\n//           \"%3Ctext x='175' y='135' font-weight='normal' fill='brown'%3E\", uint2str(uint256(_tokenId)), \"%3C/text%3E\",\n           \"%3Ctext x='50%' y='23' text-anchor='middle' font-weight='bold' font-size='1.1em' fill='white'%3E\", uint2str(uint256(_tokenId)), \"%3C/text%3E\",\n\n          ///// Bottom Middle\n           \"%3Ctext x='50%' y='338' text-anchor='middle' font-weight='bold' font-size='1.1em' fill='white'%3E ETHEREUM %3C/text%3E\",\n\n\n           // dominant-baseline='middle'\n\n\n            // Main image\n            mainImage,\n            // Error Message\n            \"Unsupported.\",\n            \"%3C/svg%3E\"\n            ));\n\n//            SVG = '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"500\" width=\"500\"> <circle cx=\"250\" cy=\"250\" r=\"200\" stroke=\"black\" stroke-width=\"3\" fill=\"blue\" />  </svg>';\n\n\n        if (_dipLevel >= 0 && _dipLevel < 2){\n            return formatTokenURI(_tokenId, svgToImageURI(SVG));\n        }\n        else {\n            return \"\";\n        }\n    }\n\n\n    function svgToImageURI(string memory svg) public pure returns (string memory) {\n        bool ENCODE = false;\n        string memory baseURL = \"data:image/svg+xml;base64,\";\n\n        if (!ENCODE) {\n            baseURL = \"data:image/svg+xml,\";\n            return string(abi.encodePacked(baseURL,svg));\n        }\n\n        //        string memory svgBase64Encoded = Base64.encode((string(abi.encodePacked(svg)))); // bytes?\n        string memory svgBase64Encoded = Base64.encode(svg); // bytes?\n        return string(abi.encodePacked(baseURL,svgBase64Encoded));\n    }\n\n    function setEnergy(uint256 _tokenId, uint256 _energy) external { // todo: Limit callers to Dip_Staking address\n        require(_energy <= tokenIdToEnergy[_tokenId], \"Can't increase energy\"); // set equal??? check in other places\n        tokenIdToEnergy[_tokenId] = _energy;\n    }\n\n\n    function setDipLevel(uint256 _tokenId, uint8 _dipLevel) public onlyOwner {\n        require(_dipLevel >=0 && _dipLevel < 8, \"Invalid Dip Level\");\n        require(_tokenId < tokenCounter, \"Invalid tokenId\");\n//        bytes32 _requestId = tokenIdToRequestId[_tokenId];\n        tokenIdToDipLevel[_tokenId] = _dipLevel;\n    }\n\n\n    function formatTokenURI(uint256 _tokenId, string memory imageURI) public view returns (string memory) {\n        bool ENCODE = true;\n\n        if (ENCODE){\n            return string(\n                abi.encodePacked(\n                    \"data:application/json;base64,\",\n                    Base64.encode(\n                        string(\n                            abi.encodePacked(\n\n                                '{\"description\": \"The NFT limit order that earns money!\"',\n                                ', \"external_url\": \"https://webuythedip.com\"',\n                                ', \"image\": \"',\n                                 imageURI, '\"',\n                                ', \"name\": \"BuyTheDip\"',\n                                // attributes\n                                ', \"attributes\": [{\"display_type\": \"number\", \"trait_type\": \"Dip Level\", \"value\": ',\n                                tokenIdToDipLevel[_tokenId]==0 ? \"0\": \"1\",  ' }',\n                                ', {\"display_type\": \"number\", \"trait_type\": \"Dip Value\", \"value\": ',\n                                uint2str(uint(tokenIdToDipValue[_tokenId])),   ' }',\n                                ']', // End Attributes\n                                '}'\n                            )\n                        )\n                    )\n                )\n            );\n        }\n        // This creates bad JSON file, but showed up on Opensea--ONCE!\n        else {\n            // todo: clean this up\n//            return string(\n//                abi.encodePacked(\n//                    'data:application/json,',\n//                    \"{'description': 'The NFT limit order that earns money!'\",\n//                    \", 'external_url': 'https://webuythedip.com'\",\n//                    \", 'image': '\",\n//                     imageURI, \"'\",\n//                    \", 'name': 'BuyTheDip'\",\n//                    // attributes\n//                    \", 'attributes': [{'display_type': 'number', 'trait_type': 'Dip Level', 'value': \",\n//                    tokenIdToDipLevel[_tokenId]==0 ? '0': '1',  \" }\",\n//                    \", {'display_type': 'number', 'trait_type': 'Dip Value', 'value': \",\n//                    uint2str(uint(tokenIdToDipValue[_tokenId])),   \" }\",\n//                    \"]\", // End Attributes\n//                    \"}\"\n//                )\n//            );\n        }\n    }\n\n    function uint2str(uint256 _i, uint256 _totalDecimals, uint256 _decimalPlaces) internal pure returns (string memory _uintAsString) {\n        string memory first = uint2str(_i / 10**_totalDecimals);\n        string memory second = uint2str((_i % 10**_totalDecimals)/ 10**(_totalDecimals - _decimalPlaces));\n        return string(abi.encodePacked(first, \".\", second));\n    }\n\n    function uint2str(uint _i) internal pure returns (string memory _uintAsString) {\n        if (_i == 0) {\n            return \"0\";\n        }\n        uint j = _i;\n        uint len;\n        while (j != 0) {\n            len++;\n            j /= 10;\n        }\n        bytes memory bstr = new bytes(len);\n        uint k = len - 1;\n        while (_i != 0) {\n            bstr[k--] = bytes1(uint8(48 + _i % 10));\n            _i /= 10;\n        }\n        return string(bstr);\n    }\n\n    /////////////////////////////\n    /////////// yUDSC ///////////\n    /////////////////////////////\n\n  // todo -- Test this out\n  // todo -- Incorporate into buying dip and buying NFT (2 times)\n//  function save(uint amount) internal {\n//    usdc.transferFrom(msg.sender, address(this), amount);\n//    _save(amount);\n//  }\n\n\n//// two functions. One to retrieve with fee. one to retrieve while buying dip\n//  function retrieveLentStablecoins(uint256 _tokenId) internal returns(uint256) {\n//    uint256 amount = tokenIdToStableCoin[_tokenId];\n//    uint256 balanceShares = yUSDC.balanceOf(address(this));\n//    uint256 shareOfShares = amount * balanceShares / totalStableCoin;\n//    totalStableCoin = totalStableCoin - amount; // amount invested, not active balance\n//    yUSDC.withdraw(shareOfShares);\n//    usdc.transfer(address(this), shareOfShares);\n////    tokenIdToStableCoin[_tokenId] = 0;\n////    uint256 balanceUSDC = usdc.balanceOf(address(this));\n////    if(balanceUSDC > 0) {\n////      _save(balanceUSDC);\n////    }\n//    return shareOfShares;\n//  }\n\n  // todo -- create mechanism for retrieving profits. Do we keep profits in the vault?\n    // Profits are going to be sent to the staking contract. For simplicity, in native coin.\n  function retrieveLentStablecoins(uint256 _tokenId, uint256 _feePercent) internal returns(uint256) {\n        uint256 amount = tokenIdToStableCoin[_tokenId];\n        uint256 balanceShares = yUSDC.balanceOf(address(this));\n        uint256 shareOfShares = amount * balanceShares / totalStableCoin;\n\n        tokenIdToStableCoin[_tokenId] = 0;\n        totalStableCoin = totalStableCoin - amount; // amount invested, not active balance\n\n        yUSDC.withdraw(shareOfShares*(10000 - _feePercent)/10000);\n        usdc.transfer(address(this), shareOfShares*(10000 - _feePercent)/10000);\n\n        // todo -- update site profits\n        contractStablecoinProfit += shareOfShares*_feePercent/10000;\n\n        releaseProfits();\n\n        return shareOfShares*(10000 - _feePercent)/10000;\n  }\n\n  function releaseProfits() internal {\n      // address profitReceiver\n      uint256 profit = contractStablecoinProfit;\n      contractStablecoinProfit = 0;\n      if ( profit > PROFITRELEASETHRESHOLD) {\n          withdrawProfitsFromLending(); // todo--confirm correct function\n          (bool res,) = profitReceiver.call{value : profit}(\"Releasing profits.\");\n          require(res, \"Could not release profits.\"); // todo -- what about gas fees?\n      }\n  }\n\n//    function prematureStablecoinWithdrawal(uint256 _tokenId) internal returns(uint256) {\n//        uint256 amount = tokenIdToStableCoin[_tokenId];\n////        address recipient = ownerOf(_tokenId); // use if want to send stablecoin, not native coin\n//        address recipient = address(this);\n//        uint256 balanceShares = yUSDC.balanceOf(address(this));\n//        uint256 shareOfShares = amount * balanceShares / totalStableCoin;\n//\n//        tokenIdToStableCoin[_tokenId] = 0;\n//        totalStableCoin = totalStableCoin - amount; // amount invested, not active balance\n//\n//        yUSDC.withdraw(shareOfShares*(10000 - EARLYWITHDRAWALFEEPERCENT)/10000);\n//        usdc.transfer(recipient, shareOfShares*(10000 - EARLYWITHDRAWALFEEPERCENT)/10000);\n//        return shareOfShares*(10000 - EARLYWITHDRAWALFEEPERCENT)/10000;\n//  }\n\n    function withdrawProfitsFromLending() internal {\n//        require(msg.sender == owner(), \"must be owner\");\n        uint256 balanceShares = yUSDC.balanceOf(address(this));\n        uint256 shareOfShares = contractStablecoinProfit * balanceShares / totalStableCoin;\n\n        totalStableCoin = totalStableCoin - contractStablecoinProfit; // amount invested, not active balance\n        contractStablecoinProfit = 0;\n\n        yUSDC.withdraw(shareOfShares);\n        usdc.transfer(msg.sender, shareOfShares);\n\n        // emit event\n  }\n\n\n  function lendStableCoin(uint256 _amount) internal {\n    usdc.approve(address(yUSDC), _amount);\n    yUSDC.deposit(_amount);\n  }\n\n  function getStableCoinBalanceGivenId(uint256 _tokenId) internal view returns(uint256) {\n    uint256 amount = tokenIdToStableCoin[_tokenId];\n    uint256 balanceShares = yUSDC.balanceOf(address(this));\n    uint256 shareOfShares = totalStableCoin==0 ? 0 : amount * balanceShares / totalStableCoin;\n    return shareOfShares;\n }\n\n\n  function lendingBalance(uint256 _tokenId) internal view returns(uint256) {\n//    uint256 price = yUSDC.getPricePerFullShare();\n    uint256 price = 1;\n    uint256 balanceShares = yUSDC.balanceOf(address(this));\n    uint256 amount = tokenIdToStableCoin[_tokenId];\n    return totalStableCoin==0 ? 0 : balanceShares * price * amount / totalStableCoin;\n  }\n\n}\n",
  "sourceMap": "16451:31254:20:-:0;;;-1:-1:-1;;17137:39:20;;17230:5;17207:28;;17174:1;17258:34;;17336:2;17299:39;;17412:6;17379:39;;17468:3;17424:47;;17542:3;17497:48;;17597:6;17571:32;;17707:8;17665:50;;17773:6;17732:47;;18137:65;;;-1:-1:-1;;;;;;18137:65:20;;;18159:42;18137:65;;;;18700:90;;;;;18747:42;18700:90;;;18807:69;;;;;18833:42;18807:69;;;18997:79;;;;;19033:42;18997:79;;;;;19946:39;;;;;-1:-1:-1;;;;;19967:17:20;;;;19946:39;;;;;;20184:108;;;;;;20249:42;20184:108;;;21128:913;;;;;;;;;-1:-1:-1;3577:369:4;;;;;;;;;;;-1:-1:-1;;;3577:369:4;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3577:369:4;;;;;768:40:1;-1:-1:-1;;;768:18:1;:40::i;:::-;3651:13:4;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;3674:17:4;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;3779:40:4;-1:-1:-1;;;3779:18:4;:40::i;:::-;3829:49;-1:-1:-1;;;3829:18:4;:49::i;:::-;3888:51;-1:-1:-1;;;3888:18:4;:51::i;:::-;-1:-1:-1;884:17:0;;-1:-1:-1;904:12:0;:10;:12::i;:::-;926:6;:18;;-1:-1:-1;;;;;;926:18:0;-1:-1:-1;;;;;926:18:0;;;;;;;;959:43;;926:18;;-1:-1:-1;926:18:0;-1:-1:-1;;959:43:0;;-1:-1:-1;;959:43:0;-1:-1:-1;21266:1:20::1;21251:12;:16:::0;21986:7:::1;:5;:7::i;:::-;21969:14;:24:::0;;-1:-1:-1;;;;;;21969:24:20::1;-1:-1:-1::0;;;;;21969:24:20;;;::::1;::::0;;;::::1;::::0;;22019:15:::1;22003:13;:31:::0;16451:31254;;1507:198:1;-1:-1:-1;;;;;;1590:25:1;;;;;1582:66;;;;;-1:-1:-1;;;1582:66:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1658:33:1;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1658:40:1;1694:4;1658:40;;;1507:198::o;598:104:10:-;685:10;598:104;:::o;1085:85:0:-;1157:6;;-1:-1:-1;;;;;1157:6:0;1085:85;:::o;16451:31254:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16451:31254:20;;;-1:-1:-1;16451:31254:20;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/BuyTheDipNFT.sol",
  "type": "contract"
}